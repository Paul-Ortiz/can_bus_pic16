

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Jan 01 01:11:14 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48     0000                     
    49                           ; Generated 22/03/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F877A Definitions
    81                           ; 
    82                           ; SFR Addresses
    83     0000                     	;# 
    84     0001                     	;# 
    85     0002                     	;# 
    86     0003                     	;# 
    87     0004                     	;# 
    88     0005                     	;# 
    89     0006                     	;# 
    90     0007                     	;# 
    91     0008                     	;# 
    92     0009                     	;# 
    93     000A                     	;# 
    94     000B                     	;# 
    95     000C                     	;# 
    96     000D                     	;# 
    97     000E                     	;# 
    98     000E                     	;# 
    99     000F                     	;# 
   100     0010                     	;# 
   101     0011                     	;# 
   102     0012                     	;# 
   103     0013                     	;# 
   104     0014                     	;# 
   105     0015                     	;# 
   106     0015                     	;# 
   107     0016                     	;# 
   108     0017                     	;# 
   109     0018                     	;# 
   110     0019                     	;# 
   111     001A                     	;# 
   112     001B                     	;# 
   113     001B                     	;# 
   114     001C                     	;# 
   115     001D                     	;# 
   116     001E                     	;# 
   117     001F                     	;# 
   118     0081                     	;# 
   119     0085                     	;# 
   120     0086                     	;# 
   121     0087                     	;# 
   122     0088                     	;# 
   123     0089                     	;# 
   124     008C                     	;# 
   125     008D                     	;# 
   126     008E                     	;# 
   127     0091                     	;# 
   128     0092                     	;# 
   129     0093                     	;# 
   130     0094                     	;# 
   131     0098                     	;# 
   132     0099                     	;# 
   133     009C                     	;# 
   134     009D                     	;# 
   135     009E                     	;# 
   136     009F                     	;# 
   137     010C                     	;# 
   138     010D                     	;# 
   139     010E                     	;# 
   140     010F                     	;# 
   141     018C                     	;# 
   142     018D                     	;# 
   143     0000                     	;# 
   144     0001                     	;# 
   145     0002                     	;# 
   146     0003                     	;# 
   147     0004                     	;# 
   148     0005                     	;# 
   149     0006                     	;# 
   150     0007                     	;# 
   151     0008                     	;# 
   152     0009                     	;# 
   153     000A                     	;# 
   154     000B                     	;# 
   155     000C                     	;# 
   156     000D                     	;# 
   157     000E                     	;# 
   158     000E                     	;# 
   159     000F                     	;# 
   160     0010                     	;# 
   161     0011                     	;# 
   162     0012                     	;# 
   163     0013                     	;# 
   164     0014                     	;# 
   165     0015                     	;# 
   166     0015                     	;# 
   167     0016                     	;# 
   168     0017                     	;# 
   169     0018                     	;# 
   170     0019                     	;# 
   171     001A                     	;# 
   172     001B                     	;# 
   173     001B                     	;# 
   174     001C                     	;# 
   175     001D                     	;# 
   176     001E                     	;# 
   177     001F                     	;# 
   178     0081                     	;# 
   179     0085                     	;# 
   180     0086                     	;# 
   181     0087                     	;# 
   182     0088                     	;# 
   183     0089                     	;# 
   184     008C                     	;# 
   185     008D                     	;# 
   186     008E                     	;# 
   187     0091                     	;# 
   188     0092                     	;# 
   189     0093                     	;# 
   190     0094                     	;# 
   191     0098                     	;# 
   192     0099                     	;# 
   193     009C                     	;# 
   194     009D                     	;# 
   195     009E                     	;# 
   196     009F                     	;# 
   197     010C                     	;# 
   198     010D                     	;# 
   199     010E                     	;# 
   200     010F                     	;# 
   201     018C                     	;# 
   202     018D                     	;# 
   203     0000                     	;# 
   204     0001                     	;# 
   205     0002                     	;# 
   206     0003                     	;# 
   207     0004                     	;# 
   208     0005                     	;# 
   209     0006                     	;# 
   210     0007                     	;# 
   211     0008                     	;# 
   212     0009                     	;# 
   213     000A                     	;# 
   214     000B                     	;# 
   215     000C                     	;# 
   216     000D                     	;# 
   217     000E                     	;# 
   218     000E                     	;# 
   219     000F                     	;# 
   220     0010                     	;# 
   221     0011                     	;# 
   222     0012                     	;# 
   223     0013                     	;# 
   224     0014                     	;# 
   225     0015                     	;# 
   226     0015                     	;# 
   227     0016                     	;# 
   228     0017                     	;# 
   229     0018                     	;# 
   230     0019                     	;# 
   231     001A                     	;# 
   232     001B                     	;# 
   233     001B                     	;# 
   234     001C                     	;# 
   235     001D                     	;# 
   236     001E                     	;# 
   237     001F                     	;# 
   238     0081                     	;# 
   239     0085                     	;# 
   240     0086                     	;# 
   241     0087                     	;# 
   242     0088                     	;# 
   243     0089                     	;# 
   244     008C                     	;# 
   245     008D                     	;# 
   246     008E                     	;# 
   247     0091                     	;# 
   248     0092                     	;# 
   249     0093                     	;# 
   250     0094                     	;# 
   251     0098                     	;# 
   252     0099                     	;# 
   253     009C                     	;# 
   254     009D                     	;# 
   255     009E                     	;# 
   256     009F                     	;# 
   257     010C                     	;# 
   258     010D                     	;# 
   259     010E                     	;# 
   260     010F                     	;# 
   261     018C                     	;# 
   262     018D                     	;# 
   263     0000                     	;# 
   264     0001                     	;# 
   265     0002                     	;# 
   266     0003                     	;# 
   267     0004                     	;# 
   268     0005                     	;# 
   269     0006                     	;# 
   270     0007                     	;# 
   271     0008                     	;# 
   272     0009                     	;# 
   273     000A                     	;# 
   274     000B                     	;# 
   275     000C                     	;# 
   276     000D                     	;# 
   277     000E                     	;# 
   278     000E                     	;# 
   279     000F                     	;# 
   280     0010                     	;# 
   281     0011                     	;# 
   282     0012                     	;# 
   283     0013                     	;# 
   284     0014                     	;# 
   285     0015                     	;# 
   286     0015                     	;# 
   287     0016                     	;# 
   288     0017                     	;# 
   289     0018                     	;# 
   290     0019                     	;# 
   291     001A                     	;# 
   292     001B                     	;# 
   293     001B                     	;# 
   294     001C                     	;# 
   295     001D                     	;# 
   296     001E                     	;# 
   297     001F                     	;# 
   298     0081                     	;# 
   299     0085                     	;# 
   300     0086                     	;# 
   301     0087                     	;# 
   302     0088                     	;# 
   303     0089                     	;# 
   304     008C                     	;# 
   305     008D                     	;# 
   306     008E                     	;# 
   307     0091                     	;# 
   308     0092                     	;# 
   309     0093                     	;# 
   310     0094                     	;# 
   311     0098                     	;# 
   312     0099                     	;# 
   313     009C                     	;# 
   314     009D                     	;# 
   315     009E                     	;# 
   316     009F                     	;# 
   317     010C                     	;# 
   318     010D                     	;# 
   319     010E                     	;# 
   320     010F                     	;# 
   321     018C                     	;# 
   322     018D                     	;# 
   323     0000                     	;# 
   324     0001                     	;# 
   325     0002                     	;# 
   326     0003                     	;# 
   327     0004                     	;# 
   328     0005                     	;# 
   329     0006                     	;# 
   330     0007                     	;# 
   331     0008                     	;# 
   332     0009                     	;# 
   333     000A                     	;# 
   334     000B                     	;# 
   335     000C                     	;# 
   336     000D                     	;# 
   337     000E                     	;# 
   338     000E                     	;# 
   339     000F                     	;# 
   340     0010                     	;# 
   341     0011                     	;# 
   342     0012                     	;# 
   343     0013                     	;# 
   344     0014                     	;# 
   345     0015                     	;# 
   346     0015                     	;# 
   347     0016                     	;# 
   348     0017                     	;# 
   349     0018                     	;# 
   350     0019                     	;# 
   351     001A                     	;# 
   352     001B                     	;# 
   353     001B                     	;# 
   354     001C                     	;# 
   355     001D                     	;# 
   356     001E                     	;# 
   357     001F                     	;# 
   358     0081                     	;# 
   359     0085                     	;# 
   360     0086                     	;# 
   361     0087                     	;# 
   362     0088                     	;# 
   363     0089                     	;# 
   364     008C                     	;# 
   365     008D                     	;# 
   366     008E                     	;# 
   367     0091                     	;# 
   368     0092                     	;# 
   369     0093                     	;# 
   370     0094                     	;# 
   371     0098                     	;# 
   372     0099                     	;# 
   373     009C                     	;# 
   374     009D                     	;# 
   375     009E                     	;# 
   376     009F                     	;# 
   377     010C                     	;# 
   378     010D                     	;# 
   379     010E                     	;# 
   380     010F                     	;# 
   381     018C                     	;# 
   382     018D                     	;# 
   383                           
   384                           	psect	idataBANK0
   385     0DA0                     __pidataBANK0:
   386                           
   387                           ;initializer for _stmp
   388     0DA0  3401               	retlw	1
   389     0DA1  3401               	retlw	1
   390     0DA2  3402               	retlw	2
   391     0DA3  3403               	retlw	3
   392     0DA4  3400               	retlw	0
   393     0DA5  3405               	retlw	5
   394     0DA6  3406               	retlw	6
   395     0DA7  3407               	retlw	7
   396     0013                     _SSPBUF	set	19
   397     0014                     _SSPCON	set	20
   398     00A7                     _WCOL	set	167
   399     00A4                     _CKP	set	164
   400     00A5                     _SSPEN	set	165
   401     0043                     _RD3	set	67
   402     0040                     _RD0	set	64
   403     0094                     _SSPSTAT	set	148
   404     0088                     _TRISDbits	set	136
   405     04A0                     _BF	set	1184
   406     043C                     _TRISC4	set	1084
   407     043D                     _TRISC5	set	1085
   408     043B                     _TRISC3	set	1083
   409     042D                     _TRISA5	set	1069
   410     04A6                     _CKE	set	1190
   411     04A7                     _SMP	set	1191
   412     0440                     _TRISD0	set	1088
   413                           
   414                           	psect	cinit
   415     07E6                     start_initialization:	
   416                           ; #config settings
   417                           
   418     07E6                     __initialization:
   419                           
   420                           ; Initialize objects allocated to BANK0
   421     07E6  1383               	bcf	3,7	;select IRP bank0
   422     07E7  306D               	movlw	low (__pdataBANK0+8)
   423     07E8  00FD               	movwf	btemp+-1
   424     07E9  300D               	movlw	high __pidataBANK0
   425     07EA  00FE               	movwf	btemp
   426     07EB  30A0               	movlw	low __pidataBANK0
   427     07EC  00FF               	movwf	btemp+1
   428     07ED  3065               	movlw	low __pdataBANK0
   429     07EE  0084               	movwf	4
   430     07EF  120A  158A  25EF  120A  118A  	fcall	init_ram0
   431                           
   432                           ; Clear objects allocated to BANK0
   433     07F4  01DD               	clrf	__pbssBANK0& (0+127)
   434     07F5  01DE               	clrf	(__pbssBANK0+1)& (0+127)
   435     07F6  01DF               	clrf	(__pbssBANK0+2)& (0+127)
   436     07F7  01E0               	clrf	(__pbssBANK0+3)& (0+127)
   437     07F8  01E1               	clrf	(__pbssBANK0+4)& (0+127)
   438     07F9  01E2               	clrf	(__pbssBANK0+5)& (0+127)
   439     07FA  01E3               	clrf	(__pbssBANK0+6)& (0+127)
   440     07FB  01E4               	clrf	(__pbssBANK0+7)& (0+127)
   441     07FC                     end_of_initialization:	
   442                           ;End of C runtime variable initialization code
   443                           
   444     07FC                     __end_of__initialization:
   445     07FC  0183               	clrf	3
   446     07FD  120A  118A  2BAF   	ljmp	_main	;jump to C main() function
   447                           
   448                           	psect	bssBANK0
   449     005D                     __pbssBANK0:
   450     005D                     _nReservedTx:
   451     005D                     	ds	1
   452     005E                     _mcpMode:
   453     005E                     	ds	1
   454     005F                     _can_id:
   455     005F                     	ds	4
   456     0063                     _rtr:
   457     0063                     	ds	1
   458     0064                     _ext_flg:
   459     0064                     	ds	1
   460                           
   461                           	psect	dataBANK0
   462     0065                     __pdataBANK0:
   463     0065                     _stmp:
   464     0065                     	ds	8
   465                           
   466                           	psect	inittext
   467     0DEB                     init_fetch0:	
   468                           ;	Called with low address in FSR and high address in W
   469                           
   470     0DEB  087E               	movf	btemp,w
   471     0DEC  008A               	movwf	10
   472     0DED  087F               	movf	btemp+1,w
   473     0DEE  0082               	movwf	2
   474     0DEF                     init_ram0:	
   475                           ;Called with:
   476                           ;	high address of idata address in btemp 
   477                           ;	low address of idata address in btemp+1 
   478                           ;	low address of data in FSR
   479                           ;	high address + 1 of data in btemp-1
   480                           
   481     0DEF  120A  158A  25EB  120A  158A  	fcall	init_fetch0
   482     0DF4  0080               	movwf	0
   483     0DF5  0A84               	incf	4,f
   484     0DF6  0804               	movf	4,w
   485     0DF7  067D               	xorwf	btemp+-1,w
   486     0DF8  1903               	btfsc	3,2
   487     0DF9  3400               	retlw	0
   488     0DFA  0AFF               	incf	btemp+1,f
   489     0DFB  1903               	btfsc	3,2
   490     0DFC  0AFE               	incf	btemp,f
   491     0DFD  2DEF               	goto	init_ram0
   492                           
   493                           	psect	cstackCOMMON
   494     0071                     __pcstackCOMMON:
   495     0071                     ?_readRxTxStatus:
   496     0071                     ?_checkReceive:	
   497                           ; 1 bytes @ 0x0
   498                           
   499     0071                     ?_WriteSPI:	
   500                           ; 1 bytes @ 0x0
   501                           
   502     0071                     ??_WriteSPI:	
   503                           ; 1 bytes @ 0x0
   504                           
   505     0071                     ?_ReadSPI:	
   506                           ; 1 bytes @ 0x0
   507                           
   508     0071                     ??_ReadSPI:	
   509                           ; 1 bytes @ 0x0
   510                           
   511     0071                     ?_getMode:	
   512                           ; 1 bytes @ 0x0
   513                           
   514     0071                     ?_mcp2515_setCANCTRL_Mode:	
   515                           ; 1 bytes @ 0x0
   516                           
   517     0071                     ?_mcp2515_requestNewMode:	
   518                           ; 1 bytes @ 0x0
   519                           
   520     0071                     ?_mcp2515_start_transmit:	
   521                           ; 1 bytes @ 0x0
   522                           
   523     0071                     ?_OpenSPI:	
   524                           ; 1 bytes @ 0x0
   525                           
   526     0071                     ?_init_CS:	
   527                           ; 1 bytes @ 0x0
   528                           
   529     0071                     ??_init_CS:	
   530                           ; 1 bytes @ 0x0
   531                           
   532     0071                     ?_main:	
   533                           ; 1 bytes @ 0x0
   534                           
   535     0071                     ?_txCtrlReg:	
   536                           ; 1 bytes @ 0x0
   537                           
   538     0071                     ??_txCtrlReg:	
   539                           ; 1 bytes @ 0x0
   540                           
   541     0071                     ?_txSidhToRTS:	
   542                           ; 1 bytes @ 0x0
   543                           
   544     0071                     ??_txSidhToRTS:	
   545                           ; 1 bytes @ 0x0
   546                           
   547     0071                     ?_txSidhToTxLoad:	
   548                           ; 1 bytes @ 0x0
   549                           
   550     0071                     ??_txSidhToTxLoad:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0071                     ?_txIfFlag:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0071                     ??_txIfFlag:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     0071                     ?_txStatusPendingFlag:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0071                     ??_txStatusPendingFlag:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0071                     ?_mcp2515_reset:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0071                     ?_mcp2515_readRegister:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0071                     ?_mcp2515_readStatus:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0071                     ?_setMode:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     0071                     ?_mcp2515_initCANBuffers:	
   578                           ; 1 bytes @ 0x0
   579                           
   580     0071                     ?_mcp2515_id_to_buf:	
   581                           ; 1 bytes @ 0x0
   582                           
   583     0071                     ?_mcp2515_getNextFreeTXBuf:	
   584                           ; 1 bytes @ 0x0
   585                           
   586     0071                     ?_getCanId:	
   587                           ; 1 bytes @ 0x0
   588                           
   589     0071                     OpenSPI@bus_mode:	
   590                           ; 4 bytes @ 0x0
   591                           
   592     0071                     WriteSPI@data_out:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0071                     mcp2515_id_to_buf@id:	
   596                           ; 1 bytes @ 0x0
   597                           
   598                           
   599                           ; 4 bytes @ 0x0
   600     0071                     	ds	1
   601     0072                     ??_mcp2515_reset:
   602     0072                     ??_mcp2515_readRegister:	
   603                           ; 1 bytes @ 0x1
   604                           
   605     0072                     ?_mcp2515_setRegister:	
   606                           ; 1 bytes @ 0x1
   607                           
   608     0072                     ??_mcp2515_readStatus:	
   609                           ; 1 bytes @ 0x1
   610                           
   611     0072                     ?_mcp2515_read_canMsg:	
   612                           ; 1 bytes @ 0x1
   613                           
   614     0072                     mcp2515_readRegister@address:	
   615                           ; 1 bytes @ 0x1
   616                           
   617     0072                     mcp2515_setRegister@value:	
   618                           ; 1 bytes @ 0x1
   619                           
   620     0072                     mcp2515_readStatus@i:	
   621                           ; 1 bytes @ 0x1
   622                           
   623     0072                     mcp2515_read_canMsg@id:	
   624                           ; 1 bytes @ 0x1
   625                           
   626     0072                     OpenSPI@smp_phase:	
   627                           ; 1 bytes @ 0x1
   628                           
   629                           
   630                           ; 1 bytes @ 0x1
   631     0072                     	ds	1
   632     0073                     ??_readRxTxStatus:
   633     0073                     ??_checkReceive:	
   634                           ; 1 bytes @ 0x2
   635                           
   636     0073                     ??_OpenSPI:	
   637                           ; 1 bytes @ 0x2
   638                           
   639     0073                     ??_mcp2515_setRegister:	
   640                           ; 1 bytes @ 0x2
   641                           
   642     0073                     txCtrlReg@i:	
   643                           ; 1 bytes @ 0x2
   644                           
   645     0073                     txSidhToRTS@sidh:	
   646                           ; 1 bytes @ 0x2
   647                           
   648     0073                     txSidhToTxLoad@sidh:	
   649                           ; 1 bytes @ 0x2
   650                           
   651     0073                     txIfFlag@i:	
   652                           ; 1 bytes @ 0x2
   653                           
   654     0073                     txStatusPendingFlag@i:	
   655                           ; 1 bytes @ 0x2
   656                           
   657     0073                     mcp2515_readRegister@ret:	
   658                           ; 1 bytes @ 0x2
   659                           
   660     0073                     mcp2515_setRegister@address:	
   661                           ; 1 bytes @ 0x2
   662                           
   663     0073                     mcp2515_read_canMsg@ext:	
   664                           ; 1 bytes @ 0x2
   665                           
   666     0073                     _readRxTxStatus$423:	
   667                           ; 1 bytes @ 0x2
   668                           
   669     0073                     _checkReceive$438:	
   670                           ; 2 bytes @ 0x2
   671                           
   672                           
   673                           ; 2 bytes @ 0x2
   674     0073                     	ds	1
   675     0074                     ??_getMode:
   676     0074                     ??_mcp2515_start_transmit:	
   677                           ; 1 bytes @ 0x3
   678                           
   679     0074                     ?_mcp2515_modifyRegister:	
   680                           ; 1 bytes @ 0x3
   681                           
   682     0074                     ?_mcp2515_configRate:	
   683                           ; 1 bytes @ 0x3
   684                           
   685     0074                     ??_mcp2515_initCANBuffers:	
   686                           ; 1 bytes @ 0x3
   687                           
   688     0074                     mcp2515_modifyRegister@mask:	
   689                           ; 1 bytes @ 0x3
   690                           
   691     0074                     mcp2515_configRate@clock:	
   692                           ; 1 bytes @ 0x3
   693                           
   694     0074                     mcp2515_initCANBuffers@a1:	
   695                           ; 1 bytes @ 0x3
   696                           
   697     0074                     mcp2515_read_canMsg@rtrBit:	
   698                           ; 1 bytes @ 0x3
   699                           
   700     0074                     mcp2515_start_transmit@mcp_addr:	
   701                           ; 1 bytes @ 0x3
   702                           
   703                           
   704                           ; 1 bytes @ 0x3
   705     0074                     	ds	1
   706     0075                     ??_getCanId:
   707     0075                     ??_mcp2515_configRate:	
   708                           ; 1 bytes @ 0x4
   709                           
   710     0075                     mcp2515_modifyRegister@data:	
   711                           ; 1 bytes @ 0x4
   712                           
   713     0075                     mcp2515_initCANBuffers@a2:	
   714                           ; 1 bytes @ 0x4
   715                           
   716     0075                     mcp2515_id_to_buf@tbufdata:	
   717                           ; 1 bytes @ 0x4
   718                           
   719     0075                     mcp2515_read_canMsg@len:	
   720                           ; 1 bytes @ 0x4
   721                           
   722     0075                     checkReceive@res:	
   723                           ; 1 bytes @ 0x4
   724                           
   725     0075                     OpenSPI@sync_mode:	
   726                           ; 1 bytes @ 0x4
   727                           
   728     0075                     _readRxTxStatus$424:	
   729                           ; 1 bytes @ 0x4
   730                           
   731                           
   732                           ; 2 bytes @ 0x4
   733     0075                     	ds	1
   734     0076                     ??_mcp2515_modifyRegister:
   735     0076                     ??_mcp2515_id_to_buf:	
   736                           ; 1 bytes @ 0x5
   737                           
   738     0076                     mcp2515_modifyRegister@address:	
   739                           ; 1 bytes @ 0x5
   740                           
   741     0076                     mcp2515_initCANBuffers@a3:	
   742                           ; 1 bytes @ 0x5
   743                           
   744     0076                     mcp2515_read_canMsg@buf:	
   745                           ; 1 bytes @ 0x5
   746                           
   747                           
   748                           ; 1 bytes @ 0x5
   749     0076                     	ds	1
   750     0077                     ??_mcp2515_requestNewMode:
   751     0077                     ??_mcp2515_getNextFreeTXBuf:	
   752                           ; 1 bytes @ 0x6
   753                           
   754     0077                     mcp2515_configRate@set:	
   755                           ; 1 bytes @ 0x6
   756                           
   757     0077                     mcp2515_initCANBuffers@i:	
   758                           ; 1 bytes @ 0x6
   759                           
   760     0077                     mcp2515_read_canMsg@buffer_load_addr:	
   761                           ; 1 bytes @ 0x6
   762                           
   763     0077                     mcp2515_getNextFreeTXBuf@status:	
   764                           ; 1 bytes @ 0x6
   765                           
   766     0077                     _readRxTxStatus$425:	
   767                           ; 1 bytes @ 0x6
   768                           
   769                           
   770                           ; 2 bytes @ 0x6
   771     0077                     	ds	1
   772     0078                     mcp2515_configRate@canSpeed:
   773     0078                     mcp2515_getNextFreeTXBuf@txbuf_n:	
   774                           ; 1 bytes @ 0x7
   775                           
   776     0078                     mcp2515_requestNewMode@Count:	
   777                           ; 1 bytes @ 0x7
   778                           
   779     0078                     mcp2515_read_canMsg@tbufdata:	
   780                           ; 2 bytes @ 0x7
   781                           
   782                           
   783                           ; 4 bytes @ 0x7
   784     0078                     	ds	1
   785     0079                     mcp2515_configRate@cfg1:
   786     0079                     mcp2515_getNextFreeTXBuf@i:	
   787                           ; 1 bytes @ 0x8
   788                           
   789     0079                     readRxTxStatus@ret:	
   790                           ; 1 bytes @ 0x8
   791                           
   792                           
   793                           ; 1 bytes @ 0x8
   794     0079                     	ds	1
   795     007A                     mcp2515_requestNewMode@statReg:
   796     007A                     mcp2515_configRate@cfg2:	
   797                           ; 1 bytes @ 0x9
   798                           
   799     007A                     mcp2515_id_to_buf@ext:	
   800                           ; 1 bytes @ 0x9
   801                           
   802                           
   803                           ; 1 bytes @ 0x9
   804     007A                     	ds	1
   805     007B                     mcp2515_requestNewMode@newmode:
   806     007B                     mcp2515_configRate@cfg3:	
   807                           ; 1 bytes @ 0xA
   808                           
   809     007B                     mcp2515_id_to_buf@canid:	
   810                           ; 1 bytes @ 0xA
   811                           
   812                           
   813                           ; 2 bytes @ 0xA
   814     007B                     	ds	1
   815     007C                     ??_mcp2515_setCANCTRL_Mode:
   816     007C                     mcp2515_setCANCTRL_Mode@newmode:	
   817                           ; 1 bytes @ 0xB
   818                           
   819     007C                     mcp2515_read_canMsg@pMsgSize:	
   820                           ; 1 bytes @ 0xB
   821                           
   822                           
   823                           ; 1 bytes @ 0xB
   824     007C                     	ds	1
   825     007D                     ??_mcp2515_write_canMsg:
   826     007D                     mcp2515_setCANCTRL_Mode@wakeIntEnabled:	
   827                           ; 1 bytes @ 0xC
   828                           
   829     007D                     mcp2515_read_canMsg@i:	
   830                           ; 1 bytes @ 0xC
   831                           
   832                           
   833                           ; 1 bytes @ 0xC
   834     007D                     	ds	1
   835     007E                     ??_readMsgBufID:
   836     007E                     ??_begin:	
   837                           ; 1 bytes @ 0xD
   838                           
   839     007E                     ??_sendMsgBuf:	
   840                           ; 1 bytes @ 0xD
   841                           
   842     007E                     ??_readMsgBuf:	
   843                           ; 1 bytes @ 0xD
   844                           
   845     007E                     ??_setMode:	
   846                           ; 1 bytes @ 0xD
   847                           
   848                           
   849                           	psect	cstackBANK0
   850     0020                     __pcstackBANK0:	
   851                           ; 1 bytes @ 0xD
   852                           
   853     0020                     ?_mcp2515_write_canMsg:
   854     0020                     ??_mcp2515_read_canMsg:	
   855                           ; 1 bytes @ 0x0
   856                           
   857     0020                     setMode@opMode:	
   858                           ; 1 bytes @ 0x0
   859                           
   860     0020                     mcp2515_write_canMsg@id:	
   861                           ; 1 bytes @ 0x0
   862                           
   863                           
   864                           ; 4 bytes @ 0x0
   865     0020                     	ds	1
   866     0021                     ?_mcp2515_init:
   867     0021                     mcp2515_init@clock:	
   868                           ; 1 bytes @ 0x1
   869                           
   870                           
   871                           ; 1 bytes @ 0x1
   872     0021                     	ds	1
   873     0022                     ??_mcp2515_init:
   874                           
   875                           ; 1 bytes @ 0x2
   876     0022                     	ds	2
   877     0024                     mcp2515_init@canSpeed:
   878     0024                     mcp2515_write_canMsg@ext:	
   879                           ; 1 bytes @ 0x4
   880                           
   881                           
   882                           ; 1 bytes @ 0x4
   883     0024                     	ds	1
   884     0025                     mcp2515_init@res:
   885     0025                     mcp2515_write_canMsg@rtrBit:	
   886                           ; 1 bytes @ 0x5
   887                           
   888                           
   889                           ; 1 bytes @ 0x5
   890     0025                     	ds	1
   891     0026                     ?_begin:
   892     0026                     mcp2515_write_canMsg@len:	
   893                           ; 1 bytes @ 0x6
   894                           
   895     0026                     begin@speedset:	
   896                           ; 1 bytes @ 0x6
   897                           
   898                           
   899                           ; 4 bytes @ 0x6
   900     0026                     	ds	1
   901     0027                     mcp2515_write_canMsg@buf:
   902                           
   903                           ; 1 bytes @ 0x7
   904     0027                     	ds	1
   905     0028                     _mcp2515_write_canMsg$328:
   906                           
   907                           ; 2 bytes @ 0x8
   908     0028                     	ds	1
   909     0029                     ?_readMsgBufID:
   910     0029                     readMsgBufID@id:	
   911                           ; 1 bytes @ 0x9
   912                           
   913                           
   914                           ; 1 bytes @ 0x9
   915     0029                     	ds	1
   916     002A                     mcp2515_write_canMsg@load_addr:
   917     002A                     begin@clockset:	
   918                           ; 1 bytes @ 0xA
   919                           
   920     002A                     readMsgBufID@ext:	
   921                           ; 1 bytes @ 0xA
   922                           
   923                           
   924                           ; 1 bytes @ 0xA
   925     002A                     	ds	1
   926     002B                     mcp2515_write_canMsg@dlc:
   927     002B                     begin@res:	
   928                           ; 1 bytes @ 0xB
   929                           
   930     002B                     readMsgBufID@rtrBit:	
   931                           ; 1 bytes @ 0xB
   932                           
   933                           
   934                           ; 1 bytes @ 0xB
   935     002B                     	ds	1
   936     002C                     readMsgBufID@len:
   937     002C                     mcp2515_write_canMsg@tbufdata:	
   938                           ; 1 bytes @ 0xC
   939                           
   940                           
   941                           ; 4 bytes @ 0xC
   942     002C                     	ds	1
   943     002D                     readMsgBufID@buf:
   944                           
   945                           ; 1 bytes @ 0xD
   946     002D                     	ds	1
   947     002E                     readMsgBufID@status:
   948                           
   949                           ; 1 bytes @ 0xE
   950     002E                     	ds	1
   951     002F                     readMsgBufID@rc:
   952                           
   953                           ; 1 bytes @ 0xF
   954     002F                     	ds	1
   955     0030                     ?_readMsgBuf:
   956     0030                     readMsgBuf@buf:	
   957                           ; 1 bytes @ 0x10
   958                           
   959     0030                     mcp2515_write_canMsg@buffer_sidh_addr:	
   960                           ; 1 bytes @ 0x10
   961                           
   962                           
   963                           ; 1 bytes @ 0x10
   964     0030                     	ds	1
   965     0031                     readMsgBuf@len:
   966     0031                     mcp2515_write_canMsg@i:	
   967                           ; 1 bytes @ 0x11
   968                           
   969                           
   970                           ; 1 bytes @ 0x11
   971     0031                     	ds	1
   972     0032                     ?_sendMsg:
   973     0032                     sendMsg@id:	
   974                           ; 1 bytes @ 0x12
   975                           
   976                           
   977                           ; 4 bytes @ 0x12
   978     0032                     	ds	4
   979     0036                     sendMsg@ext:
   980                           
   981                           ; 1 bytes @ 0x16
   982     0036                     	ds	1
   983     0037                     sendMsg@rtrBit:
   984                           
   985                           ; 1 bytes @ 0x17
   986     0037                     	ds	1
   987     0038                     sendMsg@len:
   988                           
   989                           ; 1 bytes @ 0x18
   990     0038                     	ds	1
   991     0039                     sendMsg@buf:
   992                           
   993                           ; 1 bytes @ 0x19
   994     0039                     	ds	1
   995     003A                     sendMsg@wait_sent:
   996                           
   997                           ; 1 bytes @ 0x1A
   998     003A                     	ds	1
   999     003B                     ??_sendMsg:
  1000                           
  1001                           ; 1 bytes @ 0x1B
  1002     003B                     	ds	2
  1003     003D                     sendMsg@res:
  1004                           
  1005                           ; 1 bytes @ 0x1D
  1006     003D                     	ds	1
  1007     003E                     sendMsg@res1:
  1008                           
  1009                           ; 1 bytes @ 0x1E
  1010     003E                     	ds	1
  1011     003F                     sendMsg@txbuf_n:
  1012                           
  1013                           ; 1 bytes @ 0x1F
  1014     003F                     	ds	1
  1015     0040                     sendMsg@uiTimeOut:
  1016                           
  1017                           ; 2 bytes @ 0x20
  1018     0040                     	ds	2
  1019     0042                     ?_sendMsgBuf:
  1020     0042                     sendMsgBuf@id:	
  1021                           ; 1 bytes @ 0x22
  1022                           
  1023                           
  1024                           ; 4 bytes @ 0x22
  1025     0042                     	ds	4
  1026     0046                     sendMsgBuf@ext:
  1027                           
  1028                           ; 1 bytes @ 0x26
  1029     0046                     	ds	1
  1030     0047                     sendMsgBuf@rtrBit:
  1031                           
  1032                           ; 1 bytes @ 0x27
  1033     0047                     	ds	1
  1034     0048                     sendMsgBuf@len:
  1035                           
  1036                           ; 1 bytes @ 0x28
  1037     0048                     	ds	1
  1038     0049                     sendMsgBuf@buf:
  1039                           
  1040                           ; 1 bytes @ 0x29
  1041     0049                     	ds	1
  1042     004A                     sendMsgBuf@wait_sent:
  1043                           
  1044                           ; 1 bytes @ 0x2A
  1045     004A                     	ds	1
  1046     004B                     ??_main:
  1047                           
  1048                           ; 1 bytes @ 0x2B
  1049     004B                     	ds	3
  1050     004E                     main@buf:
  1051                           
  1052                           ; 8 bytes @ 0x2E
  1053     004E                     	ds	8
  1054     0056                     main@canId:
  1055                           
  1056                           ; 4 bytes @ 0x36
  1057     0056                     	ds	4
  1058     005A                     main@i:
  1059                           
  1060                           ; 2 bytes @ 0x3A
  1061     005A                     	ds	2
  1062     005C                     main@len:
  1063                           
  1064                           ; 1 bytes @ 0x3C
  1065     005C                     	ds	1
  1066                           
  1067                           	psect	maintext
  1068     03AF                     __pmaintext:	
  1069 ;;
  1070 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1071 ;;
  1072 ;; *************** function _main *****************
  1073 ;; Defined at:
  1074 ;;		line 29 in file "main.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;  i               2   58[BANK0 ] int 
  1079 ;;  canId           4   54[BANK0 ] unsigned long 
  1080 ;;  buf             8   46[BANK0 ] unsigned char [8]
  1081 ;;  len             1   60[BANK0 ] unsigned char 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : B00/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1091 ;;      Params:         0       0       0       0       0
  1092 ;;      Locals:         0      15       0       0       0
  1093 ;;      Temps:          0       3       0       0       0
  1094 ;;      Totals:         0      18       0       0       0
  1095 ;;Total ram usage:       18 bytes
  1096 ;; Hardware stack levels required when called: 7
  1097 ;; This function calls:
  1098 ;;		_begin
  1099 ;;		_checkReceive
  1100 ;;		_getCanId
  1101 ;;		_init_CS
  1102 ;;		_readMsgBuf
  1103 ;;		_sendMsgBuf
  1104 ;; This function is called by:
  1105 ;;		Startup code after reset
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109     03AF                     _main:	
  1110                           ;psect for function _main
  1111                           
  1112     03AF                     l3577:	
  1113                           ;incstack = 0
  1114                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1115                           
  1116                           
  1117                           ;main.c: 32: 
  1118     03AF  1683               	bsf	3,5	;RP0=1, select bank1
  1119     03B0  1303               	bcf	3,6	;RP1=0, select bank1
  1120     03B1  1188               	bcf	8,3	;volatile
  1121                           
  1122                           ;main.c: 34: 
  1123     03B2  1283               	bcf	3,5	;RP0=0, select bank0
  1124     03B3  1303               	bcf	3,6	;RP1=0, select bank0
  1125     03B4  1188               	bcf	8,3	;volatile
  1126     03B5                     l3579:
  1127                           
  1128                           ;main.c: 36:         unsigned char buf[8];
  1129     03B5  120A  158A  2591  120A  118A  	fcall	_init_CS
  1130                           
  1131                           ;main.c: 38:         if ((3) == checkReceive()) {
  1132     03BA  2BC5               	goto	l3583
  1133     03BB                     l3581:
  1134                           
  1135                           ;main.c: 40: 
  1136     03BB  3082               	movlw	130
  1137     03BC  1283               	bcf	3,5	;RP0=0, select bank0
  1138     03BD  1303               	bcf	3,6	;RP1=0, select bank0
  1139     03BE  00CC               	movwf	??_main+1
  1140     03BF  30DD               	movlw	221
  1141     03C0  00CB               	movwf	??_main
  1142     03C1                     u2107:
  1143     03C1  0BCB               	decfsz	??_main,f
  1144     03C2  2BC1               	goto	u2107
  1145     03C3  0BCC               	decfsz	??_main+1,f
  1146     03C4  2BC1               	goto	u2107
  1147     03C5                     l3583:
  1148                           
  1149                           ;main.c: 38:         if ((3) == checkReceive()) {
  1150     03C5  3000               	movlw	0
  1151     03C6  1283               	bcf	3,5	;RP0=0, select bank0
  1152     03C7  1303               	bcf	3,6	;RP1=0, select bank0
  1153     03C8  00A9               	movwf	begin@speedset+3
  1154     03C9  3000               	movlw	0
  1155     03CA  00A8               	movwf	begin@speedset+2
  1156     03CB  3000               	movlw	0
  1157     03CC  00A7               	movwf	begin@speedset+1
  1158     03CD  3010               	movlw	16
  1159     03CE  00A6               	movwf	begin@speedset
  1160     03CF  3003               	movlw	3
  1161     03D0  00AA               	movwf	begin@clockset
  1162     03D1  120A  158A  2736  120A  118A  	fcall	_begin
  1163     03D6  3A00               	xorlw	0
  1164     03D7  1D03               	skipz
  1165     03D8  2BDA               	goto	u1731
  1166     03D9  2BDB               	goto	u1730
  1167     03DA                     u1731:
  1168     03DA  2BBB               	goto	l3581
  1169     03DB                     u1730:
  1170     03DB                     l3585:
  1171                           
  1172                           ;main.c: 46:                     RD3 =1;
  1173     03DB  3000               	movlw	0
  1174     03DC  1283               	bcf	3,5	;RP0=0, select bank0
  1175     03DD  1303               	bcf	3,6	;RP1=0, select bank0
  1176     03DE  00C5               	movwf	sendMsgBuf@id+3
  1177     03DF  3000               	movlw	0
  1178     03E0  00C4               	movwf	sendMsgBuf@id+2
  1179     03E1  3000               	movlw	0
  1180     03E2  00C3               	movwf	sendMsgBuf@id+1
  1181     03E3  3004               	movlw	4
  1182     03E4  00C2               	movwf	sendMsgBuf@id
  1183     03E5  01C6               	clrf	sendMsgBuf@ext
  1184     03E6  01C7               	clrf	sendMsgBuf@rtrBit
  1185     03E7  3008               	movlw	8
  1186     03E8  00C8               	movwf	sendMsgBuf@len
  1187     03E9  3065               	movlw	(low (_stmp| 0))& (0+255)
  1188     03EA  00C9               	movwf	sendMsgBuf@buf
  1189     03EB  01CA               	clrf	sendMsgBuf@wait_sent
  1190     03EC  0ACA               	incf	sendMsgBuf@wait_sent,f
  1191     03ED  120A  158A  2671  120A  118A  	fcall	_sendMsgBuf
  1192     03F2                     l3587:
  1193                           
  1194                           ;main.c: 47:                     _delay((unsigned long)((100)*(4000000/4000.0)));
  1195     03F2  3006               	movlw	6
  1196     03F3  1283               	bcf	3,5	;RP0=0, select bank0
  1197     03F4  1303               	bcf	3,6	;RP1=0, select bank0
  1198     03F5  00CD               	movwf	??_main+2
  1199     03F6  3013               	movlw	19
  1200     03F7  00CC               	movwf	??_main+1
  1201     03F8  30AD               	movlw	173
  1202     03F9  00CB               	movwf	??_main
  1203     03FA                     u2117:
  1204     03FA  0BCB               	decfsz	??_main,f
  1205     03FB  2BFA               	goto	u2117
  1206     03FC  0BCC               	decfsz	??_main+1,f
  1207     03FD  2BFA               	goto	u2117
  1208     03FE  0BCD               	decfsz	??_main+2,f
  1209     03FF  2BFA               	goto	u2117
  1210     0400                     l3589:
  1211                           
  1212                           ;main.c: 52:             }
  1213     0400  1283               	bcf	3,5	;RP0=0, select bank0
  1214     0401  1303               	bcf	3,6	;RP1=0, select bank0
  1215     0402  01DC               	clrf	main@len
  1216     0403                     l3591:
  1217                           
  1218                           ;main.c: 53:         };main.c: 55:     }
  1219     0403  120A  158A  2628  120A  118A  	fcall	_checkReceive
  1220     0408  3A03               	xorlw	3
  1221     0409  1D03               	skipz
  1222     040A  2C0C               	goto	u1741
  1223     040B  2C0D               	goto	u1740
  1224     040C                     u1741:
  1225     040C  2BDB               	goto	l3585
  1226     040D                     u1740:
  1227     040D                     l3593:
  1228                           
  1229                           ;main.c: 56:     return;
  1230     040D  304E               	movlw	(low (main@buf| 0))& (0+255)
  1231     040E  1283               	bcf	3,5	;RP0=0, select bank0
  1232     040F  1303               	bcf	3,6	;RP1=0, select bank0
  1233     0410  00B0               	movwf	readMsgBuf@buf
  1234     0411  305C               	movlw	(low (main@len| 0))& (0+255)
  1235     0412  120A  158A  263F  120A  118A  	fcall	_readMsgBuf
  1236     0417                     l3595:
  1237     0417  120A  118A  2005  120A  118A  	fcall	_getCanId
  1238     041C  0874               	movf	?_getCanId+3,w
  1239     041D  1283               	bcf	3,5	;RP0=0, select bank0
  1240     041E  1303               	bcf	3,6	;RP1=0, select bank0
  1241     041F  00D9               	movwf	main@canId+3
  1242     0420  0873               	movf	?_getCanId+2,w
  1243     0421  00D8               	movwf	main@canId+2
  1244     0422  0872               	movf	?_getCanId+1,w
  1245     0423  00D7               	movwf	main@canId+1
  1246     0424  0871               	movf	?_getCanId,w
  1247     0425  00D6               	movwf	main@canId
  1248     0426                     l3597:
  1249     0426  01DA               	clrf	main@i
  1250     0427  01DB               	clrf	main@i+1
  1251     0428  2C60               	goto	l61
  1252     0429                     l3599:
  1253     0429  3005               	movlw	5
  1254     042A  1283               	bcf	3,5	;RP0=0, select bank0
  1255     042B  1303               	bcf	3,6	;RP1=0, select bank0
  1256     042C  0656               	xorwf	main@canId,w
  1257     042D  0457               	iorwf	main@canId+1,w
  1258     042E  0458               	iorwf	main@canId+2,w
  1259     042F  0459               	iorwf	main@canId+3,w
  1260     0430  1D03               	btfss	3,2
  1261     0431  2C33               	goto	u1751
  1262     0432  2C34               	goto	u1750
  1263     0433                     u1751:
  1264     0433  2C58               	goto	l63
  1265     0434                     u1750:
  1266     0434                     l3601:
  1267     0434  1283               	bcf	3,5	;RP0=0, select bank0
  1268     0435  1303               	bcf	3,6	;RP1=0, select bank0
  1269     0436  085A               	movf	main@i,w
  1270     0437  3E4E               	addlw	(low (main@buf| 0))& (0+255)
  1271     0438  0084               	movwf	4
  1272     0439  3072               	movlw	114
  1273     043A  1383               	bcf	3,7	;select IRP bank0
  1274     043B  0600               	xorwf	0,w
  1275     043C  1D03               	btfss	3,2
  1276     043D  2C3F               	goto	u1761
  1277     043E  2C40               	goto	u1760
  1278     043F                     u1761:
  1279     043F  2C58               	goto	l63
  1280     0440                     u1760:
  1281     0440                     l3603:
  1282     0440  1588               	bsf	8,3	;volatile
  1283     0441                     l3605:
  1284     0441  3082               	movlw	130
  1285     0442  1283               	bcf	3,5	;RP0=0, select bank0
  1286     0443  1303               	bcf	3,6	;RP1=0, select bank0
  1287     0444  00CC               	movwf	??_main+1
  1288     0445  30DD               	movlw	221
  1289     0446  00CB               	movwf	??_main
  1290     0447                     u2127:
  1291     0447  0BCB               	decfsz	??_main,f
  1292     0448  2C47               	goto	u2127
  1293     0449  0BCC               	decfsz	??_main+1,f
  1294     044A  2C47               	goto	u2127
  1295     044B                     l3607:
  1296     044B  1283               	bcf	3,5	;RP0=0, select bank0
  1297     044C  1303               	bcf	3,6	;RP1=0, select bank0
  1298     044D  1188               	bcf	8,3	;volatile
  1299     044E  3082               	movlw	130
  1300     044F  1283               	bcf	3,5	;RP0=0, select bank0
  1301     0450  1303               	bcf	3,6	;RP1=0, select bank0
  1302     0451  00CC               	movwf	??_main+1
  1303     0452  30DD               	movlw	221
  1304     0453  00CB               	movwf	??_main
  1305     0454                     u2137:
  1306     0454  0BCB               	decfsz	??_main,f
  1307     0455  2C54               	goto	u2137
  1308     0456  0BCC               	decfsz	??_main+1,f
  1309     0457  2C54               	goto	u2137
  1310     0458                     l63:
  1311     0458  3001               	movlw	1
  1312     0459  1283               	bcf	3,5	;RP0=0, select bank0
  1313     045A  1303               	bcf	3,6	;RP1=0, select bank0
  1314     045B  07DA               	addwf	main@i,f
  1315     045C  1803               	skipnc
  1316     045D  0ADB               	incf	main@i+1,f
  1317     045E  3000               	movlw	0
  1318     045F  07DB               	addwf	main@i+1,f
  1319     0460                     l61:
  1320     0460  085B               	movf	main@i+1,w
  1321     0461  3A80               	xorlw	128
  1322     0462  00CB               	movwf	??_main
  1323     0463  3080               	movlw	128
  1324     0464  024B               	subwf	??_main,w
  1325     0465  1D03               	skipz
  1326     0466  2C69               	goto	u1775
  1327     0467  085C               	movf	main@len,w
  1328     0468  025A               	subwf	main@i,w
  1329     0469                     u1775:
  1330     0469  1C03               	skipc
  1331     046A  2C6C               	goto	u1771
  1332     046B  2C6D               	goto	u1770
  1333     046C                     u1771:
  1334     046C  2C29               	goto	l3599
  1335     046D                     u1770:
  1336     046D  2BDB               	goto	l3585
  1337     046E  120A  118A  2801   	ljmp	start
  1338     0471                     __end_of_main:
  1339                           
  1340                           	psect	text1
  1341     0E71                     __ptext1:	
  1342 ;; *************** function _sendMsgBuf *****************
  1343 ;; Defined at:
  1344 ;;		line 1276 in file "mcp2515_can.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  id              4   34[BANK0 ] unsigned long 
  1347 ;;  ext             1   38[BANK0 ] unsigned char 
  1348 ;;  rtrBit          1   39[BANK0 ] unsigned char 
  1349 ;;  len             1   40[BANK0 ] unsigned char 
  1350 ;;  buf             1   41[BANK0 ] PTR const unsigned char 
  1351 ;;		 -> stmp(8), 
  1352 ;;  wait_sent       1   42[BANK0 ] unsigned char 
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      unsigned char 
  1357 ;; Registers used:
  1358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1364 ;;      Params:         0       9       0       0       0
  1365 ;;      Locals:         0       0       0       0       0
  1366 ;;      Temps:          0       0       0       0       0
  1367 ;;      Totals:         0       9       0       0       0
  1368 ;;Total ram usage:        9 bytes
  1369 ;; Hardware stack levels used: 1
  1370 ;; Hardware stack levels required when called: 4
  1371 ;; This function calls:
  1372 ;;		_sendMsg
  1373 ;; This function is called by:
  1374 ;;		_main
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378     0E71                     _sendMsgBuf:	
  1379                           ;psect for function _sendMsgBuf
  1380                           
  1381     0E71                     l3529:	
  1382                           ;incstack = 0
  1383                           ; Regs used in _sendMsgBuf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1384                           
  1385                           
  1386                           ;mcp2515_can.c: 1277:     return sendMsg(id, ext, rtrBit, len, buf, wait_sent);;	Return 
      +                          value of _sendMsgBuf is never used
  1387     0E71  1283               	bcf	3,5	;RP0=0, select bank0
  1388     0E72  1303               	bcf	3,6	;RP1=0, select bank0
  1389     0E73  0845               	movf	sendMsgBuf@id+3,w
  1390     0E74  00B5               	movwf	sendMsg@id+3
  1391     0E75  0844               	movf	sendMsgBuf@id+2,w
  1392     0E76  00B4               	movwf	sendMsg@id+2
  1393     0E77  0843               	movf	sendMsgBuf@id+1,w
  1394     0E78  00B3               	movwf	sendMsg@id+1
  1395     0E79  0842               	movf	sendMsgBuf@id,w
  1396     0E7A  00B2               	movwf	sendMsg@id
  1397     0E7B  0846               	movf	sendMsgBuf@ext,w
  1398     0E7C  00B6               	movwf	sendMsg@ext
  1399     0E7D  0847               	movf	sendMsgBuf@rtrBit,w
  1400     0E7E  00B7               	movwf	sendMsg@rtrBit
  1401     0E7F  0848               	movf	sendMsgBuf@len,w
  1402     0E80  00B8               	movwf	sendMsg@len
  1403     0E81  0849               	movf	sendMsgBuf@buf,w
  1404     0E82  00B9               	movwf	sendMsg@buf
  1405     0E83  084A               	movf	sendMsgBuf@wait_sent,w
  1406     0E84  00BA               	movwf	sendMsg@wait_sent
  1407     0E85  120A  118A  230B  120A  158A  	fcall	_sendMsg
  1408     0E8A                     l416:
  1409     0E8A  0008               	return
  1410     0E8B                     __end_of_sendMsgBuf:
  1411                           
  1412                           	psect	text2
  1413     030B                     __ptext2:	
  1414 ;; *************** function _sendMsg *****************
  1415 ;; Defined at:
  1416 ;;		line 1231 in file "mcp2515_can.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  id              4   18[BANK0 ] unsigned long 
  1419 ;;  ext             1   22[BANK0 ] unsigned char 
  1420 ;;  rtrBit          1   23[BANK0 ] unsigned char 
  1421 ;;  len             1   24[BANK0 ] unsigned char 
  1422 ;;  buf             1   25[BANK0 ] PTR const unsigned char 
  1423 ;;		 -> stmp(8), 
  1424 ;;  wait_sent       1   26[BANK0 ] unsigned char 
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;  uiTimeOut       2   32[BANK0 ] unsigned short 
  1427 ;;  txbuf_n         1   31[BANK0 ] unsigned char 
  1428 ;;  res1            1   30[BANK0 ] unsigned char 
  1429 ;;  res             1   29[BANK0 ] unsigned char 
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      unsigned char 
  1432 ;; Registers used:
  1433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1439 ;;      Params:         0       9       0       0       0
  1440 ;;      Locals:         0       5       0       0       0
  1441 ;;      Temps:          0       2       0       0       0
  1442 ;;      Totals:         0      16       0       0       0
  1443 ;;Total ram usage:       16 bytes
  1444 ;; Hardware stack levels used: 1
  1445 ;; Hardware stack levels required when called: 3
  1446 ;; This function calls:
  1447 ;;		_mcp2515_getNextFreeTXBuf
  1448 ;;		_mcp2515_readRegister
  1449 ;;		_mcp2515_write_canMsg
  1450 ;; This function is called by:
  1451 ;;		_sendMsgBuf
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455     030B                     _sendMsg:	
  1456                           ;psect for function _sendMsg
  1457                           
  1458     030B                     l3459:	
  1459                           ;incstack = 0
  1460                           ; Regs used in _sendMsg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1461                           
  1462                           
  1463                           ;mcp2515_can.c: 1232:     unsigned char res, res1, txbuf_n;;mcp2515_can.c: 1233:     uin
      +                          t16_t uiTimeOut = 0;
  1464     030B  1283               	bcf	3,5	;RP0=0, select bank0
  1465     030C  1303               	bcf	3,6	;RP1=0, select bank0
  1466     030D  01C0               	clrf	sendMsg@uiTimeOut
  1467     030E  01C1               	clrf	sendMsg@uiTimeOut+1
  1468     030F                     l3461:
  1469                           
  1470                           ;mcp2515_can.c: 1235:     can_id = id;
  1471     030F  0835               	movf	sendMsg@id+3,w
  1472     0310  00E2               	movwf	_can_id+3
  1473     0311  0834               	movf	sendMsg@id+2,w
  1474     0312  00E1               	movwf	_can_id+2
  1475     0313  0833               	movf	sendMsg@id+1,w
  1476     0314  00E0               	movwf	_can_id+1
  1477     0315  0832               	movf	sendMsg@id,w
  1478     0316  00DF               	movwf	_can_id
  1479     0317                     l3463:
  1480                           
  1481                           ;mcp2515_can.c: 1236:     ext_flg = ext;
  1482     0317  0836               	movf	sendMsg@ext,w
  1483     0318  00E4               	movwf	_ext_flg
  1484     0319                     l3465:
  1485                           
  1486                           ;mcp2515_can.c: 1237:     rtr = rtrBit;
  1487     0319  0837               	movf	sendMsg@rtrBit,w
  1488     031A  00E3               	movwf	_rtr
  1489     031B                     l3467:
  1490                           
  1491                           ;mcp2515_can.c: 1240:         if (uiTimeOut > 0) {
  1492     031B  0840               	movf	sendMsg@uiTimeOut,w
  1493     031C  0441               	iorwf	sendMsg@uiTimeOut+1,w
  1494     031D  1903               	btfsc	3,2
  1495     031E  2B20               	goto	u1571
  1496     031F  2B21               	goto	u1570
  1497     0320                     u1571:
  1498     0320  2B2B               	goto	l3471
  1499     0321                     u1570:
  1500     0321                     l3469:
  1501                           
  1502                           ;mcp2515_can.c: 1241:             _delay((unsigned long)((10)*(4000000/4000.0)));
  1503     0321  300D               	movlw	13
  1504     0322  1283               	bcf	3,5	;RP0=0, select bank0
  1505     0323  1303               	bcf	3,6	;RP1=0, select bank0
  1506     0324  00BC               	movwf	??_sendMsg+1
  1507     0325  30FB               	movlw	251
  1508     0326  00BB               	movwf	??_sendMsg
  1509     0327                     u2147:
  1510     0327  0BBB               	decfsz	??_sendMsg,f
  1511     0328  2B27               	goto	u2147
  1512     0329  0BBC               	decfsz	??_sendMsg+1,f
  1513     032A  2B27               	goto	u2147
  1514     032B                     l3471:
  1515                           
  1516                           ;mcp2515_can.c: 1243:         res = mcp2515_getNextFreeTXBuf(&txbuf_n);
  1517     032B  303F               	movlw	(low (sendMsg@txbuf_n| 0))& (0+255)
  1518     032C  120A  118A  2030  120A  118A  	fcall	_mcp2515_getNextFreeTXBuf
  1519     0331  1283               	bcf	3,5	;RP0=0, select bank0
  1520     0332  1303               	bcf	3,6	;RP1=0, select bank0
  1521     0333  00BD               	movwf	sendMsg@res
  1522     0334                     l3473:
  1523                           
  1524                           ;mcp2515_can.c: 1244:         uiTimeOut++;
  1525     0334  3001               	movlw	1
  1526     0335  07C0               	addwf	sendMsg@uiTimeOut,f
  1527     0336  1803               	skipnc
  1528     0337  0AC1               	incf	sendMsg@uiTimeOut+1,f
  1529     0338  3000               	movlw	0
  1530     0339  07C1               	addwf	sendMsg@uiTimeOut+1,f
  1531     033A                     l3475:
  1532                           
  1533                           ;mcp2515_can.c: 1245:     } while (res == (2) && (uiTimeOut < 50));
  1534     033A  3002               	movlw	2
  1535     033B  063D               	xorwf	sendMsg@res,w
  1536     033C  1D03               	btfss	3,2
  1537     033D  2B3F               	goto	u1581
  1538     033E  2B40               	goto	u1580
  1539     033F                     u1581:
  1540     033F  2B49               	goto	l3479
  1541     0340                     u1580:
  1542     0340                     l3477:
  1543     0340  3000               	movlw	0
  1544     0341  0241               	subwf	sendMsg@uiTimeOut+1,w
  1545     0342  3032               	movlw	50
  1546     0343  1903               	skipnz
  1547     0344  0240               	subwf	sendMsg@uiTimeOut,w
  1548     0345  1C03               	skipc
  1549     0346  2B48               	goto	u1591
  1550     0347  2B49               	goto	u1590
  1551     0348                     u1591:
  1552     0348  2B1B               	goto	l3467
  1553     0349                     u1590:
  1554     0349                     l3479:
  1555                           
  1556                           ;mcp2515_can.c: 1247:     if (uiTimeOut == 50) {
  1557     0349  3032               	movlw	50
  1558     034A  0640               	xorwf	sendMsg@uiTimeOut,w
  1559     034B  0441               	iorwf	sendMsg@uiTimeOut+1,w
  1560     034C  1D03               	btfss	3,2
  1561     034D  2B4F               	goto	u1601
  1562     034E  2B50               	goto	u1600
  1563     034F                     u1601:
  1564     034F  2B52               	goto	l3485
  1565     0350                     u1600:
  1566     0350                     l3481:
  1567                           
  1568                           ;mcp2515_can.c: 1248:         return (6);
  1569     0350  3006               	movlw	6
  1570     0351  2BAE               	goto	l406
  1571     0352                     l3485:
  1572                           
  1573                           ;mcp2515_can.c: 1250:     mcp2515_write_canMsg(txbuf_n, id, ext, rtrBit, len, buf);
  1574     0352  0835               	movf	sendMsg@id+3,w
  1575     0353  00A3               	movwf	mcp2515_write_canMsg@id+3
  1576     0354  0834               	movf	sendMsg@id+2,w
  1577     0355  00A2               	movwf	mcp2515_write_canMsg@id+2
  1578     0356  0833               	movf	sendMsg@id+1,w
  1579     0357  00A1               	movwf	mcp2515_write_canMsg@id+1
  1580     0358  0832               	movf	sendMsg@id,w
  1581     0359  00A0               	movwf	mcp2515_write_canMsg@id
  1582     035A  0836               	movf	sendMsg@ext,w
  1583     035B  00A4               	movwf	mcp2515_write_canMsg@ext
  1584     035C  0837               	movf	sendMsg@rtrBit,w
  1585     035D  00A5               	movwf	mcp2515_write_canMsg@rtrBit
  1586     035E  0838               	movf	sendMsg@len,w
  1587     035F  00A6               	movwf	mcp2515_write_canMsg@len
  1588     0360  0839               	movf	sendMsg@buf,w
  1589     0361  00A7               	movwf	mcp2515_write_canMsg@buf
  1590     0362  083F               	movf	sendMsg@txbuf_n,w
  1591     0363  120A  118A  2202  120A  118A  	fcall	_mcp2515_write_canMsg
  1592     0368                     l3487:
  1593                           
  1594                           ;mcp2515_can.c: 1252:     if (wait_sent) {
  1595     0368  1283               	bcf	3,5	;RP0=0, select bank0
  1596     0369  1303               	bcf	3,6	;RP1=0, select bank0
  1597     036A  083A               	movf	sendMsg@wait_sent,w
  1598     036B  1903               	btfsc	3,2
  1599     036C  2B6E               	goto	u1611
  1600     036D  2B6F               	goto	u1610
  1601     036E                     u1611:
  1602     036E  2BAD               	goto	l3509
  1603     036F                     u1610:
  1604     036F                     l3489:
  1605                           
  1606                           ;mcp2515_can.c: 1253:         uiTimeOut = 0;
  1607     036F  01C0               	clrf	sendMsg@uiTimeOut
  1608     0370  01C1               	clrf	sendMsg@uiTimeOut+1
  1609     0371                     l3491:
  1610                           
  1611                           ;mcp2515_can.c: 1255:             if (uiTimeOut > 0) {
  1612     0371  0840               	movf	sendMsg@uiTimeOut,w
  1613     0372  0441               	iorwf	sendMsg@uiTimeOut+1,w
  1614     0373  1903               	btfsc	3,2
  1615     0374  2B76               	goto	u1621
  1616     0375  2B77               	goto	u1620
  1617     0376                     u1621:
  1618     0376  2B81               	goto	l409
  1619     0377                     u1620:
  1620     0377                     l3493:
  1621                           
  1622                           ;mcp2515_can.c: 1256:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  1623     0377  300D               	movlw	13
  1624     0378  1283               	bcf	3,5	;RP0=0, select bank0
  1625     0379  1303               	bcf	3,6	;RP1=0, select bank0
  1626     037A  00BC               	movwf	??_sendMsg+1
  1627     037B  30FB               	movlw	251
  1628     037C  00BB               	movwf	??_sendMsg
  1629     037D                     u2157:
  1630     037D  0BBB               	decfsz	??_sendMsg,f
  1631     037E  2B7D               	goto	u2157
  1632     037F  0BBC               	decfsz	??_sendMsg+1,f
  1633     0380  2B7D               	goto	u2157
  1634     0381                     l409:	
  1635                           ;mcp2515_can.c: 1257:             }
  1636                           
  1637                           
  1638                           ;mcp2515_can.c: 1258:             uiTimeOut++;
  1639     0381  3001               	movlw	1
  1640     0382  1283               	bcf	3,5	;RP0=0, select bank0
  1641     0383  1303               	bcf	3,6	;RP1=0, select bank0
  1642     0384  07C0               	addwf	sendMsg@uiTimeOut,f
  1643     0385  1803               	skipnc
  1644     0386  0AC1               	incf	sendMsg@uiTimeOut+1,f
  1645     0387  3000               	movlw	0
  1646     0388  07C1               	addwf	sendMsg@uiTimeOut+1,f
  1647     0389                     l3495:
  1648                           
  1649                           ;mcp2515_can.c: 1259:             res1 = mcp2515_readRegister(txbuf_n - 1);
  1650     0389  083F               	movf	sendMsg@txbuf_n,w
  1651     038A  3EFF               	addlw	255
  1652     038B  120A  158A  268B  120A  118A  	fcall	_mcp2515_readRegister
  1653     0390  1283               	bcf	3,5	;RP0=0, select bank0
  1654     0391  1303               	bcf	3,6	;RP1=0, select bank0
  1655     0392  00BE               	movwf	sendMsg@res1
  1656     0393                     l3497:
  1657                           
  1658                           ;mcp2515_can.c: 1260:             res1 = res1 & 0x08;
  1659     0393  083E               	movf	sendMsg@res1,w
  1660     0394  3908               	andlw	8
  1661     0395  00BE               	movwf	sendMsg@res1
  1662     0396                     l3499:
  1663                           
  1664                           ;mcp2515_can.c: 1261:         } while (res1 && (uiTimeOut < 50));
  1665     0396  083E               	movf	sendMsg@res1,w
  1666     0397  1903               	btfsc	3,2
  1667     0398  2B9A               	goto	u1631
  1668     0399  2B9B               	goto	u1630
  1669     039A                     u1631:
  1670     039A  2BA4               	goto	l3503
  1671     039B                     u1630:
  1672     039B                     l3501:
  1673     039B  3000               	movlw	0
  1674     039C  0241               	subwf	sendMsg@uiTimeOut+1,w
  1675     039D  3032               	movlw	50
  1676     039E  1903               	skipnz
  1677     039F  0240               	subwf	sendMsg@uiTimeOut,w
  1678     03A0  1C03               	skipc
  1679     03A1  2BA3               	goto	u1641
  1680     03A2  2BA4               	goto	u1640
  1681     03A3                     u1641:
  1682     03A3  2B71               	goto	l3491
  1683     03A4                     u1640:
  1684     03A4                     l3503:
  1685                           
  1686                           ;mcp2515_can.c: 1263:         if (uiTimeOut == 50) {
  1687     03A4  3032               	movlw	50
  1688     03A5  0640               	xorwf	sendMsg@uiTimeOut,w
  1689     03A6  0441               	iorwf	sendMsg@uiTimeOut+1,w
  1690     03A7  1D03               	btfss	3,2
  1691     03A8  2BAA               	goto	u1651
  1692     03A9  2BAB               	goto	u1650
  1693     03AA                     u1651:
  1694     03AA  2BAD               	goto	l3509
  1695     03AB                     u1650:
  1696     03AB                     l3505:
  1697                           
  1698                           ;mcp2515_can.c: 1264:             return (7);
  1699     03AB  3007               	movlw	7
  1700     03AC  2BAE               	goto	l406
  1701     03AD                     l3509:
  1702                           
  1703                           ;mcp2515_can.c: 1268:     return (0);
  1704     03AD  3000               	movlw	0
  1705     03AE                     l406:
  1706     03AE  0008               	return
  1707     03AF                     __end_of_sendMsg:
  1708                           
  1709                           	psect	text3
  1710     0202                     __ptext3:	
  1711 ;; *************** function _mcp2515_write_canMsg *****************
  1712 ;; Defined at:
  1713 ;;		line 918 in file "mcp2515_can.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  buffer_sidh_    1    wreg     const unsigned char 
  1716 ;;  id              4    0[BANK0 ] unsigned long 
  1717 ;;  ext             1    4[BANK0 ] unsigned char 
  1718 ;;  rtrBit          1    5[BANK0 ] unsigned char 
  1719 ;;  len             1    6[BANK0 ] unsigned char 
  1720 ;;  buf             1    7[BANK0 ] PTR  unsigned char 
  1721 ;;		 -> stmp(8), 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  buffer_sidh_    1   16[BANK0 ] const unsigned char 
  1724 ;;  tbufdata        4   12[BANK0 ] unsigned char [4]
  1725 ;;  i               1   17[BANK0 ] unsigned char 
  1726 ;;  dlc             1   11[BANK0 ] unsigned char 
  1727 ;;  load_addr       1   10[BANK0 ] unsigned char 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1737 ;;      Params:         0       8       0       0       0
  1738 ;;      Locals:         0      10       0       0       0
  1739 ;;      Temps:          1       0       0       0       0
  1740 ;;      Totals:         1      18       0       0       0
  1741 ;;Total ram usage:       19 bytes
  1742 ;; Hardware stack levels used: 1
  1743 ;; Hardware stack levels required when called: 2
  1744 ;; This function calls:
  1745 ;;		_WriteSPI
  1746 ;;		_mcp2515_id_to_buf
  1747 ;;		_mcp2515_start_transmit
  1748 ;;		_txSidhToTxLoad
  1749 ;; This function is called by:
  1750 ;;		_sendMsg
  1751 ;;		_sendMsgBuf1
  1752 ;;		_trySendMsgBuf
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756     0202                     _mcp2515_write_canMsg:	
  1757                           ;psect for function _mcp2515_write_canMsg
  1758                           
  1759                           
  1760                           ;incstack = 0
  1761                           ; Regs used in _mcp2515_write_canMsg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  1762                           ;mcp2515_write_canMsg@buffer_sidh_addr stored from wreg
  1763     0202  1283               	bcf	3,5	;RP0=0, select bank0
  1764     0203  1303               	bcf	3,6	;RP1=0, select bank0
  1765     0204  00B0               	movwf	mcp2515_write_canMsg@buffer_sidh_addr
  1766     0205                     l3217:
  1767                           
  1768                           ;mcp2515_can.c: 918: void mcp2515_write_canMsg(const unsigned char buffer_sidh_addr, uns
      +                          igned long id, unsigned char ext, unsigned char rtrBit, unsigned char len,;mcp2515_can.c
      +                          : 919:                                    volatile const unsigned char* buf) {;mcp2515_c
      +                          an.c: 920:     unsigned char load_addr = txSidhToTxLoad(buffer_sidh_addr);
  1769     0205  0830               	movf	mcp2515_write_canMsg@buffer_sidh_addr,w
  1770     0206  120A  158A  2719  120A  118A  	fcall	_txSidhToTxLoad
  1771     020B  1283               	bcf	3,5	;RP0=0, select bank0
  1772     020C  1303               	bcf	3,6	;RP1=0, select bank0
  1773     020D  00AA               	movwf	mcp2515_write_canMsg@load_addr
  1774     020E                     l3219:
  1775                           
  1776                           ;mcp2515_can.c: 922:     unsigned char tbufdata[4];;mcp2515_can.c: 923:     unsigned cha
      +                          r dlc = len | (rtrBit ? 0x40 : 0) ;
  1777     020E  0825               	movf	mcp2515_write_canMsg@rtrBit,w
  1778     020F  1D03               	btfss	3,2
  1779     0210  2A12               	goto	u1241
  1780     0211  2A13               	goto	u1240
  1781     0212                     u1241:
  1782     0212  2A16               	goto	l3223
  1783     0213                     u1240:
  1784     0213                     l3221:
  1785     0213  01A8               	clrf	_mcp2515_write_canMsg$328
  1786     0214  01A9               	clrf	_mcp2515_write_canMsg$328+1
  1787     0215  2A1A               	goto	l3225
  1788     0216                     l3223:
  1789     0216  3040               	movlw	64
  1790     0217  00A8               	movwf	_mcp2515_write_canMsg$328
  1791     0218  3000               	movlw	0
  1792     0219  00A9               	movwf	_mcp2515_write_canMsg$328+1
  1793     021A                     l3225:
  1794     021A  0826               	movf	mcp2515_write_canMsg@len,w
  1795     021B  0428               	iorwf	_mcp2515_write_canMsg$328,w
  1796     021C  00AB               	movwf	mcp2515_write_canMsg@dlc
  1797     021D                     l3227:
  1798                           
  1799                           ;mcp2515_can.c: 924:     unsigned char i;;mcp2515_can.c: 926:     mcp2515_id_to_buf(ext,
      +                           id, tbufdata);
  1800     021D  0823               	movf	mcp2515_write_canMsg@id+3,w
  1801     021E  00F4               	movwf	mcp2515_id_to_buf@id+3
  1802     021F  0822               	movf	mcp2515_write_canMsg@id+2,w
  1803     0220  00F3               	movwf	mcp2515_id_to_buf@id+2
  1804     0221  0821               	movf	mcp2515_write_canMsg@id+1,w
  1805     0222  00F2               	movwf	mcp2515_id_to_buf@id+1
  1806     0223  0820               	movf	mcp2515_write_canMsg@id,w
  1807     0224  00F1               	movwf	mcp2515_id_to_buf@id
  1808     0225  302C               	movlw	(low (mcp2515_write_canMsg@tbufdata| 0))& (0+255)
  1809     0226  00F5               	movwf	mcp2515_id_to_buf@tbufdata
  1810     0227  0824               	movf	mcp2515_write_canMsg@ext,w
  1811     0228  120A  118A  2187  120A  118A  	fcall	_mcp2515_id_to_buf
  1812     022D                     l3229:
  1813                           
  1814                           ;mcp2515_can.c: 931:     RD0 = 0;;
  1815     022D  1283               	bcf	3,5	;RP0=0, select bank0
  1816     022E  1303               	bcf	3,6	;RP1=0, select bank0
  1817     022F  1008               	bcf	8,0	;volatile
  1818     0230                     l3231:
  1819                           
  1820                           ;mcp2515_can.c: 932:     WriteSPI(load_addr);
  1821     0230  082A               	movf	mcp2515_write_canMsg@load_addr,w
  1822     0231  120A  158A  25B5  120A  118A  	fcall	_WriteSPI
  1823     0236                     l3233:
  1824                           
  1825                           ;mcp2515_can.c: 933:     for (i = 0; i < 4; i++) {
  1826     0236  1283               	bcf	3,5	;RP0=0, select bank0
  1827     0237  1303               	bcf	3,6	;RP1=0, select bank0
  1828     0238  01B1               	clrf	mcp2515_write_canMsg@i
  1829     0239                     l3239:
  1830                           
  1831                           ;mcp2515_can.c: 934:         WriteSPI(tbufdata[i]);
  1832     0239  0831               	movf	mcp2515_write_canMsg@i,w
  1833     023A  3E2C               	addlw	(low (mcp2515_write_canMsg@tbufdata| 0))& (0+255)
  1834     023B  0084               	movwf	4
  1835     023C  1383               	bcf	3,7	;select IRP bank0
  1836     023D  0800               	movf	0,w
  1837     023E  120A  158A  25B5  120A  118A  	fcall	_WriteSPI
  1838     0243                     l3241:
  1839                           
  1840                           ;mcp2515_can.c: 935:     }
  1841     0243  3001               	movlw	1
  1842     0244  00FF               	movwf	btemp+1
  1843     0245  087F               	movf	btemp+1,w
  1844     0246  1283               	bcf	3,5	;RP0=0, select bank0
  1845     0247  1303               	bcf	3,6	;RP1=0, select bank0
  1846     0248  07B1               	addwf	mcp2515_write_canMsg@i,f
  1847     0249                     l3243:
  1848     0249  3004               	movlw	4
  1849     024A  0231               	subwf	mcp2515_write_canMsg@i,w
  1850     024B  1C03               	skipc
  1851     024C  2A4E               	goto	u1251
  1852     024D  2A4F               	goto	u1250
  1853     024E                     u1251:
  1854     024E  2A39               	goto	l3239
  1855     024F                     u1250:
  1856     024F                     l3245:
  1857                           
  1858                           ;mcp2515_can.c: 936:     WriteSPI(dlc);
  1859     024F  082B               	movf	mcp2515_write_canMsg@dlc,w
  1860     0250  120A  158A  25B5  120A  118A  	fcall	_WriteSPI
  1861     0255                     l3247:
  1862                           
  1863                           ;mcp2515_can.c: 937:     for (i = 0; i < len && i < (8); i++) {
  1864     0255  1283               	bcf	3,5	;RP0=0, select bank0
  1865     0256  1303               	bcf	3,6	;RP1=0, select bank0
  1866     0257  01B1               	clrf	mcp2515_write_canMsg@i
  1867     0258  2A6B               	goto	l3253
  1868     0259                     l3249:
  1869                           
  1870                           ;mcp2515_can.c: 938:         WriteSPI(buf[i]);
  1871     0259  0831               	movf	mcp2515_write_canMsg@i,w
  1872     025A  0727               	addwf	mcp2515_write_canMsg@buf,w
  1873     025B  00FD               	movwf	??_mcp2515_write_canMsg
  1874     025C  087D               	movf	??_mcp2515_write_canMsg,w
  1875     025D  0084               	movwf	4
  1876     025E  1383               	bcf	3,7	;select IRP bank0
  1877     025F  0800               	movf	0,w
  1878     0260  120A  158A  25B5  120A  118A  	fcall	_WriteSPI
  1879     0265                     l3251:
  1880                           
  1881                           ;mcp2515_can.c: 939:     }
  1882     0265  3001               	movlw	1
  1883     0266  00FF               	movwf	btemp+1
  1884     0267  087F               	movf	btemp+1,w
  1885     0268  1283               	bcf	3,5	;RP0=0, select bank0
  1886     0269  1303               	bcf	3,6	;RP1=0, select bank0
  1887     026A  07B1               	addwf	mcp2515_write_canMsg@i,f
  1888     026B                     l3253:
  1889     026B  0826               	movf	mcp2515_write_canMsg@len,w
  1890     026C  0231               	subwf	mcp2515_write_canMsg@i,w
  1891     026D  1803               	skipnc
  1892     026E  2A70               	goto	u1261
  1893     026F  2A71               	goto	u1260
  1894     0270                     u1261:
  1895     0270  2A77               	goto	l326
  1896     0271                     u1260:
  1897     0271                     l3255:
  1898     0271  3008               	movlw	8
  1899     0272  0231               	subwf	mcp2515_write_canMsg@i,w
  1900     0273  1C03               	skipc
  1901     0274  2A76               	goto	u1271
  1902     0275  2A77               	goto	u1270
  1903     0276                     u1271:
  1904     0276  2A59               	goto	l3249
  1905     0277                     u1270:
  1906     0277                     l326:
  1907                           
  1908                           ;mcp2515_can.c: 941:     RD0 = 1;;
  1909     0277  1408               	bsf	8,0	;volatile
  1910     0278                     l3257:
  1911                           
  1912                           ;mcp2515_can.c: 946:     mcp2515_start_transmit(buffer_sidh_addr);
  1913     0278  0830               	movf	mcp2515_write_canMsg@buffer_sidh_addr,w
  1914     0279  120A  158A  25D8  120A  118A  	fcall	_mcp2515_start_transmit
  1915     027E                     l327:
  1916     027E  0008               	return
  1917     027F                     __end_of_mcp2515_write_canMsg:
  1918                           
  1919                           	psect	text4
  1920     0F19                     __ptext4:	
  1921 ;; *************** function _txSidhToTxLoad *****************
  1922 ;; Defined at:
  1923 ;;		line 116 in file "mcp2515_can.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  sidh            1    wreg     unsigned char 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  sidh            1    2[COMMON] unsigned char 
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      unsigned char 
  1930 ;; Registers used:
  1931 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1937 ;;      Params:         0       0       0       0       0
  1938 ;;      Locals:         1       0       0       0       0
  1939 ;;      Temps:          2       0       0       0       0
  1940 ;;      Totals:         3       0       0       0       0
  1941 ;;Total ram usage:        3 bytes
  1942 ;; Hardware stack levels used: 1
  1943 ;; This function calls:
  1944 ;;		Nothing
  1945 ;; This function is called by:
  1946 ;;		_mcp2515_write_canMsg
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950     0F19                     _txSidhToTxLoad:	
  1951                           ;psect for function _txSidhToTxLoad
  1952                           
  1953                           
  1954                           ;incstack = 0
  1955                           ; Regs used in _txSidhToTxLoad: [wreg-fsr0h+status,2+status,0]
  1956                           ;txSidhToTxLoad@sidh stored from wreg
  1957     0F19  00F3               	movwf	txSidhToTxLoad@sidh
  1958     0F1A                     l2833:
  1959                           
  1960                           ;mcp2515_can.c: 117:     switch (sidh) {
  1961     0F1A  2F21               	goto	l2849
  1962     0F1B                     l2835:
  1963     0F1B  3040               	movlw	64
  1964     0F1C  2F35               	goto	l132
  1965     0F1D                     l2839:
  1966     0F1D  3042               	movlw	66
  1967     0F1E  2F35               	goto	l132
  1968     0F1F                     l2843:
  1969     0F1F  3044               	movlw	68
  1970     0F20  2F35               	goto	l132
  1971     0F21                     l2849:
  1972     0F21  0873               	movf	txSidhToTxLoad@sidh,w
  1973     0F22  00F1               	movwf	??_txSidhToTxLoad
  1974     0F23  01F2               	clrf	??_txSidhToTxLoad+1
  1975                           
  1976                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1977                           ; Switch size 1, requested type "simple"
  1978                           ; Number of cases is 1, Range of values is 0 to 0
  1979                           ; switch strategies available:
  1980                           ; Name         Instructions Cycles
  1981                           ; simple_byte            4     3 (average)
  1982                           ; direct_byte           11     8 (fixed)
  1983                           ; jumptable            260     6 (fixed)
  1984                           ;	Chosen strategy is simple_byte
  1985     0F24  0872               	movf	??_txSidhToTxLoad+1,w
  1986     0F25  3A00               	xorlw	0	; case 0
  1987     0F26  1903               	skipnz
  1988     0F27  2F29               	goto	l4239
  1989     0F28  2F34               	goto	l2851
  1990     0F29                     l4239:
  1991                           
  1992                           ; Switch size 1, requested type "simple"
  1993                           ; Number of cases is 3, Range of values is 49 to 81
  1994                           ; switch strategies available:
  1995                           ; Name         Instructions Cycles
  1996                           ; simple_byte           10     6 (average)
  1997                           ; direct_byte          110    11 (fixed)
  1998                           ; jumptable            263     9 (fixed)
  1999                           ;	Chosen strategy is simple_byte
  2000     0F29  0871               	movf	??_txSidhToTxLoad,w
  2001     0F2A  3A31               	xorlw	49	; case 49
  2002     0F2B  1903               	skipnz
  2003     0F2C  2F1B               	goto	l2835
  2004     0F2D  3A70               	xorlw	112	; case 65
  2005     0F2E  1903               	skipnz
  2006     0F2F  2F1D               	goto	l2839
  2007     0F30  3A10               	xorlw	16	; case 81
  2008     0F31  1903               	skipnz
  2009     0F32  2F1F               	goto	l2843
  2010     0F33  2F34               	goto	l2851
  2011     0F34                     l2851:
  2012                           
  2013                           ;mcp2515_can.c: 122:     return 0;
  2014     0F34  3000               	movlw	0
  2015     0F35                     l132:
  2016     0F35  0008               	return
  2017     0F36                     __end_of_txSidhToTxLoad:
  2018                           
  2019                           	psect	text5
  2020     0DD8                     __ptext5:	
  2021 ;; *************** function _mcp2515_start_transmit *****************
  2022 ;; Defined at:
  2023 ;;		line 990 in file "mcp2515_can.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  mcp_addr        1    wreg     const unsigned char 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  mcp_addr        1    3[COMMON] const unsigned char 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      void 
  2030 ;; Registers used:
  2031 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2037 ;;      Params:         0       0       0       0       0
  2038 ;;      Locals:         1       0       0       0       0
  2039 ;;      Temps:          0       0       0       0       0
  2040 ;;      Totals:         1       0       0       0       0
  2041 ;;Total ram usage:        1 bytes
  2042 ;; Hardware stack levels used: 1
  2043 ;; Hardware stack levels required when called: 1
  2044 ;; This function calls:
  2045 ;;		_WriteSPI
  2046 ;;		_txSidhToRTS
  2047 ;; This function is called by:
  2048 ;;		_mcp2515_write_canMsg
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052     0DD8                     _mcp2515_start_transmit:	
  2053                           ;psect for function _mcp2515_start_transmit
  2054                           
  2055                           
  2056                           ;incstack = 0
  2057                           ; Regs used in _mcp2515_start_transmit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2058                           ;mcp2515_start_transmit@mcp_addr stored from wreg
  2059     0DD8  00F4               	movwf	mcp2515_start_transmit@mcp_addr
  2060     0DD9                     l2971:
  2061                           
  2062                           ;mcp2515_can.c: 994:     RD0 = 0;;
  2063     0DD9  1283               	bcf	3,5	;RP0=0, select bank0
  2064     0DDA  1303               	bcf	3,6	;RP1=0, select bank0
  2065     0DDB  1008               	bcf	8,0	;volatile
  2066     0DDC                     l2973:
  2067                           
  2068                           ;mcp2515_can.c: 995:     WriteSPI(txSidhToRTS(mcp_addr));
  2069     0DDC  0874               	movf	mcp2515_start_transmit@mcp_addr,w
  2070     0DDD  120A  158A  26FC  120A  158A  	fcall	_txSidhToRTS
  2071     0DE2  120A  158A  25B5  120A  158A  	fcall	_WriteSPI
  2072     0DE7                     l2975:
  2073                           
  2074                           ;mcp2515_can.c: 996:     RD0 = 1;;
  2075     0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  2076     0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  2077     0DE9  1408               	bsf	8,0	;volatile
  2078     0DEA                     l341:
  2079     0DEA  0008               	return
  2080     0DEB                     __end_of_mcp2515_start_transmit:
  2081                           
  2082                           	psect	text6
  2083     0EFC                     __ptext6:	
  2084 ;; *************** function _txSidhToRTS *****************
  2085 ;; Defined at:
  2086 ;;		line 103 in file "mcp2515_can.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;  sidh            1    wreg     unsigned char 
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;  sidh            1    2[COMMON] unsigned char 
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      unsigned char 
  2093 ;; Registers used:
  2094 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2100 ;;      Params:         0       0       0       0       0
  2101 ;;      Locals:         1       0       0       0       0
  2102 ;;      Temps:          2       0       0       0       0
  2103 ;;      Totals:         3       0       0       0       0
  2104 ;;Total ram usage:        3 bytes
  2105 ;; Hardware stack levels used: 1
  2106 ;; This function calls:
  2107 ;;		Nothing
  2108 ;; This function is called by:
  2109 ;;		_mcp2515_start_transmit
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113     0EFC                     _txSidhToRTS:	
  2114                           ;psect for function _txSidhToRTS
  2115                           
  2116                           
  2117                           ;incstack = 0
  2118                           ; Regs used in _txSidhToRTS: [wreg-fsr0h+status,2+status,0]
  2119                           ;txSidhToRTS@sidh stored from wreg
  2120     0EFC  00F3               	movwf	txSidhToRTS@sidh
  2121     0EFD                     l2753:
  2122                           
  2123                           ;mcp2515_can.c: 104:     switch (sidh) {
  2124     0EFD  2F04               	goto	l2769
  2125     0EFE                     l2755:
  2126     0EFE  3081               	movlw	129
  2127     0EFF  2F18               	goto	l124
  2128     0F00                     l2759:
  2129     0F00  3082               	movlw	130
  2130     0F01  2F18               	goto	l124
  2131     0F02                     l2763:
  2132     0F02  3084               	movlw	132
  2133     0F03  2F18               	goto	l124
  2134     0F04                     l2769:
  2135     0F04  0873               	movf	txSidhToRTS@sidh,w
  2136     0F05  00F1               	movwf	??_txSidhToRTS
  2137     0F06  01F2               	clrf	??_txSidhToRTS+1
  2138                           
  2139                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2140                           ; Switch size 1, requested type "simple"
  2141                           ; Number of cases is 1, Range of values is 0 to 0
  2142                           ; switch strategies available:
  2143                           ; Name         Instructions Cycles
  2144                           ; simple_byte            4     3 (average)
  2145                           ; direct_byte           11     8 (fixed)
  2146                           ; jumptable            260     6 (fixed)
  2147                           ;	Chosen strategy is simple_byte
  2148     0F07  0872               	movf	??_txSidhToRTS+1,w
  2149     0F08  3A00               	xorlw	0	; case 0
  2150     0F09  1903               	skipnz
  2151     0F0A  2F0C               	goto	l4241
  2152     0F0B  2F17               	goto	l2771
  2153     0F0C                     l4241:
  2154                           
  2155                           ; Switch size 1, requested type "simple"
  2156                           ; Number of cases is 3, Range of values is 49 to 81
  2157                           ; switch strategies available:
  2158                           ; Name         Instructions Cycles
  2159                           ; simple_byte           10     6 (average)
  2160                           ; direct_byte          110    11 (fixed)
  2161                           ; jumptable            263     9 (fixed)
  2162                           ;	Chosen strategy is simple_byte
  2163     0F0C  0871               	movf	??_txSidhToRTS,w
  2164     0F0D  3A31               	xorlw	49	; case 49
  2165     0F0E  1903               	skipnz
  2166     0F0F  2EFE               	goto	l2755
  2167     0F10  3A70               	xorlw	112	; case 65
  2168     0F11  1903               	skipnz
  2169     0F12  2F00               	goto	l2759
  2170     0F13  3A10               	xorlw	16	; case 81
  2171     0F14  1903               	skipnz
  2172     0F15  2F02               	goto	l2763
  2173     0F16  2F17               	goto	l2771
  2174     0F17                     l2771:
  2175                           
  2176                           ;mcp2515_can.c: 109:     return 0;
  2177     0F17  3000               	movlw	0
  2178     0F18                     l124:
  2179     0F18  0008               	return
  2180     0F19                     __end_of_txSidhToRTS:
  2181                           
  2182                           	psect	text7
  2183     0187                     __ptext7:	
  2184 ;; *************** function _mcp2515_id_to_buf *****************
  2185 ;; Defined at:
  2186 ;;		line 858 in file "mcp2515_can.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;  ext             1    wreg     const unsigned char 
  2189 ;;  id              4    0[COMMON] const unsigned long 
  2190 ;;  tbufdata        1    4[COMMON] PTR unsigned char 
  2191 ;;		 -> mcp2515_write_canMsg@tbufdata(4), mcp2515_write_id@tbufdata(4), 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  ext             1    9[COMMON] const unsigned char 
  2194 ;;  canid           2   10[COMMON] unsigned short 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      void 
  2197 ;; Registers used:
  2198 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2204 ;;      Params:         5       0       0       0       0
  2205 ;;      Locals:         3       0       0       0       0
  2206 ;;      Temps:          4       0       0       0       0
  2207 ;;      Totals:        12       0       0       0       0
  2208 ;;Total ram usage:       12 bytes
  2209 ;; Hardware stack levels used: 1
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_mcp2515_write_canMsg
  2214 ;;		_mcp2515_write_id
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218     0187                     _mcp2515_id_to_buf:	
  2219                           ;psect for function _mcp2515_id_to_buf
  2220                           
  2221                           
  2222                           ;incstack = 0
  2223                           ; Regs used in _mcp2515_id_to_buf: [wreg-fsr0h+status,2+status,0+btemp+1]
  2224                           ;mcp2515_id_to_buf@ext stored from wreg
  2225     0187  00FA               	movwf	mcp2515_id_to_buf@ext
  2226     0188                     l2953:
  2227                           
  2228                           ;mcp2515_can.c: 859:     uint16_t canid;;mcp2515_can.c: 861:     canid = (uint16_t)(id &
      +                           0x0FFFF);
  2229     0188  0872               	movf	mcp2515_id_to_buf@id+1,w
  2230     0189  00FC               	movwf	mcp2515_id_to_buf@canid+1
  2231     018A  0871               	movf	mcp2515_id_to_buf@id,w
  2232     018B  00FB               	movwf	mcp2515_id_to_buf@canid
  2233     018C                     l2955:
  2234                           
  2235                           ;mcp2515_can.c: 863:     if (ext == 1) {
  2236     018C  037A               	decf	mcp2515_id_to_buf@ext,w
  2237     018D  1D03               	btfss	3,2
  2238     018E  2990               	goto	u1161
  2239     018F  2991               	goto	u1160
  2240     0190                     u1161:
  2241     0190  29D9               	goto	l2969
  2242     0191                     u1160:
  2243     0191                     l2957:
  2244                           
  2245                           ;mcp2515_can.c: 864:         tbufdata[3] = (unsigned char)(canid & 0xFF);
  2246     0191  0875               	movf	mcp2515_id_to_buf@tbufdata,w
  2247     0192  3E03               	addlw	3
  2248     0193  0084               	movwf	4
  2249     0194  087B               	movf	mcp2515_id_to_buf@canid,w
  2250     0195  1383               	bcf	3,7	;select IRP bank0
  2251     0196  0080               	movwf	0
  2252                           
  2253                           ;mcp2515_can.c: 865:         tbufdata[2] = (unsigned char)(canid >> 8);
  2254     0197  0875               	movf	mcp2515_id_to_buf@tbufdata,w
  2255     0198  3E02               	addlw	2
  2256     0199  0084               	movwf	4
  2257     019A  087C               	movf	mcp2515_id_to_buf@canid+1,w
  2258     019B  0080               	movwf	0
  2259     019C                     l2959:
  2260                           
  2261                           ;mcp2515_can.c: 866:         canid = (uint16_t)(id >> 16);
  2262     019C  0871               	movf	mcp2515_id_to_buf@id,w
  2263     019D  00F6               	movwf	??_mcp2515_id_to_buf
  2264     019E  0872               	movf	mcp2515_id_to_buf@id+1,w
  2265     019F  00F7               	movwf	??_mcp2515_id_to_buf+1
  2266     01A0  0873               	movf	mcp2515_id_to_buf@id+2,w
  2267     01A1  00F8               	movwf	??_mcp2515_id_to_buf+2
  2268     01A2  0874               	movf	mcp2515_id_to_buf@id+3,w
  2269     01A3  00F9               	movwf	??_mcp2515_id_to_buf+3
  2270     01A4  3010               	movlw	16
  2271     01A5                     u1175:
  2272     01A5  1003               	clrc
  2273     01A6  0CF9               	rrf	??_mcp2515_id_to_buf+3,f
  2274     01A7  0CF8               	rrf	??_mcp2515_id_to_buf+2,f
  2275     01A8  0CF7               	rrf	??_mcp2515_id_to_buf+1,f
  2276     01A9  0CF6               	rrf	??_mcp2515_id_to_buf,f
  2277     01AA                     u1170:
  2278     01AA  3EFF               	addlw	-1
  2279     01AB  1D03               	skipz
  2280     01AC  29A5               	goto	u1175
  2281     01AD  0877               	movf	??_mcp2515_id_to_buf+1,w
  2282     01AE  00FC               	movwf	mcp2515_id_to_buf@canid+1
  2283     01AF  0876               	movf	??_mcp2515_id_to_buf,w
  2284     01B0  00FB               	movwf	mcp2515_id_to_buf@canid
  2285     01B1                     l2961:
  2286                           
  2287                           ;mcp2515_can.c: 867:         tbufdata[1] = (unsigned char)(canid & 0x03);
  2288     01B1  0A75               	incf	mcp2515_id_to_buf@tbufdata,w
  2289     01B2  0084               	movwf	4
  2290     01B3  087B               	movf	mcp2515_id_to_buf@canid,w
  2291     01B4  3903               	andlw	3
  2292     01B5  0080               	movwf	0
  2293     01B6                     l2963:
  2294                           
  2295                           ;mcp2515_can.c: 868:         tbufdata[1] += (unsigned char)((canid & 0x1C) << 3);
  2296     01B6  087B               	movf	mcp2515_id_to_buf@canid,w
  2297     01B7  391C               	andlw	28
  2298     01B8  00F6               	movwf	??_mcp2515_id_to_buf
  2299     01B9  3002               	movlw	2
  2300     01BA                     u1185:
  2301     01BA  1003               	clrc
  2302     01BB  0DF6               	rlf	??_mcp2515_id_to_buf,f
  2303     01BC  3EFF               	addlw	-1
  2304     01BD  1D03               	skipz
  2305     01BE  29BA               	goto	u1185
  2306     01BF  1003               	clrc
  2307     01C0  0D76               	rlf	??_mcp2515_id_to_buf,w
  2308     01C1  00FF               	movwf	btemp+1
  2309     01C2  0A75               	incf	mcp2515_id_to_buf@tbufdata,w
  2310     01C3  0084               	movwf	4
  2311     01C4  087F               	movf	btemp+1,w
  2312     01C5  0780               	addwf	0,f
  2313     01C6                     l2965:
  2314                           
  2315                           ;mcp2515_can.c: 869:         tbufdata[1] |= 0x08;
  2316     01C6  0A75               	incf	mcp2515_id_to_buf@tbufdata,w
  2317     01C7  0084               	movwf	4
  2318     01C8  1580               	bsf	0,3
  2319     01C9                     l2967:
  2320                           
  2321                           ;mcp2515_can.c: 870:         tbufdata[0] = (unsigned char)(canid >> 5);
  2322     01C9  0875               	movf	mcp2515_id_to_buf@tbufdata,w
  2323     01CA  0084               	movwf	4
  2324     01CB  087C               	movf	mcp2515_id_to_buf@canid+1,w
  2325     01CC  00F7               	movwf	??_mcp2515_id_to_buf+1
  2326     01CD  087B               	movf	mcp2515_id_to_buf@canid,w
  2327     01CE  00F6               	movwf	??_mcp2515_id_to_buf
  2328     01CF  3005               	movlw	5
  2329     01D0                     u1195:
  2330     01D0  1003               	clrc
  2331     01D1  0CF7               	rrf	??_mcp2515_id_to_buf+1,f
  2332     01D2  0CF6               	rrf	??_mcp2515_id_to_buf,f
  2333     01D3  3EFF               	addlw	-1
  2334     01D4  1D03               	skipz
  2335     01D5  29D0               	goto	u1195
  2336     01D6  0876               	movf	??_mcp2515_id_to_buf,w
  2337     01D7  0080               	movwf	0
  2338                           
  2339                           ;mcp2515_can.c: 871:     } else {
  2340     01D8  2A01               	goto	l306
  2341     01D9                     l2969:
  2342                           
  2343                           ;mcp2515_can.c: 872:         tbufdata[0] = (unsigned char)(canid >> 3);
  2344     01D9  0875               	movf	mcp2515_id_to_buf@tbufdata,w
  2345     01DA  0084               	movwf	4
  2346     01DB  087C               	movf	mcp2515_id_to_buf@canid+1,w
  2347     01DC  00F7               	movwf	??_mcp2515_id_to_buf+1
  2348     01DD  087B               	movf	mcp2515_id_to_buf@canid,w
  2349     01DE  00F6               	movwf	??_mcp2515_id_to_buf
  2350     01DF  1003               	clrc
  2351     01E0  0CF7               	rrf	??_mcp2515_id_to_buf+1,f
  2352     01E1  0CF6               	rrf	??_mcp2515_id_to_buf,f
  2353     01E2  1003               	clrc
  2354     01E3  0CF7               	rrf	??_mcp2515_id_to_buf+1,f
  2355     01E4  0CF6               	rrf	??_mcp2515_id_to_buf,f
  2356     01E5  1003               	clrc
  2357     01E6  0CF7               	rrf	??_mcp2515_id_to_buf+1,f
  2358     01E7  0CF6               	rrf	??_mcp2515_id_to_buf,f
  2359     01E8  0876               	movf	??_mcp2515_id_to_buf,w
  2360     01E9  1383               	bcf	3,7	;select IRP bank0
  2361     01EA  0080               	movwf	0
  2362                           
  2363                           ;mcp2515_can.c: 873:         tbufdata[1] = (unsigned char)((canid & 0x07) << 5);
  2364     01EB  0A75               	incf	mcp2515_id_to_buf@tbufdata,w
  2365     01EC  0084               	movwf	4
  2366     01ED  087B               	movf	mcp2515_id_to_buf@canid,w
  2367     01EE  3907               	andlw	7
  2368     01EF  00F6               	movwf	??_mcp2515_id_to_buf
  2369     01F0  3004               	movlw	4
  2370     01F1                     u1205:
  2371     01F1  1003               	clrc
  2372     01F2  0DF6               	rlf	??_mcp2515_id_to_buf,f
  2373     01F3  3EFF               	addlw	-1
  2374     01F4  1D03               	skipz
  2375     01F5  29F1               	goto	u1205
  2376     01F6  1003               	clrc
  2377     01F7  0D76               	rlf	??_mcp2515_id_to_buf,w
  2378     01F8  0080               	movwf	0
  2379                           
  2380                           ;mcp2515_can.c: 874:         tbufdata[3] = 0;
  2381     01F9  0875               	movf	mcp2515_id_to_buf@tbufdata,w
  2382     01FA  3E03               	addlw	3
  2383     01FB  0084               	movwf	4
  2384     01FC  0180               	clrf	0
  2385                           
  2386                           ;mcp2515_can.c: 875:         tbufdata[2] = 0;
  2387     01FD  0875               	movf	mcp2515_id_to_buf@tbufdata,w
  2388     01FE  3E02               	addlw	2
  2389     01FF  0084               	movwf	4
  2390     0200  0180               	clrf	0
  2391     0201                     l306:
  2392     0201  0008               	return
  2393     0202                     __end_of_mcp2515_id_to_buf:
  2394                           
  2395                           	psect	text8
  2396     0030                     __ptext8:	
  2397 ;; *************** function _mcp2515_getNextFreeTXBuf *****************
  2398 ;; Defined at:
  2399 ;;		line 1024 in file "mcp2515_can.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  txbuf_n         1    wreg     PTR unsigned char 
  2402 ;;		 -> sendMsg@txbuf_n(1), trySendMsgBuf@txbuf_n(1), 
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;  txbuf_n         1    7[COMMON] PTR unsigned char 
  2405 ;;		 -> sendMsg@txbuf_n(1), trySendMsgBuf@txbuf_n(1), 
  2406 ;;  i               1    8[COMMON] unsigned char 
  2407 ;;  status          1    6[COMMON] unsigned char 
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  1    wreg      unsigned char 
  2410 ;; Registers used:
  2411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2417 ;;      Params:         0       0       0       0       0
  2418 ;;      Locals:         3       0       0       0       0
  2419 ;;      Temps:          0       0       0       0       0
  2420 ;;      Totals:         3       0       0       0       0
  2421 ;;Total ram usage:        3 bytes
  2422 ;; Hardware stack levels used: 1
  2423 ;; Hardware stack levels required when called: 2
  2424 ;; This function calls:
  2425 ;;		_mcp2515_modifyRegister
  2426 ;;		_mcp2515_readStatus
  2427 ;;		_txCtrlReg
  2428 ;;		_txIfFlag
  2429 ;;		_txStatusPendingFlag
  2430 ;; This function is called by:
  2431 ;;		_sendMsg
  2432 ;;		_trySendMsgBuf
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436     0030                     _mcp2515_getNextFreeTXBuf:	
  2437                           ;psect for function _mcp2515_getNextFreeTXBuf
  2438                           
  2439                           
  2440                           ;incstack = 0
  2441                           ; Regs used in _mcp2515_getNextFreeTXBuf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  2442                           ;mcp2515_getNextFreeTXBuf@txbuf_n stored from wreg
  2443     0030  00F8               	movwf	mcp2515_getNextFreeTXBuf@txbuf_n
  2444     0031                     l3301:
  2445                           
  2446                           ;mcp2515_can.c: 1025:     unsigned char status = mcp2515_readStatus() & (0x54);
  2447     0031  120A  158A  25FE  120A  118A  	fcall	_mcp2515_readStatus
  2448     0036  3954               	andlw	84
  2449     0037  00F7               	movwf	mcp2515_getNextFreeTXBuf@status
  2450     0038                     l3303:
  2451                           
  2452                           ;mcp2515_can.c: 1026:     unsigned char i;;mcp2515_can.c: 1028:     *txbuf_n = 0x00;
  2453     0038  0878               	movf	mcp2515_getNextFreeTXBuf@txbuf_n,w
  2454     0039  0084               	movwf	4
  2455     003A  1383               	bcf	3,7	;select IRP bank0
  2456     003B  0180               	clrf	0
  2457     003C                     l3305:
  2458                           
  2459                           ;mcp2515_can.c: 1030:     if (status == (0x54)) {
  2460     003C  3054               	movlw	84
  2461     003D  0677               	xorwf	mcp2515_getNextFreeTXBuf@status,w
  2462     003E  1D03               	btfss	3,2
  2463     003F  2841               	goto	u1411
  2464     0040  2842               	goto	u1410
  2465     0041                     u1411:
  2466     0041  2844               	goto	l3311
  2467     0042                     u1410:
  2468     0042                     l3307:
  2469                           
  2470                           ;mcp2515_can.c: 1031:         return (2);
  2471     0042  3002               	movlw	2
  2472     0043  2879               	goto	l351
  2473     0044                     l3311:
  2474                           
  2475                           ;mcp2515_can.c: 1035:     for (i = 0; i < (3) - nReservedTx; i++) {
  2476     0044  01F9               	clrf	mcp2515_getNextFreeTXBuf@i
  2477     0045  2872               	goto	l3325
  2478     0046                     l3313:
  2479                           
  2480                           ;mcp2515_can.c: 1036:         if ((status & txStatusPendingFlag(i)) == 0) {
  2481     0046  0879               	movf	mcp2515_getNextFreeTXBuf@i,w
  2482     0047  120A  158A  26DF  120A  118A  	fcall	_txStatusPendingFlag
  2483     004C  0577               	andwf	mcp2515_getNextFreeTXBuf@status,w
  2484     004D  1D03               	btfss	3,2
  2485     004E  2850               	goto	u1421
  2486     004F  2851               	goto	u1420
  2487     0050                     u1421:
  2488     0050  286E               	goto	l3323
  2489     0051                     u1420:
  2490     0051                     l3315:
  2491                           
  2492                           ;mcp2515_can.c: 1037:             *txbuf_n = txCtrlReg(i) + 1;
  2493     0051  0879               	movf	mcp2515_getNextFreeTXBuf@i,w
  2494     0052  120A  158A  26A6  120A  118A  	fcall	_txCtrlReg
  2495     0057  3E01               	addlw	1
  2496     0058  00FF               	movwf	btemp+1
  2497     0059  0878               	movf	mcp2515_getNextFreeTXBuf@txbuf_n,w
  2498     005A  0084               	movwf	4
  2499     005B  087F               	movf	btemp+1,w
  2500     005C  1383               	bcf	3,7	;select IRP bank0
  2501     005D  0080               	movwf	0
  2502     005E                     l3317:
  2503                           
  2504                           ;mcp2515_can.c: 1038:             mcp2515_modifyRegister(0x2C, txIfFlag(i), 0);
  2505     005E  0879               	movf	mcp2515_getNextFreeTXBuf@i,w
  2506     005F  120A  158A  26C2  120A  118A  	fcall	_txIfFlag
  2507     0064  00F4               	movwf	mcp2515_modifyRegister@mask
  2508     0065  01F5               	clrf	mcp2515_modifyRegister@data
  2509     0066  302C               	movlw	44
  2510     0067  120A  118A  2010  120A  118A  	fcall	_mcp2515_modifyRegister
  2511     006C                     l3319:
  2512                           
  2513                           ;mcp2515_can.c: 1039:             return (0);
  2514     006C  3000               	movlw	0
  2515     006D  2879               	goto	l351
  2516     006E                     l3323:
  2517                           
  2518                           ;mcp2515_can.c: 1041:     }
  2519     006E  3001               	movlw	1
  2520     006F  00FF               	movwf	btemp+1
  2521     0070  087F               	movf	btemp+1,w
  2522     0071  07F9               	addwf	mcp2515_getNextFreeTXBuf@i,f
  2523     0072                     l3325:
  2524     0072  3003               	movlw	3
  2525     0073  0279               	subwf	mcp2515_getNextFreeTXBuf@i,w
  2526     0074  1C03               	skipc
  2527     0075  2877               	goto	u1431
  2528     0076  2878               	goto	u1430
  2529     0077                     u1431:
  2530     0077  2846               	goto	l3313
  2531     0078                     u1430:
  2532     0078  2842               	goto	l3307
  2533     0079                     l351:
  2534     0079  0008               	return
  2535     007A                     __end_of_mcp2515_getNextFreeTXBuf:
  2536                           
  2537                           	psect	text9
  2538     0EDF                     __ptext9:	
  2539 ;; *************** function _txStatusPendingFlag *****************
  2540 ;; Defined at:
  2541 ;;		line 142 in file "mcp2515_can.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  i               1    wreg     unsigned char 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  i               1    2[COMMON] unsigned char 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      unsigned char 
  2548 ;; Registers used:
  2549 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2555 ;;      Params:         0       0       0       0       0
  2556 ;;      Locals:         1       0       0       0       0
  2557 ;;      Temps:          2       0       0       0       0
  2558 ;;      Totals:         3       0       0       0       0
  2559 ;;Total ram usage:        3 bytes
  2560 ;; Hardware stack levels used: 1
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_mcp2515_getNextFreeTXBuf
  2565 ;;		_mcp2515_isTXBufFree
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569     0EDF                     _txStatusPendingFlag:	
  2570                           ;psect for function _txStatusPendingFlag
  2571                           
  2572                           
  2573                           ;incstack = 0
  2574                           ; Regs used in _txStatusPendingFlag: [wreg-fsr0h+status,2+status,0]
  2575                           ;txStatusPendingFlag@i stored from wreg
  2576     0EDF  00F3               	movwf	txStatusPendingFlag@i
  2577     0EE0                     l2885:
  2578                           
  2579                           ;mcp2515_can.c: 143:     switch (i) {
  2580     0EE0  2EE7               	goto	l2901
  2581     0EE1                     l2887:
  2582     0EE1  3004               	movlw	4
  2583     0EE2  2EFB               	goto	l148
  2584     0EE3                     l2891:
  2585     0EE3  3010               	movlw	16
  2586     0EE4  2EFB               	goto	l148
  2587     0EE5                     l2895:
  2588     0EE5  3040               	movlw	64
  2589     0EE6  2EFB               	goto	l148
  2590     0EE7                     l2901:
  2591     0EE7  0873               	movf	txStatusPendingFlag@i,w
  2592     0EE8  00F1               	movwf	??_txStatusPendingFlag
  2593     0EE9  01F2               	clrf	??_txStatusPendingFlag+1
  2594                           
  2595                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2596                           ; Switch size 1, requested type "simple"
  2597                           ; Number of cases is 1, Range of values is 0 to 0
  2598                           ; switch strategies available:
  2599                           ; Name         Instructions Cycles
  2600                           ; simple_byte            4     3 (average)
  2601                           ; direct_byte           11     8 (fixed)
  2602                           ; jumptable            260     6 (fixed)
  2603                           ;	Chosen strategy is simple_byte
  2604     0EEA  0872               	movf	??_txStatusPendingFlag+1,w
  2605     0EEB  3A00               	xorlw	0	; case 0
  2606     0EEC  1903               	skipnz
  2607     0EED  2EEF               	goto	l4243
  2608     0EEE  2EFA               	goto	l2903
  2609     0EEF                     l4243:
  2610                           
  2611                           ; Switch size 1, requested type "simple"
  2612                           ; Number of cases is 3, Range of values is 0 to 2
  2613                           ; switch strategies available:
  2614                           ; Name         Instructions Cycles
  2615                           ; simple_byte           10     6 (average)
  2616                           ; direct_byte           17     8 (fixed)
  2617                           ; jumptable            260     6 (fixed)
  2618                           ;	Chosen strategy is simple_byte
  2619     0EEF  0871               	movf	??_txStatusPendingFlag,w
  2620     0EF0  3A00               	xorlw	0	; case 0
  2621     0EF1  1903               	skipnz
  2622     0EF2  2EE1               	goto	l2887
  2623     0EF3  3A01               	xorlw	1	; case 1
  2624     0EF4  1903               	skipnz
  2625     0EF5  2EE3               	goto	l2891
  2626     0EF6  3A03               	xorlw	3	; case 2
  2627     0EF7  1903               	skipnz
  2628     0EF8  2EE5               	goto	l2895
  2629     0EF9  2EFA               	goto	l2903
  2630     0EFA                     l2903:
  2631                           
  2632                           ;mcp2515_can.c: 148:     return 0xff;
  2633     0EFA  30FF               	movlw	255
  2634     0EFB                     l148:
  2635     0EFB  0008               	return
  2636     0EFC                     __end_of_txStatusPendingFlag:
  2637                           
  2638                           	psect	text10
  2639     0EC2                     __ptext10:	
  2640 ;; *************** function _txIfFlag *****************
  2641 ;; Defined at:
  2642 ;;		line 129 in file "mcp2515_can.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  i               1    wreg     unsigned char 
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;  i               1    2[COMMON] unsigned char 
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      unsigned char 
  2649 ;; Registers used:
  2650 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2656 ;;      Params:         0       0       0       0       0
  2657 ;;      Locals:         1       0       0       0       0
  2658 ;;      Temps:          2       0       0       0       0
  2659 ;;      Totals:         3       0       0       0       0
  2660 ;;Total ram usage:        3 bytes
  2661 ;; Hardware stack levels used: 1
  2662 ;; This function calls:
  2663 ;;		Nothing
  2664 ;; This function is called by:
  2665 ;;		_mcp2515_getNextFreeTXBuf
  2666 ;;		_mcp2515_isTXBufFree
  2667 ;;		_checkClearTxStatus
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671     0EC2                     _txIfFlag:	
  2672                           ;psect for function _txIfFlag
  2673                           
  2674                           
  2675                           ;incstack = 0
  2676                           ; Regs used in _txIfFlag: [wreg-fsr0h+status,2+status,0]
  2677                           ;txIfFlag@i stored from wreg
  2678     0EC2  00F3               	movwf	txIfFlag@i
  2679     0EC3                     l2859:
  2680                           
  2681                           ;mcp2515_can.c: 130:     switch (i) {
  2682     0EC3  2ECA               	goto	l2875
  2683     0EC4                     l2861:
  2684     0EC4  3004               	movlw	4
  2685     0EC5  2EDE               	goto	l140
  2686     0EC6                     l2865:
  2687     0EC6  3008               	movlw	8
  2688     0EC7  2EDE               	goto	l140
  2689     0EC8                     l2869:
  2690     0EC8  3010               	movlw	16
  2691     0EC9  2EDE               	goto	l140
  2692     0ECA                     l2875:
  2693     0ECA  0873               	movf	txIfFlag@i,w
  2694     0ECB  00F1               	movwf	??_txIfFlag
  2695     0ECC  01F2               	clrf	??_txIfFlag+1
  2696                           
  2697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2698                           ; Switch size 1, requested type "simple"
  2699                           ; Number of cases is 1, Range of values is 0 to 0
  2700                           ; switch strategies available:
  2701                           ; Name         Instructions Cycles
  2702                           ; simple_byte            4     3 (average)
  2703                           ; direct_byte           11     8 (fixed)
  2704                           ; jumptable            260     6 (fixed)
  2705                           ;	Chosen strategy is simple_byte
  2706     0ECD  0872               	movf	??_txIfFlag+1,w
  2707     0ECE  3A00               	xorlw	0	; case 0
  2708     0ECF  1903               	skipnz
  2709     0ED0  2ED2               	goto	l4245
  2710     0ED1  2EDD               	goto	l2877
  2711     0ED2                     l4245:
  2712                           
  2713                           ; Switch size 1, requested type "simple"
  2714                           ; Number of cases is 3, Range of values is 0 to 2
  2715                           ; switch strategies available:
  2716                           ; Name         Instructions Cycles
  2717                           ; simple_byte           10     6 (average)
  2718                           ; direct_byte           17     8 (fixed)
  2719                           ; jumptable            260     6 (fixed)
  2720                           ;	Chosen strategy is simple_byte
  2721     0ED2  0871               	movf	??_txIfFlag,w
  2722     0ED3  3A00               	xorlw	0	; case 0
  2723     0ED4  1903               	skipnz
  2724     0ED5  2EC4               	goto	l2861
  2725     0ED6  3A01               	xorlw	1	; case 1
  2726     0ED7  1903               	skipnz
  2727     0ED8  2EC6               	goto	l2865
  2728     0ED9  3A03               	xorlw	3	; case 2
  2729     0EDA  1903               	skipnz
  2730     0EDB  2EC8               	goto	l2869
  2731     0EDC  2EDD               	goto	l2877
  2732     0EDD                     l2877:
  2733                           
  2734                           ;mcp2515_can.c: 135:     return 0;
  2735     0EDD  3000               	movlw	0
  2736     0EDE                     l140:
  2737     0EDE  0008               	return
  2738     0EDF                     __end_of_txIfFlag:
  2739                           
  2740                           	psect	text11
  2741     0EA6                     __ptext11:	
  2742 ;; *************** function _txCtrlReg *****************
  2743 ;; Defined at:
  2744 ;;		line 62 in file "mcp2515_can.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  i               1    wreg     unsigned char 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  i               1    2[COMMON] unsigned char 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      unsigned char 
  2751 ;; Registers used:
  2752 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2758 ;;      Params:         0       0       0       0       0
  2759 ;;      Locals:         1       0       0       0       0
  2760 ;;      Temps:          2       0       0       0       0
  2761 ;;      Totals:         3       0       0       0       0
  2762 ;;Total ram usage:        3 bytes
  2763 ;; Hardware stack levels used: 1
  2764 ;; This function calls:
  2765 ;;		Nothing
  2766 ;; This function is called by:
  2767 ;;		_mcp2515_getNextFreeTXBuf
  2768 ;;		_mcp2515_isTXBufFree
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772     0EA6                     _txCtrlReg:	
  2773                           ;psect for function _txCtrlReg
  2774                           
  2775                           
  2776                           ;incstack = 0
  2777                           ; Regs used in _txCtrlReg: [wreg-fsr0h+status,2+status,0]
  2778                           ;txCtrlReg@i stored from wreg
  2779     0EA6  00F3               	movwf	txCtrlReg@i
  2780     0EA7                     l2807:
  2781                           
  2782                           ;mcp2515_can.c: 63:     switch (i) {
  2783     0EA7  2EAE               	goto	l2823
  2784     0EA8                     l2809:
  2785     0EA8  3030               	movlw	48
  2786     0EA9  2EC1               	goto	l100
  2787     0EAA                     l2813:
  2788     0EAA  3040               	movlw	64
  2789     0EAB  2EC1               	goto	l100
  2790     0EAC                     l2817:
  2791     0EAC  3050               	movlw	80
  2792     0EAD  2EC1               	goto	l100
  2793     0EAE                     l2823:
  2794     0EAE  0873               	movf	txCtrlReg@i,w
  2795     0EAF  00F1               	movwf	??_txCtrlReg
  2796     0EB0  01F2               	clrf	??_txCtrlReg+1
  2797                           
  2798                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2799                           ; Switch size 1, requested type "simple"
  2800                           ; Number of cases is 1, Range of values is 0 to 0
  2801                           ; switch strategies available:
  2802                           ; Name         Instructions Cycles
  2803                           ; simple_byte            4     3 (average)
  2804                           ; direct_byte           11     8 (fixed)
  2805                           ; jumptable            260     6 (fixed)
  2806                           ;	Chosen strategy is simple_byte
  2807     0EB1  0872               	movf	??_txCtrlReg+1,w
  2808     0EB2  3A00               	xorlw	0	; case 0
  2809     0EB3  1903               	skipnz
  2810     0EB4  2EB6               	goto	l4247
  2811     0EB5  2EAC               	goto	l2817
  2812     0EB6                     l4247:
  2813                           
  2814                           ; Switch size 1, requested type "simple"
  2815                           ; Number of cases is 3, Range of values is 0 to 2
  2816                           ; switch strategies available:
  2817                           ; Name         Instructions Cycles
  2818                           ; simple_byte           10     6 (average)
  2819                           ; direct_byte           17     8 (fixed)
  2820                           ; jumptable            260     6 (fixed)
  2821                           ;	Chosen strategy is simple_byte
  2822     0EB6  0871               	movf	??_txCtrlReg,w
  2823     0EB7  3A00               	xorlw	0	; case 0
  2824     0EB8  1903               	skipnz
  2825     0EB9  2EA8               	goto	l2809
  2826     0EBA  3A01               	xorlw	1	; case 1
  2827     0EBB  1903               	skipnz
  2828     0EBC  2EAA               	goto	l2813
  2829     0EBD  3A03               	xorlw	3	; case 2
  2830     0EBE  1903               	skipnz
  2831     0EBF  2EAC               	goto	l2817
  2832     0EC0  2EAC               	goto	l2817
  2833     0EC1                     l100:
  2834     0EC1  0008               	return
  2835     0EC2                     __end_of_txCtrlReg:
  2836                           
  2837                           	psect	text12
  2838     0E3F                     __ptext12:	
  2839 ;; *************** function _readMsgBuf *****************
  2840 ;; Defined at:
  2841 ;;		line 23 in file "main.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  len             1    wreg     PTR unsigned char 
  2844 ;;		 -> main@len(1), 
  2845 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  2846 ;;		 -> main@buf(8), 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  len             1   17[BANK0 ] PTR unsigned char 
  2849 ;;		 -> main@len(1), 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      unsigned char 
  2852 ;; Registers used:
  2853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2859 ;;      Params:         0       1       0       0       0
  2860 ;;      Locals:         0       1       0       0       0
  2861 ;;      Temps:          0       0       0       0       0
  2862 ;;      Totals:         0       2       0       0       0
  2863 ;;Total ram usage:        2 bytes
  2864 ;; Hardware stack levels used: 1
  2865 ;; Hardware stack levels required when called: 3
  2866 ;; This function calls:
  2867 ;;		_readMsgBufID
  2868 ;;		_readRxTxStatus
  2869 ;; This function is called by:
  2870 ;;		_main
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874     0E3F                     _readMsgBuf:	
  2875                           ;psect for function _readMsgBuf
  2876                           
  2877                           
  2878                           ;incstack = 0
  2879                           ; Regs used in _readMsgBuf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2880                           ;readMsgBuf@len stored from wreg
  2881     0E3F  1283               	bcf	3,5	;RP0=0, select bank0
  2882     0E40  1303               	bcf	3,6	;RP1=0, select bank0
  2883     0E41  00B1               	movwf	readMsgBuf@len
  2884     0E42                     l3515:
  2885                           
  2886                           ;main.c: 24:     };	Return value of _readMsgBuf is never used
  2887     0E42  305F               	movlw	(low (_can_id| 0))& (0+255)
  2888     0E43  00A9               	movwf	readMsgBufID@id
  2889     0E44  3064               	movlw	(low (_ext_flg| 0))& (0+255)
  2890     0E45  00AA               	movwf	readMsgBufID@ext
  2891     0E46  3063               	movlw	(low (_rtr| 0))& (0+255)
  2892     0E47  00AB               	movwf	readMsgBufID@rtrBit
  2893     0E48  0831               	movf	readMsgBuf@len,w
  2894     0E49  00AC               	movwf	readMsgBufID@len
  2895     0E4A  0830               	movf	readMsgBuf@buf,w
  2896     0E4B  00AD               	movwf	readMsgBufID@buf
  2897     0E4C  120A  158A  2754  120A  158A  	fcall	_readRxTxStatus
  2898     0E51  120A  118A  207A  120A  158A  	fcall	_readMsgBufID
  2899     0E56                     l48:
  2900     0E56  0008               	return
  2901     0E57                     __end_of_readMsgBuf:
  2902                           
  2903                           	psect	text13
  2904     0F54                     __ptext13:	
  2905 ;; *************** function _readRxTxStatus *****************
  2906 ;; Defined at:
  2907 ;;		line 1316 in file "mcp2515_can.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;  ret             1    8[COMMON] unsigned char 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      unsigned char 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2, status,0, pclath, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2921 ;;      Params:         0       0       0       0       0
  2922 ;;      Locals:         7       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0
  2924 ;;      Totals:         7       0       0       0       0
  2925 ;;Total ram usage:        7 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; Hardware stack levels required when called: 2
  2928 ;; This function calls:
  2929 ;;		_mcp2515_readStatus
  2930 ;; This function is called by:
  2931 ;;		_readMsgBuf
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935     0F54                     _readRxTxStatus:	
  2936                           ;psect for function _readRxTxStatus
  2937                           
  2938     0F54                     l3331:	
  2939                           ;incstack = 0
  2940                           ; Regs used in _readRxTxStatus: [wreg+status,2+status,0+pclath+cstack]
  2941                           
  2942                           
  2943                           ;mcp2515_can.c: 1317:     unsigned char ret = (mcp2515_readStatus() & ((0xA8) | (0x03)))
      +                          ;
  2944     0F54  120A  158A  25FE  120A  158A  	fcall	_mcp2515_readStatus
  2945     0F59  39AB               	andlw	171
  2946     0F5A  00F9               	movwf	readRxTxStatus@ret
  2947     0F5B                     l3333:
  2948                           
  2949                           ;mcp2515_can.c: 1318:     ret = (ret & (0x08) ? 0x04 : 0) |
  2950     0F5B  1BF9               	btfsc	readRxTxStatus@ret,7
  2951     0F5C  2F5E               	goto	u1441
  2952     0F5D  2F5F               	goto	u1440
  2953     0F5E                     u1441:
  2954     0F5E  2F62               	goto	l3337
  2955     0F5F                     u1440:
  2956     0F5F                     l3335:
  2957     0F5F  01F3               	clrf	_readRxTxStatus$423
  2958     0F60  01F4               	clrf	_readRxTxStatus$423+1
  2959     0F61  2F66               	goto	l3339
  2960     0F62                     l3337:
  2961     0F62  3010               	movlw	16
  2962     0F63  00F3               	movwf	_readRxTxStatus$423
  2963     0F64  3000               	movlw	0
  2964     0F65  00F4               	movwf	_readRxTxStatus$423+1
  2965     0F66                     l3339:
  2966     0F66  1AF9               	btfsc	readRxTxStatus@ret,5
  2967     0F67  2F69               	goto	u1451
  2968     0F68  2F6A               	goto	u1450
  2969     0F69                     u1451:
  2970     0F69  2F6D               	goto	l3343
  2971     0F6A                     u1450:
  2972     0F6A                     l3341:
  2973     0F6A  01F5               	clrf	_readRxTxStatus$424
  2974     0F6B  01F6               	clrf	_readRxTxStatus$424+1
  2975     0F6C  2F71               	goto	l3345
  2976     0F6D                     l3343:
  2977     0F6D  3008               	movlw	8
  2978     0F6E  00F5               	movwf	_readRxTxStatus$424
  2979     0F6F  3000               	movlw	0
  2980     0F70  00F6               	movwf	_readRxTxStatus$424+1
  2981     0F71                     l3345:
  2982     0F71  19F9               	btfsc	readRxTxStatus@ret,3
  2983     0F72  2F74               	goto	u1461
  2984     0F73  2F75               	goto	u1460
  2985     0F74                     u1461:
  2986     0F74  2F78               	goto	l3349
  2987     0F75                     u1460:
  2988     0F75                     l3347:
  2989     0F75  01F7               	clrf	_readRxTxStatus$425
  2990     0F76  01F8               	clrf	_readRxTxStatus$425+1
  2991     0F77  2F7C               	goto	l3351
  2992     0F78                     l3349:
  2993     0F78  3004               	movlw	4
  2994     0F79  00F7               	movwf	_readRxTxStatus$425
  2995     0F7A  3000               	movlw	0
  2996     0F7B  00F8               	movwf	_readRxTxStatus$425+1
  2997     0F7C                     l3351:
  2998     0F7C  0879               	movf	readRxTxStatus@ret,w
  2999     0F7D  3903               	andlw	3
  3000     0F7E  0477               	iorwf	_readRxTxStatus$425,w
  3001     0F7F  0475               	iorwf	_readRxTxStatus$424,w
  3002     0F80  0473               	iorwf	_readRxTxStatus$423,w
  3003     0F81  00F9               	movwf	readRxTxStatus@ret
  3004     0F82                     l3353:
  3005                           
  3006                           ;mcp2515_can.c: 1322:     return ret;
  3007     0F82  0879               	movf	readRxTxStatus@ret,w
  3008     0F83                     l439:
  3009     0F83  0008               	return
  3010     0F84                     __end_of_readRxTxStatus:
  3011                           
  3012                           	psect	text14
  3013     007A                     __ptext14:	
  3014 ;; *************** function _readMsgBufID *****************
  3015 ;; Defined at:
  3016 ;;		line 1285 in file "mcp2515_can.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  status          1    wreg     unsigned char 
  3019 ;;  id              1    9[BANK0 ] PTR volatile unsigned lo
  3020 ;;		 -> can_id(4), 
  3021 ;;  ext             1   10[BANK0 ] PTR volatile unsigned ch
  3022 ;;		 -> ext_flg(1), 
  3023 ;;  rtrBit          1   11[BANK0 ] PTR volatile unsigned ch
  3024 ;;		 -> rtr(1), 
  3025 ;;  len             1   12[BANK0 ] PTR volatile unsigned ch
  3026 ;;		 -> main@len(1), 
  3027 ;;  buf             1   13[BANK0 ] PTR volatile unsigned ch
  3028 ;;		 -> main@buf(8), 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;  status          1   14[BANK0 ] unsigned char 
  3031 ;;  rc              1   15[BANK0 ] unsigned char 
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  1    wreg      unsigned char 
  3034 ;; Registers used:
  3035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3041 ;;      Params:         0       5       0       0       0
  3042 ;;      Locals:         0       2       0       0       0
  3043 ;;      Temps:          0       0       0       0       0
  3044 ;;      Totals:         0       7       0       0       0
  3045 ;;Total ram usage:        7 bytes
  3046 ;; Hardware stack levels used: 1
  3047 ;; Hardware stack levels required when called: 2
  3048 ;; This function calls:
  3049 ;;		_mcp2515_read_canMsg
  3050 ;; This function is called by:
  3051 ;;		_readMsgBuf
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055     007A                     _readMsgBufID:	
  3056                           ;psect for function _readMsgBufID
  3057                           
  3058                           
  3059                           ;incstack = 0
  3060                           ; Regs used in _readMsgBufID: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3061                           ;readMsgBufID@status stored from wreg
  3062     007A  1283               	bcf	3,5	;RP0=0, select bank0
  3063     007B  1303               	bcf	3,6	;RP1=0, select bank0
  3064     007C  00AE               	movwf	readMsgBufID@status
  3065     007D                     l3357:
  3066                           
  3067                           ;mcp2515_can.c: 1285: unsigned char readMsgBufID(unsigned char status, volatile unsigned
      +                           long* id, volatile unsigned char* ext, volatile unsigned char* rtrBit,;mcp2515_can.c: 1
      +                          286:                            volatile unsigned char* len, volatile unsigned char* buf
      +                          ) {;mcp2515_can.c: 1287:     unsigned char rc = (4);
  3068     007D  3004               	movlw	4
  3069     007E  00AF               	movwf	readMsgBufID@rc
  3070     007F                     l3359:
  3071                           
  3072                           ;mcp2515_can.c: 1289:     if (status & 0x01) {
  3073     007F  1C2E               	btfss	readMsgBufID@status,0
  3074     0080  2882               	goto	u1471
  3075     0081  2883               	goto	u1470
  3076     0082                     u1471:
  3077     0082  2897               	goto	l419
  3078     0083                     u1470:
  3079     0083                     l3361:
  3080                           
  3081                           ;mcp2515_can.c: 1290:         mcp2515_read_canMsg(0x90, id, ext, rtrBit, len, buf);
  3082     0083  0829               	movf	readMsgBufID@id,w
  3083     0084  00F2               	movwf	mcp2515_read_canMsg@id
  3084     0085  082A               	movf	readMsgBufID@ext,w
  3085     0086  00F3               	movwf	mcp2515_read_canMsg@ext
  3086     0087  082B               	movf	readMsgBufID@rtrBit,w
  3087     0088  00F4               	movwf	mcp2515_read_canMsg@rtrBit
  3088     0089  082C               	movf	readMsgBufID@len,w
  3089     008A  00F5               	movwf	mcp2515_read_canMsg@len
  3090     008B  082D               	movf	readMsgBufID@buf,w
  3091     008C  00F6               	movwf	mcp2515_read_canMsg@buf
  3092     008D  3090               	movlw	144
  3093     008E  120A  118A  2471  120A  118A  	fcall	_mcp2515_read_canMsg
  3094     0093                     l3363:
  3095                           
  3096                           ;mcp2515_can.c: 1291:         rc = (0);
  3097     0093  1283               	bcf	3,5	;RP0=0, select bank0
  3098     0094  1303               	bcf	3,6	;RP1=0, select bank0
  3099     0095  01AF               	clrf	readMsgBufID@rc
  3100                           
  3101                           ;mcp2515_can.c: 1292:     } else if (status & 0x02) {
  3102     0096  28AC               	goto	l3369
  3103     0097                     l419:
  3104     0097  1CAE               	btfss	readMsgBufID@status,1
  3105     0098  289A               	goto	u1481
  3106     0099  289B               	goto	u1480
  3107     009A                     u1481:
  3108     009A  28AC               	goto	l3369
  3109     009B                     u1480:
  3110     009B                     l3365:
  3111                           
  3112                           ;mcp2515_can.c: 1293:         mcp2515_read_canMsg(0x94, id, ext, rtrBit, len, buf);
  3113     009B  0829               	movf	readMsgBufID@id,w
  3114     009C  00F2               	movwf	mcp2515_read_canMsg@id
  3115     009D  082A               	movf	readMsgBufID@ext,w
  3116     009E  00F3               	movwf	mcp2515_read_canMsg@ext
  3117     009F  082B               	movf	readMsgBufID@rtrBit,w
  3118     00A0  00F4               	movwf	mcp2515_read_canMsg@rtrBit
  3119     00A1  082C               	movf	readMsgBufID@len,w
  3120     00A2  00F5               	movwf	mcp2515_read_canMsg@len
  3121     00A3  082D               	movf	readMsgBufID@buf,w
  3122     00A4  00F6               	movwf	mcp2515_read_canMsg@buf
  3123     00A5  3094               	movlw	148
  3124     00A6  120A  118A  2471  120A  118A  	fcall	_mcp2515_read_canMsg
  3125     00AB  2893               	goto	l3363
  3126     00AC                     l3369:
  3127                           
  3128                           ;mcp2515_can.c: 1297:     if (rc == (0)) {
  3129     00AC  082F               	movf	readMsgBufID@rc,w
  3130     00AD  1D03               	btfss	3,2
  3131     00AE  28B0               	goto	u1491
  3132     00AF  28B1               	goto	u1490
  3133     00B0                     u1491:
  3134     00B0  28C8               	goto	l3373
  3135     00B1                     u1490:
  3136     00B1                     l3371:
  3137                           
  3138                           ;mcp2515_can.c: 1298:         rtr = *rtrBit;
  3139     00B1  082B               	movf	readMsgBufID@rtrBit,w
  3140     00B2  0084               	movwf	4
  3141     00B3  1383               	bcf	3,7	;select IRP bank0
  3142     00B4  0800               	movf	0,w
  3143     00B5  00E3               	movwf	_rtr
  3144                           
  3145                           ;mcp2515_can.c: 1300:         ext_flg = *ext;
  3146     00B6  082A               	movf	readMsgBufID@ext,w
  3147     00B7  0084               	movwf	4
  3148     00B8  0800               	movf	0,w
  3149     00B9  00E4               	movwf	_ext_flg
  3150                           
  3151                           ;mcp2515_can.c: 1301:         can_id = *id;
  3152     00BA  0829               	movf	readMsgBufID@id,w
  3153     00BB  0084               	movwf	4
  3154     00BC  0800               	movf	0,w
  3155     00BD  00DF               	movwf	_can_id
  3156     00BE  0A84               	incf	4,f
  3157     00BF  0800               	movf	0,w
  3158     00C0  00E0               	movwf	_can_id+1
  3159     00C1  0A84               	incf	4,f
  3160     00C2  0800               	movf	0,w
  3161     00C3  00E1               	movwf	_can_id+2
  3162     00C4  0A84               	incf	4,f
  3163     00C5  0800               	movf	0,w
  3164     00C6  00E2               	movwf	_can_id+3
  3165                           
  3166                           ;mcp2515_can.c: 1302:     } else {
  3167     00C7  28CC               	goto	l3375
  3168     00C8                     l3373:
  3169                           
  3170                           ;mcp2515_can.c: 1303:         *len = 0;
  3171     00C8  082C               	movf	readMsgBufID@len,w
  3172     00C9  0084               	movwf	4
  3173     00CA  1383               	bcf	3,7	;select IRP bank0
  3174     00CB  0180               	clrf	0
  3175     00CC                     l3375:
  3176                           
  3177                           ;mcp2515_can.c: 1306:     return rc;
  3178     00CC  082F               	movf	readMsgBufID@rc,w
  3179     00CD                     l424:
  3180     00CD  0008               	return
  3181     00CE                     __end_of_readMsgBufID:
  3182                           
  3183                           	psect	text15
  3184     0471                     __ptext15:	
  3185 ;; *************** function _mcp2515_read_canMsg *****************
  3186 ;; Defined at:
  3187 ;;		line 954 in file "mcp2515_can.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;  buffer_load_    1    wreg     const unsigned char 
  3190 ;;  id              1    1[COMMON] PTR volatile unsigned lo
  3191 ;;		 -> can_id(4), 
  3192 ;;  ext             1    2[COMMON] PTR volatile unsigned ch
  3193 ;;		 -> ext_flg(1), 
  3194 ;;  rtrBit          1    3[COMMON] PTR volatile unsigned ch
  3195 ;;		 -> rtr(1), 
  3196 ;;  len             1    4[COMMON] PTR volatile unsigned ch
  3197 ;;		 -> main@len(1), 
  3198 ;;  buf             1    5[COMMON] PTR volatile unsigned ch
  3199 ;;		 -> main@buf(8), 
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;  buffer_load_    1    6[COMMON] const unsigned char 
  3202 ;;  tbufdata        4    7[COMMON] unsigned char [4]
  3203 ;;  i               1   12[COMMON] unsigned char 
  3204 ;;  pMsgSize        1   11[COMMON] unsigned char 
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  1    wreg      void 
  3207 ;; Registers used:
  3208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3214 ;;      Params:         5       0       0       0       0
  3215 ;;      Locals:         7       0       0       0       0
  3216 ;;      Temps:          0       9       0       0       0
  3217 ;;      Totals:        12       9       0       0       0
  3218 ;;Total ram usage:       21 bytes
  3219 ;; Hardware stack levels used: 1
  3220 ;; Hardware stack levels required when called: 1
  3221 ;; This function calls:
  3222 ;;		_ReadSPI
  3223 ;;		_WriteSPI
  3224 ;; This function is called by:
  3225 ;;		_readMsgBufID
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229     0471                     _mcp2515_read_canMsg:	
  3230                           ;psect for function _mcp2515_read_canMsg
  3231                           
  3232                           
  3233                           ;incstack = 0
  3234                           ; Regs used in _mcp2515_read_canMsg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3235                           ;mcp2515_read_canMsg@buffer_load_addr stored from wreg
  3236     0471  00F7               	movwf	mcp2515_read_canMsg@buffer_load_addr
  3237     0472                     l3259:
  3238                           
  3239                           ;mcp2515_can.c: 954: void mcp2515_read_canMsg(const unsigned char buffer_load_addr, vola
      +                          tile unsigned long* id, volatile unsigned char* ext,;mcp2515_can.c: 955:                
      +                                             volatile unsigned char* rtrBit, volatile unsigned char* len, volatile
      +                           unsigned char* buf) {;mcp2515_can.c: 956:     unsigned char tbufdata[4];;mcp2515_can.c:
      +                           957:     unsigned char i;;mcp2515_can.c: 959:     RD0 = 0;;
  3240     0472  1283               	bcf	3,5	;RP0=0, select bank0
  3241     0473  1303               	bcf	3,6	;RP1=0, select bank0
  3242     0474  1008               	bcf	8,0	;volatile
  3243     0475                     l3261:
  3244                           
  3245                           ;mcp2515_can.c: 960:     WriteSPI(buffer_load_addr);
  3246     0475  0877               	movf	mcp2515_read_canMsg@buffer_load_addr,w
  3247     0476  120A  158A  25B5  120A  118A  	fcall	_WriteSPI
  3248     047B                     l3263:
  3249                           
  3250                           ;mcp2515_can.c: 962:     for (i = 0; i < 4; i++) {
  3251     047B  01FD               	clrf	mcp2515_read_canMsg@i
  3252     047C                     l3269:
  3253                           
  3254                           ;mcp2515_can.c: 963:         tbufdata[i] = ReadSPI();
  3255     047C  087D               	movf	mcp2515_read_canMsg@i,w
  3256     047D  3E78               	addlw	(low (mcp2515_read_canMsg@tbufdata| 0))& (0+255)
  3257     047E  0084               	movwf	4
  3258     047F  120A  158A  25A8  120A  118A  	fcall	_ReadSPI
  3259     0484  0080               	movwf	0
  3260     0485                     l3271:
  3261                           
  3262                           ;mcp2515_can.c: 964:     }
  3263     0485  3001               	movlw	1
  3264     0486  00FF               	movwf	btemp+1
  3265     0487  087F               	movf	btemp+1,w
  3266     0488  07FD               	addwf	mcp2515_read_canMsg@i,f
  3267     0489                     l3273:
  3268     0489  3004               	movlw	4
  3269     048A  027D               	subwf	mcp2515_read_canMsg@i,w
  3270     048B  1C03               	skipc
  3271     048C  2C8E               	goto	u1281
  3272     048D  2C8F               	goto	u1280
  3273     048E                     u1281:
  3274     048E  2C7C               	goto	l3269
  3275     048F                     u1280:
  3276     048F                     l3275:
  3277                           
  3278                           ;mcp2515_can.c: 966:     *id = (tbufdata[0] << 3) + (tbufdata[1] >> 5);
  3279     048F  0879               	movf	mcp2515_read_canMsg@tbufdata+1,w
  3280     0490  1283               	bcf	3,5	;RP0=0, select bank0
  3281     0491  1303               	bcf	3,6	;RP1=0, select bank0
  3282     0492  00A0               	movwf	??_mcp2515_read_canMsg
  3283     0493  3005               	movlw	5
  3284     0494                     u1295:
  3285     0494  1003               	clrc
  3286     0495  0CA0               	rrf	??_mcp2515_read_canMsg,f
  3287     0496  3EFF               	addlw	-1
  3288     0497  1D03               	skipz
  3289     0498  2C94               	goto	u1295
  3290     0499  0878               	movf	mcp2515_read_canMsg@tbufdata,w
  3291     049A  00A1               	movwf	??_mcp2515_read_canMsg+1
  3292     049B  01A2               	clrf	??_mcp2515_read_canMsg+2
  3293     049C  1003               	clrc
  3294     049D  0DA1               	rlf	??_mcp2515_read_canMsg+1,f
  3295     049E  0DA2               	rlf	??_mcp2515_read_canMsg+2,f
  3296     049F  1003               	clrc
  3297     04A0  0DA1               	rlf	??_mcp2515_read_canMsg+1,f
  3298     04A1  0DA2               	rlf	??_mcp2515_read_canMsg+2,f
  3299     04A2  1003               	clrc
  3300     04A3  0DA1               	rlf	??_mcp2515_read_canMsg+1,f
  3301     04A4  0DA2               	rlf	??_mcp2515_read_canMsg+2,f
  3302     04A5  0820               	movf	??_mcp2515_read_canMsg,w
  3303     04A6  0721               	addwf	??_mcp2515_read_canMsg+1,w
  3304     04A7  00A3               	movwf	??_mcp2515_read_canMsg+3
  3305     04A8  3000               	movlw	0
  3306     04A9  1803               	skipnc
  3307     04AA  3001               	movlw	1
  3308     04AB  0722               	addwf	??_mcp2515_read_canMsg+2,w
  3309     04AC  00A4               	movwf	??_mcp2515_read_canMsg+4
  3310     04AD  0823               	movf	??_mcp2515_read_canMsg+3,w
  3311     04AE  00A5               	movwf	??_mcp2515_read_canMsg+5
  3312     04AF  0824               	movf	??_mcp2515_read_canMsg+4,w
  3313     04B0  00A6               	movwf	??_mcp2515_read_canMsg+6
  3314     04B1  3000               	movlw	0
  3315     04B2  1BA6               	btfsc	??_mcp2515_read_canMsg+6,7
  3316     04B3  30FF               	movlw	255
  3317     04B4  00A7               	movwf	??_mcp2515_read_canMsg+7
  3318     04B5  00A8               	movwf	??_mcp2515_read_canMsg+8
  3319     04B6  0872               	movf	mcp2515_read_canMsg@id,w
  3320     04B7  0084               	movwf	4
  3321     04B8  0825               	movf	??_mcp2515_read_canMsg+5,w
  3322     04B9  1383               	bcf	3,7	;select IRP bank0
  3323     04BA  0080               	movwf	0
  3324     04BB  0A84               	incf	4,f
  3325     04BC  0826               	movf	??_mcp2515_read_canMsg+6,w
  3326     04BD  0080               	movwf	0
  3327     04BE  0A84               	incf	4,f
  3328     04BF  0827               	movf	??_mcp2515_read_canMsg+7,w
  3329     04C0  0080               	movwf	0
  3330     04C1  0A84               	incf	4,f
  3331     04C2  0828               	movf	??_mcp2515_read_canMsg+8,w
  3332     04C3  0080               	movwf	0
  3333     04C4                     l3277:
  3334                           
  3335                           ;mcp2515_can.c: 967:     *ext = 0;
  3336     04C4  0873               	movf	mcp2515_read_canMsg@ext,w
  3337     04C5  0084               	movwf	4
  3338     04C6  0180               	clrf	0
  3339     04C7                     l3279:
  3340                           
  3341                           ;mcp2515_can.c: 968:     if ((tbufdata[1] & 0x08) == 0x08) {
  3342     04C7  1DF9               	btfss	mcp2515_read_canMsg@tbufdata+1,3
  3343     04C8  2CCA               	goto	u1301
  3344     04C9  2CCB               	goto	u1300
  3345     04CA                     u1301:
  3346     04CA  2D7E               	goto	l3285
  3347     04CB                     u1300:
  3348     04CB                     l3281:
  3349                           
  3350                           ;mcp2515_can.c: 970:         *id = (*id << 2) + (tbufdata[1] & 0x03);
  3351     04CB  0879               	movf	mcp2515_read_canMsg@tbufdata+1,w
  3352     04CC  3903               	andlw	3
  3353     04CD  00A0               	movwf	??_mcp2515_read_canMsg
  3354     04CE  01A1               	clrf	??_mcp2515_read_canMsg+1
  3355     04CF  01A2               	clrf	??_mcp2515_read_canMsg+2
  3356     04D0  01A3               	clrf	??_mcp2515_read_canMsg+3
  3357     04D1  0872               	movf	mcp2515_read_canMsg@id,w
  3358     04D2  0084               	movwf	4
  3359     04D3  0800               	movf	0,w
  3360     04D4  00A4               	movwf	??_mcp2515_read_canMsg+4
  3361     04D5  0A84               	incf	4,f
  3362     04D6  0800               	movf	0,w
  3363     04D7  00A5               	movwf	??_mcp2515_read_canMsg+5
  3364     04D8  0A84               	incf	4,f
  3365     04D9  0800               	movf	0,w
  3366     04DA  00A6               	movwf	??_mcp2515_read_canMsg+6
  3367     04DB  0A84               	incf	4,f
  3368     04DC  0800               	movf	0,w
  3369     04DD  00A7               	movwf	??_mcp2515_read_canMsg+7
  3370     04DE  3002               	movlw	2
  3371     04DF                     u1315:
  3372     04DF  1003               	clrc
  3373     04E0  0DA4               	rlf	??_mcp2515_read_canMsg+4,f
  3374     04E1  0DA5               	rlf	??_mcp2515_read_canMsg+5,f
  3375     04E2  0DA6               	rlf	??_mcp2515_read_canMsg+6,f
  3376     04E3  0DA7               	rlf	??_mcp2515_read_canMsg+7,f
  3377     04E4                     u1310:
  3378     04E4  3EFF               	addlw	-1
  3379     04E5  1D03               	skipz
  3380     04E6  2CDF               	goto	u1315
  3381     04E7  0824               	movf	??_mcp2515_read_canMsg+4,w
  3382     04E8  07A0               	addwf	??_mcp2515_read_canMsg,f
  3383     04E9  0825               	movf	??_mcp2515_read_canMsg+5,w
  3384     04EA  1803               	skipnc
  3385     04EB  0F25               	incfsz	??_mcp2515_read_canMsg+5,w
  3386     04EC  2CEE               	goto	u1320
  3387     04ED  2CEF               	goto	u1321
  3388     04EE                     u1320:
  3389     04EE  07A1               	addwf	??_mcp2515_read_canMsg+1,f
  3390     04EF                     u1321:
  3391     04EF  0826               	movf	??_mcp2515_read_canMsg+6,w
  3392     04F0  1803               	skipnc
  3393     04F1  0F26               	incfsz	??_mcp2515_read_canMsg+6,w
  3394     04F2  2CF4               	goto	u1322
  3395     04F3  2CF5               	goto	u1323
  3396     04F4                     u1322:
  3397     04F4  07A2               	addwf	??_mcp2515_read_canMsg+2,f
  3398     04F5                     u1323:
  3399     04F5  0827               	movf	??_mcp2515_read_canMsg+7,w
  3400     04F6  1803               	skipnc
  3401     04F7  0A27               	incf	??_mcp2515_read_canMsg+7,w
  3402     04F8  07A3               	addwf	??_mcp2515_read_canMsg+3,f
  3403     04F9  0872               	movf	mcp2515_read_canMsg@id,w
  3404     04FA  0084               	movwf	4
  3405     04FB  0820               	movf	??_mcp2515_read_canMsg,w
  3406     04FC  0080               	movwf	0
  3407     04FD  0A84               	incf	4,f
  3408     04FE  0821               	movf	??_mcp2515_read_canMsg+1,w
  3409     04FF  0080               	movwf	0
  3410     0500  0A84               	incf	4,f
  3411     0501  0822               	movf	??_mcp2515_read_canMsg+2,w
  3412     0502  0080               	movwf	0
  3413     0503  0A84               	incf	4,f
  3414     0504  0823               	movf	??_mcp2515_read_canMsg+3,w
  3415     0505  0080               	movwf	0
  3416                           
  3417                           ;mcp2515_can.c: 971:         *id = (*id << 8) + tbufdata[2];
  3418     0506  087A               	movf	mcp2515_read_canMsg@tbufdata+2,w
  3419     0507  00A0               	movwf	??_mcp2515_read_canMsg
  3420     0508  01A1               	clrf	??_mcp2515_read_canMsg+1
  3421     0509  01A2               	clrf	??_mcp2515_read_canMsg+2
  3422     050A  01A3               	clrf	??_mcp2515_read_canMsg+3
  3423     050B  0872               	movf	mcp2515_read_canMsg@id,w
  3424     050C  0084               	movwf	4
  3425     050D  0800               	movf	0,w
  3426     050E  00A4               	movwf	??_mcp2515_read_canMsg+4
  3427     050F  0A84               	incf	4,f
  3428     0510  0800               	movf	0,w
  3429     0511  00A5               	movwf	??_mcp2515_read_canMsg+5
  3430     0512  0A84               	incf	4,f
  3431     0513  0800               	movf	0,w
  3432     0514  00A6               	movwf	??_mcp2515_read_canMsg+6
  3433     0515  0A84               	incf	4,f
  3434     0516  0800               	movf	0,w
  3435     0517  00A7               	movwf	??_mcp2515_read_canMsg+7
  3436     0518  3008               	movlw	8
  3437     0519                     u1335:
  3438     0519  1003               	clrc
  3439     051A  0DA4               	rlf	??_mcp2515_read_canMsg+4,f
  3440     051B  0DA5               	rlf	??_mcp2515_read_canMsg+5,f
  3441     051C  0DA6               	rlf	??_mcp2515_read_canMsg+6,f
  3442     051D  0DA7               	rlf	??_mcp2515_read_canMsg+7,f
  3443     051E                     u1330:
  3444     051E  3EFF               	addlw	-1
  3445     051F  1D03               	skipz
  3446     0520  2D19               	goto	u1335
  3447     0521  0824               	movf	??_mcp2515_read_canMsg+4,w
  3448     0522  07A0               	addwf	??_mcp2515_read_canMsg,f
  3449     0523  0825               	movf	??_mcp2515_read_canMsg+5,w
  3450     0524  1803               	skipnc
  3451     0525  0F25               	incfsz	??_mcp2515_read_canMsg+5,w
  3452     0526  2D28               	goto	u1340
  3453     0527  2D29               	goto	u1341
  3454     0528                     u1340:
  3455     0528  07A1               	addwf	??_mcp2515_read_canMsg+1,f
  3456     0529                     u1341:
  3457     0529  0826               	movf	??_mcp2515_read_canMsg+6,w
  3458     052A  1803               	skipnc
  3459     052B  0F26               	incfsz	??_mcp2515_read_canMsg+6,w
  3460     052C  2D2E               	goto	u1342
  3461     052D  2D2F               	goto	u1343
  3462     052E                     u1342:
  3463     052E  07A2               	addwf	??_mcp2515_read_canMsg+2,f
  3464     052F                     u1343:
  3465     052F  0827               	movf	??_mcp2515_read_canMsg+7,w
  3466     0530  1803               	skipnc
  3467     0531  0A27               	incf	??_mcp2515_read_canMsg+7,w
  3468     0532  07A3               	addwf	??_mcp2515_read_canMsg+3,f
  3469     0533  0872               	movf	mcp2515_read_canMsg@id,w
  3470     0534  0084               	movwf	4
  3471     0535  0820               	movf	??_mcp2515_read_canMsg,w
  3472     0536  0080               	movwf	0
  3473     0537  0A84               	incf	4,f
  3474     0538  0821               	movf	??_mcp2515_read_canMsg+1,w
  3475     0539  0080               	movwf	0
  3476     053A  0A84               	incf	4,f
  3477     053B  0822               	movf	??_mcp2515_read_canMsg+2,w
  3478     053C  0080               	movwf	0
  3479     053D  0A84               	incf	4,f
  3480     053E  0823               	movf	??_mcp2515_read_canMsg+3,w
  3481     053F  0080               	movwf	0
  3482                           
  3483                           ;mcp2515_can.c: 972:         *id = (*id << 8) + tbufdata[3];
  3484     0540  087B               	movf	mcp2515_read_canMsg@tbufdata+3,w
  3485     0541  00A0               	movwf	??_mcp2515_read_canMsg
  3486     0542  01A1               	clrf	??_mcp2515_read_canMsg+1
  3487     0543  01A2               	clrf	??_mcp2515_read_canMsg+2
  3488     0544  01A3               	clrf	??_mcp2515_read_canMsg+3
  3489     0545  0872               	movf	mcp2515_read_canMsg@id,w
  3490     0546  0084               	movwf	4
  3491     0547  0800               	movf	0,w
  3492     0548  00A4               	movwf	??_mcp2515_read_canMsg+4
  3493     0549  0A84               	incf	4,f
  3494     054A  0800               	movf	0,w
  3495     054B  00A5               	movwf	??_mcp2515_read_canMsg+5
  3496     054C  0A84               	incf	4,f
  3497     054D  0800               	movf	0,w
  3498     054E  00A6               	movwf	??_mcp2515_read_canMsg+6
  3499     054F  0A84               	incf	4,f
  3500     0550  0800               	movf	0,w
  3501     0551  00A7               	movwf	??_mcp2515_read_canMsg+7
  3502     0552  3008               	movlw	8
  3503     0553                     u1355:
  3504     0553  1003               	clrc
  3505     0554  0DA4               	rlf	??_mcp2515_read_canMsg+4,f
  3506     0555  0DA5               	rlf	??_mcp2515_read_canMsg+5,f
  3507     0556  0DA6               	rlf	??_mcp2515_read_canMsg+6,f
  3508     0557  0DA7               	rlf	??_mcp2515_read_canMsg+7,f
  3509     0558                     u1350:
  3510     0558  3EFF               	addlw	-1
  3511     0559  1D03               	skipz
  3512     055A  2D53               	goto	u1355
  3513     055B  0824               	movf	??_mcp2515_read_canMsg+4,w
  3514     055C  07A0               	addwf	??_mcp2515_read_canMsg,f
  3515     055D  0825               	movf	??_mcp2515_read_canMsg+5,w
  3516     055E  1803               	skipnc
  3517     055F  0F25               	incfsz	??_mcp2515_read_canMsg+5,w
  3518     0560  2D62               	goto	u1360
  3519     0561  2D63               	goto	u1361
  3520     0562                     u1360:
  3521     0562  07A1               	addwf	??_mcp2515_read_canMsg+1,f
  3522     0563                     u1361:
  3523     0563  0826               	movf	??_mcp2515_read_canMsg+6,w
  3524     0564  1803               	skipnc
  3525     0565  0F26               	incfsz	??_mcp2515_read_canMsg+6,w
  3526     0566  2D68               	goto	u1362
  3527     0567  2D69               	goto	u1363
  3528     0568                     u1362:
  3529     0568  07A2               	addwf	??_mcp2515_read_canMsg+2,f
  3530     0569                     u1363:
  3531     0569  0827               	movf	??_mcp2515_read_canMsg+7,w
  3532     056A  1803               	skipnc
  3533     056B  0A27               	incf	??_mcp2515_read_canMsg+7,w
  3534     056C  07A3               	addwf	??_mcp2515_read_canMsg+3,f
  3535     056D  0872               	movf	mcp2515_read_canMsg@id,w
  3536     056E  0084               	movwf	4
  3537     056F  0820               	movf	??_mcp2515_read_canMsg,w
  3538     0570  0080               	movwf	0
  3539     0571  0A84               	incf	4,f
  3540     0572  0821               	movf	??_mcp2515_read_canMsg+1,w
  3541     0573  0080               	movwf	0
  3542     0574  0A84               	incf	4,f
  3543     0575  0822               	movf	??_mcp2515_read_canMsg+2,w
  3544     0576  0080               	movwf	0
  3545     0577  0A84               	incf	4,f
  3546     0578  0823               	movf	??_mcp2515_read_canMsg+3,w
  3547     0579  0080               	movwf	0
  3548     057A                     l3283:
  3549                           
  3550                           ;mcp2515_can.c: 973:         *ext = 1;
  3551     057A  0873               	movf	mcp2515_read_canMsg@ext,w
  3552     057B  0084               	movwf	4
  3553     057C  3001               	movlw	1
  3554     057D  0080               	movwf	0
  3555     057E                     l3285:
  3556                           
  3557                           ;mcp2515_can.c: 976:     unsigned char pMsgSize = ReadSPI();
  3558     057E  120A  158A  25A8  120A  118A  	fcall	_ReadSPI
  3559     0583  00FC               	movwf	mcp2515_read_canMsg@pMsgSize
  3560     0584                     l3287:
  3561                           
  3562                           ;mcp2515_can.c: 977:     *len = pMsgSize & 0x0F;
  3563     0584  0875               	movf	mcp2515_read_canMsg@len,w
  3564     0585  0084               	movwf	4
  3565     0586  087C               	movf	mcp2515_read_canMsg@pMsgSize,w
  3566     0587  390F               	andlw	15
  3567     0588  1383               	bcf	3,7	;select IRP bank0
  3568     0589  0080               	movwf	0
  3569     058A                     l3289:
  3570                           
  3571                           ;mcp2515_can.c: 978:     *rtrBit = (pMsgSize & 0x40) ? 1 : 0;
  3572     058A  0874               	movf	mcp2515_read_canMsg@rtrBit,w
  3573     058B  0084               	movwf	4
  3574     058C  1B7C               	btfsc	mcp2515_read_canMsg@pMsgSize,6
  3575     058D  2D8F               	goto	u1371
  3576     058E  2D91               	goto	u1370
  3577     058F                     u1371:
  3578     058F  3001               	movlw	1
  3579     0590  2D92               	goto	u1380
  3580     0591                     u1370:
  3581     0591  3000               	movlw	0
  3582     0592                     u1380:
  3583     0592  0080               	movwf	0
  3584     0593                     l3291:
  3585                           
  3586                           ;mcp2515_can.c: 979:     for (i = 0; i < *len && i < (8); i++) {
  3587     0593  01FD               	clrf	mcp2515_read_canMsg@i
  3588     0594  2DA7               	goto	l3297
  3589     0595                     l3293:
  3590                           
  3591                           ;mcp2515_can.c: 980:         buf[i] = ReadSPI();
  3592     0595  087D               	movf	mcp2515_read_canMsg@i,w
  3593     0596  0776               	addwf	mcp2515_read_canMsg@buf,w
  3594     0597  1283               	bcf	3,5	;RP0=0, select bank0
  3595     0598  1303               	bcf	3,6	;RP1=0, select bank0
  3596     0599  00A0               	movwf	??_mcp2515_read_canMsg
  3597     059A  0820               	movf	??_mcp2515_read_canMsg,w
  3598     059B  0084               	movwf	4
  3599     059C  120A  158A  25A8  120A  118A  	fcall	_ReadSPI
  3600     05A1  1383               	bcf	3,7	;select IRP bank0
  3601     05A2  0080               	movwf	0
  3602     05A3                     l3295:
  3603                           
  3604                           ;mcp2515_can.c: 981:     }
  3605     05A3  3001               	movlw	1
  3606     05A4  00FF               	movwf	btemp+1
  3607     05A5  087F               	movf	btemp+1,w
  3608     05A6  07FD               	addwf	mcp2515_read_canMsg@i,f
  3609     05A7                     l3297:
  3610     05A7  0875               	movf	mcp2515_read_canMsg@len,w
  3611     05A8  0084               	movwf	4
  3612     05A9  0800               	movf	0,w
  3613     05AA  027D               	subwf	mcp2515_read_canMsg@i,w
  3614     05AB  1803               	skipnc
  3615     05AC  2DAE               	goto	u1391
  3616     05AD  2DAF               	goto	u1390
  3617     05AE                     u1391:
  3618     05AE  2DB5               	goto	l337
  3619     05AF                     u1390:
  3620     05AF                     l3299:
  3621     05AF  3008               	movlw	8
  3622     05B0  027D               	subwf	mcp2515_read_canMsg@i,w
  3623     05B1  1C03               	skipc
  3624     05B2  2DB4               	goto	u1401
  3625     05B3  2DB5               	goto	u1400
  3626     05B4                     u1401:
  3627     05B4  2D95               	goto	l3293
  3628     05B5                     u1400:
  3629     05B5                     l337:
  3630                           
  3631                           ;mcp2515_can.c: 983:     RD0 = 1;;
  3632     05B5  1283               	bcf	3,5	;RP0=0, select bank0
  3633     05B6  1303               	bcf	3,6	;RP1=0, select bank0
  3634     05B7  1408               	bsf	8,0	;volatile
  3635     05B8                     l338:
  3636     05B8  0008               	return
  3637     05B9                     __end_of_mcp2515_read_canMsg:
  3638                           
  3639                           	psect	text16
  3640     0D91                     __ptext16:	
  3641 ;; *************** function _init_CS *****************
  3642 ;; Defined at:
  3643 ;;		line 17 in file "mcp_can.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;		None
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      void 
  3650 ;; Registers used:
  3651 ;;		None
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3657 ;;      Params:         0       0       0       0       0
  3658 ;;      Locals:         0       0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0
  3660 ;;      Totals:         0       0       0       0       0
  3661 ;;Total ram usage:        0 bytes
  3662 ;; Hardware stack levels used: 1
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_main
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670     0D91                     _init_CS:	
  3671                           ;psect for function _init_CS
  3672                           
  3673     0D91                     l3513:	
  3674                           ;incstack = 0
  3675                           ; Regs used in _init_CS: []
  3676                           
  3677                           
  3678                           ;mcp_can.c: 23:     TRISD0 = 0;
  3679     0D91  1683               	bsf	3,5	;RP0=1, select bank1
  3680     0D92  1303               	bcf	3,6	;RP1=0, select bank1
  3681     0D93  1008               	bcf	8,0	;volatile
  3682                           
  3683                           ;mcp_can.c: 24:     RD0 = 1;
  3684     0D94  1283               	bcf	3,5	;RP0=0, select bank0
  3685     0D95  1303               	bcf	3,6	;RP1=0, select bank0
  3686     0D96  1408               	bsf	8,0	;volatile
  3687     0D97                     l15:
  3688     0D97  0008               	return
  3689     0D98                     __end_of_init_CS:
  3690                           
  3691                           	psect	text17
  3692     0005                     __ptext17:	
  3693 ;; *************** function _getCanId *****************
  3694 ;; Defined at:
  3695 ;;		line 27 in file "main.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;		None
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;		None
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  4    0[COMMON] unsigned long 
  3702 ;; Registers used:
  3703 ;;		wreg
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3709 ;;      Params:         4       0       0       0       0
  3710 ;;      Locals:         0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0
  3712 ;;      Totals:         4       0       0       0       0
  3713 ;;Total ram usage:        4 bytes
  3714 ;; Hardware stack levels used: 1
  3715 ;; This function calls:
  3716 ;;		Nothing
  3717 ;; This function is called by:
  3718 ;;		_main
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722     0005                     _getCanId:	
  3723                           ;psect for function _getCanId
  3724                           
  3725     0005                     l3519:	
  3726                           ;incstack = 0
  3727                           ; Regs used in _getCanId: [wreg]
  3728                           
  3729     0005  1283               	bcf	3,5	;RP0=0, select bank0
  3730     0006  1303               	bcf	3,6	;RP1=0, select bank0
  3731     0007  0862               	movf	_can_id+3,w
  3732     0008  00F4               	movwf	?_getCanId+3
  3733     0009  0861               	movf	_can_id+2,w
  3734     000A  00F3               	movwf	?_getCanId+2
  3735     000B  0860               	movf	_can_id+1,w
  3736     000C  00F2               	movwf	?_getCanId+1
  3737     000D  085F               	movf	_can_id,w
  3738     000E  00F1               	movwf	?_getCanId
  3739     000F                     l51:
  3740     000F  0008               	return
  3741     0010                     __end_of_getCanId:
  3742                           
  3743                           	psect	text18
  3744     0E28                     __ptext18:	
  3745 ;; *************** function _checkReceive *****************
  3746 ;; Defined at:
  3747 ;;		line 1387 in file "mcp2515_can.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;		None
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  res             1    4[COMMON] unsigned char 
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      unsigned char 
  3754 ;; Registers used:
  3755 ;;		wreg, status,2, status,0, pclath, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3761 ;;      Params:         0       0       0       0       0
  3762 ;;      Locals:         3       0       0       0       0
  3763 ;;      Temps:          0       0       0       0       0
  3764 ;;      Totals:         3       0       0       0       0
  3765 ;;Total ram usage:        3 bytes
  3766 ;; Hardware stack levels used: 1
  3767 ;; Hardware stack levels required when called: 2
  3768 ;; This function calls:
  3769 ;;		_mcp2515_readStatus
  3770 ;; This function is called by:
  3771 ;;		_main
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775     0E28                     _checkReceive:	
  3776                           ;psect for function _checkReceive
  3777                           
  3778     0E28                     l3533:	
  3779                           ;incstack = 0
  3780                           ; Regs used in _checkReceive: [wreg+status,2+status,0+pclath+cstack]
  3781                           
  3782                           
  3783                           ;mcp2515_can.c: 1388:     unsigned char res;;mcp2515_can.c: 1389:     res = mcp2515_read
      +                          Status();
  3784     0E28  120A  158A  25FE  120A  158A  	fcall	_mcp2515_readStatus
  3785     0E2D  00F5               	movwf	checkReceive@res
  3786     0E2E                     l3535:
  3787                           
  3788                           ;mcp2515_can.c: 1390:     return ((res & (0x03)) ? (3) : (4));
  3789     0E2E  0875               	movf	checkReceive@res,w
  3790     0E2F  3903               	andlw	3
  3791     0E30  1D03               	btfss	3,2
  3792     0E31  2E33               	goto	u1681
  3793     0E32  2E34               	goto	u1680
  3794     0E33                     u1681:
  3795     0E33  2E39               	goto	l3539
  3796     0E34                     u1680:
  3797     0E34                     l3537:
  3798     0E34  3004               	movlw	4
  3799     0E35  00F3               	movwf	_checkReceive$438
  3800     0E36  3000               	movlw	0
  3801     0E37  00F4               	movwf	_checkReceive$438+1
  3802     0E38  2E3D               	goto	l462
  3803     0E39                     l3539:
  3804     0E39  3003               	movlw	3
  3805     0E3A  00F3               	movwf	_checkReceive$438
  3806     0E3B  3000               	movlw	0
  3807     0E3C  00F4               	movwf	_checkReceive$438+1
  3808     0E3D                     l462:
  3809     0E3D  0873               	movf	_checkReceive$438,w
  3810     0E3E                     l463:
  3811     0E3E  0008               	return
  3812     0E3F                     __end_of_checkReceive:
  3813                           
  3814                           	psect	text19
  3815     0DFE                     __ptext19:	
  3816 ;; *************** function _mcp2515_readStatus *****************
  3817 ;; Defined at:
  3818 ;;		line 275 in file "mcp2515_can.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;		None
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;  i               1    1[COMMON] unsigned char 
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  1    wreg      unsigned char 
  3825 ;; Registers used:
  3826 ;;		wreg, status,2, status,0, pclath, cstack
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : 0/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3832 ;;      Params:         0       0       0       0       0
  3833 ;;      Locals:         1       0       0       0       0
  3834 ;;      Temps:          0       0       0       0       0
  3835 ;;      Totals:         1       0       0       0       0
  3836 ;;Total ram usage:        1 bytes
  3837 ;; Hardware stack levels used: 1
  3838 ;; Hardware stack levels required when called: 1
  3839 ;; This function calls:
  3840 ;;		_ReadSPI
  3841 ;;		_WriteSPI
  3842 ;; This function is called by:
  3843 ;;		_mcp2515_getNextFreeTXBuf
  3844 ;;		_readRxTxStatus
  3845 ;;		_checkReceive
  3846 ;;		_mcp2515_isTXBufFree
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850     0DFE                     _mcp2515_readStatus:	
  3851                           ;psect for function _mcp2515_readStatus
  3852                           
  3853     0DFE                     l2917:	
  3854                           ;incstack = 0
  3855                           ; Regs used in _mcp2515_readStatus: [wreg+status,2+status,0+pclath+cstack]
  3856                           
  3857                           
  3858                           ;mcp2515_can.c: 276:     unsigned char i;;mcp2515_can.c: 280:     RD0 = 0;;
  3859     0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  3860     0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  3861     0E00  1008               	bcf	8,0	;volatile
  3862     0E01                     l2919:
  3863                           
  3864                           ;mcp2515_can.c: 281:     WriteSPI(0xA0);
  3865     0E01  30A0               	movlw	160
  3866     0E02  120A  158A  25B5  120A  158A  	fcall	_WriteSPI
  3867     0E07                     l2921:
  3868                           
  3869                           ;mcp2515_can.c: 282:     i = ReadSPI();
  3870     0E07  120A  158A  25A8  120A  158A  	fcall	_ReadSPI
  3871     0E0C  00F2               	movwf	mcp2515_readStatus@i
  3872     0E0D                     l2923:
  3873                           
  3874                           ;mcp2515_can.c: 283:     RD0 = 1;;
  3875     0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  3876     0E0E  1303               	bcf	3,6	;RP1=0, select bank0
  3877     0E0F  1408               	bsf	8,0	;volatile
  3878     0E10                     l2925:
  3879                           
  3880                           ;mcp2515_can.c: 288:     return i;
  3881     0E10  0872               	movf	mcp2515_readStatus@i,w
  3882     0E11                     l179:
  3883     0E11  0008               	return
  3884     0E12                     __end_of_mcp2515_readStatus:
  3885                           
  3886                           	psect	text20
  3887     0F36                     __ptext20:	
  3888 ;; *************** function _begin *****************
  3889 ;; Defined at:
  3890 ;;		line 1049 in file "mcp2515_can.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  speedset        4    6[BANK0 ] unsigned long 
  3893 ;;  clockset        1   10[BANK0 ] const unsigned char 
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;  res             1   11[BANK0 ] unsigned char 
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  1    wreg      unsigned char 
  3898 ;; Registers used:
  3899 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3905 ;;      Params:         0       5       0       0       0
  3906 ;;      Locals:         0       1       0       0       0
  3907 ;;      Temps:          0       0       0       0       0
  3908 ;;      Totals:         0       6       0       0       0
  3909 ;;Total ram usage:        6 bytes
  3910 ;; Hardware stack levels used: 1
  3911 ;; Hardware stack levels required when called: 6
  3912 ;; This function calls:
  3913 ;;		_OpenSPI
  3914 ;;		_mcp2515_init
  3915 ;; This function is called by:
  3916 ;;		_main
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920     0F36                     _begin:	
  3921                           ;psect for function _begin
  3922                           
  3923     0F36                     l3523:	
  3924                           ;incstack = 0
  3925                           ; Regs used in _begin: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3926                           
  3927                           
  3928                           ;mcp2515_can.c: 1050:     OpenSPI(0, 0, 0x80);
  3929     0F36  01F1               	clrf	OpenSPI@bus_mode
  3930     0F37  3080               	movlw	128
  3931     0F38  00F2               	movwf	OpenSPI@smp_phase
  3932     0F39  3000               	movlw	0
  3933     0F3A  120A  118A  20CE  120A  158A  	fcall	_OpenSPI
  3934                           
  3935                           ;mcp2515_can.c: 1051:     unsigned char res = mcp2515_init((unsigned char)speedset, cloc
      +                          kset);
  3936     0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3937     0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3938     0F41  082A               	movf	begin@clockset,w
  3939     0F42  00A1               	movwf	mcp2515_init@clock
  3940     0F43  0826               	movf	begin@speedset,w
  3941     0F44  120A  118A  227F  120A  158A  	fcall	_mcp2515_init
  3942     0F49  1283               	bcf	3,5	;RP0=0, select bank0
  3943     0F4A  1303               	bcf	3,6	;RP1=0, select bank0
  3944     0F4B  00AB               	movwf	begin@res
  3945     0F4C                     l3525:
  3946                           
  3947                           ;mcp2515_can.c: 1053:     return ((res == (0)) ? (0) : (1));
  3948     0F4C  082B               	movf	begin@res,w
  3949     0F4D  1D03               	btfss	3,2
  3950     0F4E  2F50               	goto	u1661
  3951     0F4F  2F52               	goto	u1660
  3952     0F50                     u1661:
  3953     0F50  3001               	movlw	1
  3954     0F51  2F53               	goto	u1670
  3955     0F52                     u1660:
  3956     0F52  3000               	movlw	0
  3957     0F53                     u1670:
  3958     0F53                     l358:
  3959     0F53  0008               	return
  3960     0F54                     __end_of_begin:
  3961                           
  3962                           	psect	text21
  3963     027F                     __ptext21:	
  3964 ;; *************** function _mcp2515_init *****************
  3965 ;; Defined at:
  3966 ;;		line 772 in file "mcp2515_can.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;  canSpeed        1    wreg     const unsigned char 
  3969 ;;  clock           1    1[BANK0 ] const unsigned char 
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;  canSpeed        1    4[BANK0 ] const unsigned char 
  3972 ;;  res             1    5[BANK0 ] unsigned char 
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      unsigned char 
  3975 ;; Registers used:
  3976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3982 ;;      Params:         0       1       0       0       0
  3983 ;;      Locals:         0       2       0       0       0
  3984 ;;      Temps:          0       2       0       0       0
  3985 ;;      Totals:         0       5       0       0       0
  3986 ;;Total ram usage:        5 bytes
  3987 ;; Hardware stack levels used: 1
  3988 ;; Hardware stack levels required when called: 5
  3989 ;; This function calls:
  3990 ;;		_mcp2515_configRate
  3991 ;;		_mcp2515_initCANBuffers
  3992 ;;		_mcp2515_modifyRegister
  3993 ;;		_mcp2515_reset
  3994 ;;		_mcp2515_setCANCTRL_Mode
  3995 ;;		_mcp2515_setRegister
  3996 ;;		_setMode
  3997 ;; This function is called by:
  3998 ;;		_begin
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002     027F                     _mcp2515_init:	
  4003                           ;psect for function _mcp2515_init
  4004                           
  4005                           
  4006                           ;incstack = 0
  4007                           ; Regs used in _mcp2515_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4008                           ;mcp2515_init@canSpeed stored from wreg
  4009     027F  1283               	bcf	3,5	;RP0=0, select bank0
  4010     0280  1303               	bcf	3,6	;RP1=0, select bank0
  4011     0281  00A4               	movwf	mcp2515_init@canSpeed
  4012     0282                     l3395:
  4013                           
  4014                           ;mcp2515_can.c: 774:     unsigned char res;;mcp2515_can.c: 776:     mcp2515_reset();
  4015     0282  120A  158A  2612  120A  118A  	fcall	_mcp2515_reset
  4016     0287                     l3397:
  4017                           
  4018                           ;mcp2515_can.c: 778:     res = mcp2515_setCANCTRL_Mode(0x80);
  4019     0287  3080               	movlw	128
  4020     0288  120A  118A  212A  120A  118A  	fcall	_mcp2515_setCANCTRL_Mode
  4021     028D  1283               	bcf	3,5	;RP0=0, select bank0
  4022     028E  1303               	bcf	3,6	;RP1=0, select bank0
  4023     028F  00A5               	movwf	mcp2515_init@res
  4024     0290                     l3399:
  4025                           
  4026                           ;mcp2515_can.c: 779:     if (res > 0) {
  4027     0290  0825               	movf	mcp2515_init@res,w
  4028     0291  1903               	btfsc	3,2
  4029     0292  2A94               	goto	u1521
  4030     0293  2A95               	goto	u1520
  4031     0294                     u1521:
  4032     0294  2AA3               	goto	l3405
  4033     0295                     u1520:
  4034     0295                     l3401:
  4035                           
  4036                           ;mcp2515_can.c: 783:         _delay((unsigned long)((10)*(4000000/4000.0)));
  4037     0295  300D               	movlw	13
  4038     0296  1283               	bcf	3,5	;RP0=0, select bank0
  4039     0297  1303               	bcf	3,6	;RP1=0, select bank0
  4040     0298  00A3               	movwf	??_mcp2515_init+1
  4041     0299  30FB               	movlw	251
  4042     029A  00A2               	movwf	??_mcp2515_init
  4043     029B                     u2167:
  4044     029B  0BA2               	decfsz	??_mcp2515_init,f
  4045     029C  2A9B               	goto	u2167
  4046     029D  0BA3               	decfsz	??_mcp2515_init+1,f
  4047     029E  2A9B               	goto	u2167
  4048                           
  4049                           ;mcp2515_can.c: 785:         return res;
  4050     029F  1283               	bcf	3,5	;RP0=0, select bank0
  4051     02A0  1303               	bcf	3,6	;RP1=0, select bank0
  4052     02A1  0825               	movf	mcp2515_init@res,w
  4053     02A2  2B0A               	goto	l298
  4054     02A3                     l3405:
  4055                           
  4056                           ;mcp2515_can.c: 790:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4057     02A3  300D               	movlw	13
  4058     02A4  1283               	bcf	3,5	;RP0=0, select bank0
  4059     02A5  1303               	bcf	3,6	;RP1=0, select bank0
  4060     02A6  00A3               	movwf	??_mcp2515_init+1
  4061     02A7  30FB               	movlw	251
  4062     02A8  00A2               	movwf	??_mcp2515_init
  4063     02A9                     u2177:
  4064     02A9  0BA2               	decfsz	??_mcp2515_init,f
  4065     02AA  2AA9               	goto	u2177
  4066     02AB  0BA3               	decfsz	??_mcp2515_init+1,f
  4067     02AC  2AA9               	goto	u2177
  4068     02AD                     l3407:
  4069                           
  4070                           ;mcp2515_can.c: 794:     if (mcp2515_configRate(canSpeed, clock)) {
  4071     02AD  1283               	bcf	3,5	;RP0=0, select bank0
  4072     02AE  1303               	bcf	3,6	;RP1=0, select bank0
  4073     02AF  0821               	movf	mcp2515_init@clock,w
  4074     02B0  00F4               	movwf	mcp2515_configRate@clock
  4075     02B1  0824               	movf	mcp2515_init@canSpeed,w
  4076     02B2  120A  118A  25B9  120A  118A  	fcall	_mcp2515_configRate
  4077     02B7  3A00               	xorlw	0
  4078     02B8  1903               	skipnz
  4079     02B9  2ABB               	goto	u1531
  4080     02BA  2ABC               	goto	u1530
  4081     02BB                     u1531:
  4082     02BB  2ABD               	goto	l3413
  4083     02BC                     u1530:
  4084     02BC  2A95               	goto	l3401
  4085     02BD                     l3413:
  4086                           
  4087                           ;mcp2515_can.c: 805:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4088     02BD  300D               	movlw	13
  4089     02BE  1283               	bcf	3,5	;RP0=0, select bank0
  4090     02BF  1303               	bcf	3,6	;RP1=0, select bank0
  4091     02C0  00A3               	movwf	??_mcp2515_init+1
  4092     02C1  30FB               	movlw	251
  4093     02C2  00A2               	movwf	??_mcp2515_init
  4094     02C3                     u2187:
  4095     02C3  0BA2               	decfsz	??_mcp2515_init,f
  4096     02C4  2AC3               	goto	u2187
  4097     02C5  0BA3               	decfsz	??_mcp2515_init+1,f
  4098     02C6  2AC3               	goto	u2187
  4099     02C7                     l3415:
  4100                           
  4101                           ;mcp2515_can.c: 808:     if (res == (0)) {
  4102     02C7  1283               	bcf	3,5	;RP0=0, select bank0
  4103     02C8  1303               	bcf	3,6	;RP1=0, select bank0
  4104     02C9  0825               	movf	mcp2515_init@res,w
  4105     02CA  1D03               	btfss	3,2
  4106     02CB  2ACD               	goto	u1541
  4107     02CC  2ACE               	goto	u1540
  4108     02CD                     u1541:
  4109     02CD  2B07               	goto	l300
  4110     02CE                     u1540:
  4111     02CE                     l3417:
  4112                           
  4113                           ;mcp2515_can.c: 811:         mcp2515_initCANBuffers();
  4114     02CE  120A  158A  27BF  120A  118A  	fcall	_mcp2515_initCANBuffers
  4115     02D3                     l3419:
  4116                           
  4117                           ;mcp2515_can.c: 814:         mcp2515_setRegister(0x2B, 0x01 | 0x02);
  4118     02D3  3003               	movlw	3
  4119     02D4  00F2               	movwf	mcp2515_setRegister@value
  4120     02D5  302B               	movlw	43
  4121     02D6  120A  158A  2657  120A  118A  	fcall	_mcp2515_setRegister
  4122     02DB                     l3421:
  4123                           
  4124                           ;mcp2515_can.c: 825:         mcp2515_modifyRegister(0x60,
  4125     02DB  3064               	movlw	100
  4126     02DC  00F4               	movwf	mcp2515_modifyRegister@mask
  4127     02DD  3004               	movlw	4
  4128     02DE  00F5               	movwf	mcp2515_modifyRegister@data
  4129     02DF  3060               	movlw	96
  4130     02E0  120A  118A  2010  120A  118A  	fcall	_mcp2515_modifyRegister
  4131     02E5                     l3423:
  4132                           
  4133                           ;mcp2515_can.c: 828:         mcp2515_modifyRegister(0x70, 0x60,
  4134     02E5  3060               	movlw	96
  4135     02E6  00F4               	movwf	mcp2515_modifyRegister@mask
  4136     02E7  01F5               	clrf	mcp2515_modifyRegister@data
  4137     02E8  3070               	movlw	112
  4138     02E9  120A  118A  2010  120A  118A  	fcall	_mcp2515_modifyRegister
  4139     02EE                     l3425:
  4140                           
  4141                           ;mcp2515_can.c: 832:         res = setMode(0x00);
  4142     02EE  3000               	movlw	0
  4143     02EF  120A  158A  25C6  120A  118A  	fcall	_setMode
  4144     02F4  1283               	bcf	3,5	;RP0=0, select bank0
  4145     02F5  1303               	bcf	3,6	;RP1=0, select bank0
  4146     02F6  00A5               	movwf	mcp2515_init@res
  4147     02F7                     l3427:
  4148                           
  4149                           ;mcp2515_can.c: 833:         if (res) {
  4150     02F7  0825               	movf	mcp2515_init@res,w
  4151     02F8  1903               	btfsc	3,2
  4152     02F9  2AFB               	goto	u1551
  4153     02FA  2AFC               	goto	u1550
  4154     02FB                     u1551:
  4155     02FB  2AFD               	goto	l3433
  4156     02FC                     u1550:
  4157     02FC  2A95               	goto	l3401
  4158     02FD                     l3433:
  4159                           
  4160                           ;mcp2515_can.c: 846:         _delay((unsigned long)((10)*(4000000/4000.0)));
  4161     02FD  300D               	movlw	13
  4162     02FE  1283               	bcf	3,5	;RP0=0, select bank0
  4163     02FF  1303               	bcf	3,6	;RP1=0, select bank0
  4164     0300  00A3               	movwf	??_mcp2515_init+1
  4165     0301  30FB               	movlw	251
  4166     0302  00A2               	movwf	??_mcp2515_init
  4167     0303                     u2197:
  4168     0303  0BA2               	decfsz	??_mcp2515_init,f
  4169     0304  2B03               	goto	u2197
  4170     0305  0BA3               	decfsz	??_mcp2515_init+1,f
  4171     0306  2B03               	goto	u2197
  4172     0307                     l300:	
  4173                           ;mcp2515_can.c: 849:     }
  4174                           
  4175                           
  4176                           ;mcp2515_can.c: 850:     return res;
  4177     0307  1283               	bcf	3,5	;RP0=0, select bank0
  4178     0308  1303               	bcf	3,6	;RP1=0, select bank0
  4179     0309  0825               	movf	mcp2515_init@res,w
  4180     030A                     l298:
  4181     030A  0008               	return
  4182     030B                     __end_of_mcp2515_init:
  4183                           
  4184                           	psect	text22
  4185     0DC6                     __ptext22:	
  4186 ;; *************** function _setMode *****************
  4187 ;; Defined at:
  4188 ;;		line 328 in file "mcp2515_can.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  opMode          1    wreg     const unsigned char 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;  opMode          1    0[BANK0 ] const unsigned char 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      unsigned char 
  4195 ;; Registers used:
  4196 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4202 ;;      Params:         0       0       0       0       0
  4203 ;;      Locals:         0       1       0       0       0
  4204 ;;      Temps:          0       0       0       0       0
  4205 ;;      Totals:         0       1       0       0       0
  4206 ;;Total ram usage:        1 bytes
  4207 ;; Hardware stack levels used: 1
  4208 ;; Hardware stack levels required when called: 4
  4209 ;; This function calls:
  4210 ;;		_mcp2515_setCANCTRL_Mode
  4211 ;; This function is called by:
  4212 ;;		_mcp2515_init
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216     0DC6                     _setMode:	
  4217                           ;psect for function _setMode
  4218                           
  4219                           
  4220                           ;incstack = 0
  4221                           ; Regs used in _setMode: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4222                           ;setMode@opMode stored from wreg
  4223     0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  4224     0DC7  1303               	bcf	3,6	;RP1=0, select bank0
  4225     0DC8  00A0               	movwf	setMode@opMode
  4226     0DC9                     l2985:
  4227                           
  4228                           ;mcp2515_can.c: 329:     if (opMode != 0x20)
  4229     0DC9  3020               	movlw	32
  4230     0DCA  0620               	xorwf	setMode@opMode,w
  4231     0DCB  1903               	btfsc	3,2
  4232     0DCC  2DCE               	goto	u1211
  4233     0DCD  2DCF               	goto	u1210
  4234     0DCE                     u1211:
  4235     0DCE  2DD1               	goto	l2989
  4236     0DCF                     u1210:
  4237     0DCF                     l2987:
  4238                           
  4239                           ;mcp2515_can.c: 330:         mcpMode = opMode;
  4240     0DCF  0820               	movf	setMode@opMode,w
  4241     0DD0  00DE               	movwf	_mcpMode
  4242     0DD1                     l2989:
  4243                           
  4244                           ;mcp2515_can.c: 331:     return mcp2515_setCANCTRL_Mode(opMode);
  4245     0DD1  0820               	movf	setMode@opMode,w
  4246     0DD2  120A  118A  212A  120A  158A  	fcall	_mcp2515_setCANCTRL_Mode
  4247     0DD7                     l200:
  4248     0DD7  0008               	return
  4249     0DD8                     __end_of_setMode:
  4250                           
  4251                           	psect	text23
  4252     012A                     __ptext23:	
  4253 ;; *************** function _mcp2515_setCANCTRL_Mode *****************
  4254 ;; Defined at:
  4255 ;;		line 346 in file "mcp2515_can.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;  newmode         1    wreg     const unsigned char 
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  newmode         1   11[COMMON] const unsigned char 
  4260 ;;  wakeIntEnabl    1   12[COMMON] unsigned char 
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  1    wreg      unsigned char 
  4263 ;; Registers used:
  4264 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4270 ;;      Params:         0       0       0       0       0
  4271 ;;      Locals:         2       0       0       0       0
  4272 ;;      Temps:          0       0       0       0       0
  4273 ;;      Totals:         2       0       0       0       0
  4274 ;;Total ram usage:        2 bytes
  4275 ;; Hardware stack levels used: 1
  4276 ;; Hardware stack levels required when called: 3
  4277 ;; This function calls:
  4278 ;;		_getMode
  4279 ;;		_mcp2515_modifyRegister
  4280 ;;		_mcp2515_readRegister
  4281 ;;		_mcp2515_requestNewMode
  4282 ;; This function is called by:
  4283 ;;		_setMode
  4284 ;;		_mcp2515_init
  4285 ;;		_sleep
  4286 ;;		_wake
  4287 ;;		_init_Mask
  4288 ;;		_init_Filt
  4289 ;;		_mcpPinMode
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293     012A                     _mcp2515_setCANCTRL_Mode:	
  4294                           ;psect for function _mcp2515_setCANCTRL_Mode
  4295                           
  4296                           
  4297                           ;incstack = 0
  4298                           ; Regs used in _mcp2515_setCANCTRL_Mode: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4299                           ;mcp2515_setCANCTRL_Mode@newmode stored from wreg
  4300     012A  00FC               	movwf	mcp2515_setCANCTRL_Mode@newmode
  4301     012B                     l2929:
  4302                           
  4303                           ;mcp2515_can.c: 350:     if ((getMode()) == 0x20 && newmode != 0x20) {
  4304     012B  120A  158A  2598  120A  118A  	fcall	_getMode
  4305     0130  3A20               	xorlw	32
  4306     0131  1D03               	skipz
  4307     0132  2934               	goto	u1111
  4308     0133  2935               	goto	u1110
  4309     0134                     u1111:
  4310     0134  2977               	goto	l206
  4311     0135                     u1110:
  4312     0135                     l2931:
  4313     0135  3020               	movlw	32
  4314     0136  067C               	xorwf	mcp2515_setCANCTRL_Mode@newmode,w
  4315     0137  1903               	btfsc	3,2
  4316     0138  293A               	goto	u1121
  4317     0139  293B               	goto	u1120
  4318     013A                     u1121:
  4319     013A  2977               	goto	l206
  4320     013B                     u1120:
  4321     013B                     l2933:
  4322                           
  4323                           ;mcp2515_can.c: 352:         unsigned char wakeIntEnabled = (mcp2515_readRegister(0x2B) 
      +                          & 0x40);
  4324     013B  302B               	movlw	43
  4325     013C  120A  158A  268B  120A  118A  	fcall	_mcp2515_readRegister
  4326     0141  3940               	andlw	64
  4327     0142  00FD               	movwf	mcp2515_setCANCTRL_Mode@wakeIntEnabled
  4328     0143                     l2935:
  4329                           
  4330                           ;mcp2515_can.c: 353:         if (!wakeIntEnabled) {
  4331     0143  087D               	movf	mcp2515_setCANCTRL_Mode@wakeIntEnabled,w
  4332     0144  1D03               	btfss	3,2
  4333     0145  2947               	goto	u1131
  4334     0146  2948               	goto	u1130
  4335     0147                     u1131:
  4336     0147  2952               	goto	l207
  4337     0148                     u1130:
  4338     0148                     l2937:
  4339                           
  4340                           ;mcp2515_can.c: 354:             mcp2515_modifyRegister(0x2B, 0x40, 0x40);
  4341     0148  3040               	movlw	64
  4342     0149  00F4               	movwf	mcp2515_modifyRegister@mask
  4343     014A  3040               	movlw	64
  4344     014B  00F5               	movwf	mcp2515_modifyRegister@data
  4345     014C  302B               	movlw	43
  4346     014D  120A  118A  2010  120A  118A  	fcall	_mcp2515_modifyRegister
  4347     0152                     l207:	
  4348                           ;mcp2515_can.c: 355:         }
  4349                           
  4350                           
  4351                           ;mcp2515_can.c: 358:         mcp2515_modifyRegister(0x2C, 0x40, 0x40);
  4352     0152  3040               	movlw	64
  4353     0153  00F4               	movwf	mcp2515_modifyRegister@mask
  4354     0154  3040               	movlw	64
  4355     0155  00F5               	movwf	mcp2515_modifyRegister@data
  4356     0156  302C               	movlw	44
  4357     0157  120A  118A  2010  120A  118A  	fcall	_mcp2515_modifyRegister
  4358     015C                     l2939:
  4359                           
  4360                           ;mcp2515_can.c: 366:         if (mcp2515_requestNewMode(0x60) != (0)) {
  4361     015C  3060               	movlw	96
  4362     015D  120A  158A  2784  120A  118A  	fcall	_mcp2515_requestNewMode
  4363     0162  3A00               	xorlw	0
  4364     0163  1903               	skipnz
  4365     0164  2966               	goto	u1141
  4366     0165  2967               	goto	u1140
  4367     0166                     u1141:
  4368     0166  2969               	goto	l2945
  4369     0167                     u1140:
  4370     0167                     l2941:
  4371                           
  4372                           ;mcp2515_can.c: 367:             return (1);
  4373     0167  3001               	movlw	1
  4374     0168  2986               	goto	l209
  4375     0169                     l2945:
  4376                           
  4377                           ;mcp2515_can.c: 371:         if (!wakeIntEnabled) {
  4378     0169  087D               	movf	mcp2515_setCANCTRL_Mode@wakeIntEnabled,w
  4379     016A  1D03               	btfss	3,2
  4380     016B  296D               	goto	u1151
  4381     016C  296E               	goto	u1150
  4382     016D                     u1151:
  4383     016D  2977               	goto	l206
  4384     016E                     u1150:
  4385     016E                     l2947:
  4386                           
  4387                           ;mcp2515_can.c: 372:             mcp2515_modifyRegister(0x2B, 0x40, 0);
  4388     016E  3040               	movlw	64
  4389     016F  00F4               	movwf	mcp2515_modifyRegister@mask
  4390     0170  01F5               	clrf	mcp2515_modifyRegister@data
  4391     0171  302B               	movlw	43
  4392     0172  120A  118A  2010  120A  118A  	fcall	_mcp2515_modifyRegister
  4393     0177                     l206:	
  4394                           ;mcp2515_can.c: 374:     }
  4395                           
  4396                           
  4397                           ;mcp2515_can.c: 377:     mcp2515_modifyRegister(0x2C, 0x40, 0);
  4398     0177  3040               	movlw	64
  4399     0178  00F4               	movwf	mcp2515_modifyRegister@mask
  4400     0179  01F5               	clrf	mcp2515_modifyRegister@data
  4401     017A  302C               	movlw	44
  4402     017B  120A  118A  2010  120A  118A  	fcall	_mcp2515_modifyRegister
  4403     0180                     l2949:
  4404                           
  4405                           ;mcp2515_can.c: 379:     return mcp2515_requestNewMode(newmode);
  4406     0180  087C               	movf	mcp2515_setCANCTRL_Mode@newmode,w
  4407     0181  120A  158A  2784  120A  118A  	fcall	_mcp2515_requestNewMode
  4408     0186                     l209:
  4409     0186  0008               	return
  4410     0187                     __end_of_mcp2515_setCANCTRL_Mode:
  4411                           
  4412                           	psect	text24
  4413     0F84                     __ptext24:	
  4414 ;; *************** function _mcp2515_requestNewMode *****************
  4415 ;; Defined at:
  4416 ;;		line 386 in file "mcp2515_can.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  newmode         1    wreg     const unsigned char 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  newmode         1   10[COMMON] const unsigned char 
  4421 ;;  statReg         1    9[COMMON] unsigned char 
  4422 ;;  Count           2    7[COMMON] int 
  4423 ;; Return value:  Size  Location     Type
  4424 ;;                  1    wreg      unsigned char 
  4425 ;; Registers used:
  4426 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4427 ;; Tracked objects:
  4428 ;;		On entry : 0/0
  4429 ;;		On exit  : 0/0
  4430 ;;		Unchanged: 0/0
  4431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4432 ;;      Params:         0       0       0       0       0
  4433 ;;      Locals:         4       0       0       0       0
  4434 ;;      Temps:          1       0       0       0       0
  4435 ;;      Totals:         5       0       0       0       0
  4436 ;;Total ram usage:        5 bytes
  4437 ;; Hardware stack levels used: 1
  4438 ;; Hardware stack levels required when called: 2
  4439 ;; This function calls:
  4440 ;;		_mcp2515_modifyRegister
  4441 ;;		_mcp2515_readRegister
  4442 ;; This function is called by:
  4443 ;;		_mcp2515_setCANCTRL_Mode
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447     0F84                     _mcp2515_requestNewMode:	
  4448                           ;psect for function _mcp2515_requestNewMode
  4449                           
  4450                           
  4451                           ;incstack = 0
  4452                           ; Regs used in _mcp2515_requestNewMode: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4453                           ;mcp2515_requestNewMode@newmode stored from wreg
  4454     0F84  00FB               	movwf	mcp2515_requestNewMode@newmode
  4455     0F85                     l2783:
  4456                           
  4457                           ;mcp2515_can.c: 387:     int Count = 0;
  4458     0F85  01F8               	clrf	mcp2515_requestNewMode@Count
  4459     0F86  01F9               	clrf	mcp2515_requestNewMode@Count+1
  4460     0F87                     l2785:
  4461                           
  4462                           ;mcp2515_can.c: 392:         mcp2515_modifyRegister(0x0F, 0xE0, newmode);
  4463     0F87  30E0               	movlw	224
  4464     0F88  00F4               	movwf	mcp2515_modifyRegister@mask
  4465     0F89  087B               	movf	mcp2515_requestNewMode@newmode,w
  4466     0F8A  00F5               	movwf	mcp2515_modifyRegister@data
  4467     0F8B  300F               	movlw	15
  4468     0F8C  120A  118A  2010  120A  158A  	fcall	_mcp2515_modifyRegister
  4469     0F91                     l2787:
  4470                           
  4471                           ;mcp2515_can.c: 394:         unsigned char statReg = mcp2515_readRegister(0x0E);
  4472     0F91  300E               	movlw	14
  4473     0F92  120A  158A  268B  120A  158A  	fcall	_mcp2515_readRegister
  4474     0F97  00FA               	movwf	mcp2515_requestNewMode@statReg
  4475     0F98                     l2789:
  4476                           
  4477                           ;mcp2515_can.c: 395:         if ((statReg & 0xE0) == newmode) {
  4478     0F98  087A               	movf	mcp2515_requestNewMode@statReg,w
  4479     0F99  39E0               	andlw	224
  4480     0F9A  067B               	xorwf	mcp2515_requestNewMode@newmode,w
  4481     0F9B  1D03               	skipz
  4482     0F9C  2F9E               	goto	u1091
  4483     0F9D  2F9F               	goto	u1090
  4484     0F9E                     u1091:
  4485     0F9E  2FA1               	goto	l2797
  4486     0F9F                     u1090:
  4487     0F9F                     l2791:
  4488                           
  4489                           ;mcp2515_can.c: 396:             return (0);
  4490     0F9F  3000               	movlw	0
  4491     0FA0  2FBE               	goto	l215
  4492     0FA1                     l2797:
  4493     0FA1  0879               	movf	mcp2515_requestNewMode@Count+1,w
  4494     0FA2  3A80               	xorlw	128
  4495     0FA3  00FF               	movwf	btemp+1
  4496     0FA4  3080               	movlw	128
  4497     0FA5  027F               	subwf	btemp+1,w
  4498     0FA6  1D03               	skipz
  4499     0FA7  2FAA               	goto	u1105
  4500     0FA8  30C9               	movlw	201
  4501     0FA9  0278               	subwf	mcp2515_requestNewMode@Count,w
  4502     0FAA                     u1105:
  4503     0FAA  1C03               	skipc
  4504     0FAB  2FAD               	goto	u1101
  4505     0FAC  2FAE               	goto	u1100
  4506     0FAD                     u1101:
  4507     0FAD  2FB0               	goto	l2805
  4508     0FAE                     u1100:
  4509     0FAE                     l2799:
  4510                           
  4511                           ;mcp2515_can.c: 398:             return (1);
  4512     0FAE  3001               	movlw	1
  4513     0FAF  2FBE               	goto	l215
  4514     0FB0                     l2805:
  4515                           
  4516                           ;mcp2515_can.c: 400:             _delay((unsigned long)((1)*(4000000/4000.0)));
  4517     0FB0  30C7               	movlw	199
  4518     0FB1  00F7               	movwf	??_mcp2515_requestNewMode
  4519     0FB2                     u2207:
  4520     0FB2  2FB3               	nop2
  4521     0FB3  0BF7               	decfsz	??_mcp2515_requestNewMode,f
  4522     0FB4  2FB2               	goto	u2207
  4523     0FB5  2FB6               	nop2
  4524     0FB6  2FB7               	nop2
  4525                           
  4526                           ;mcp2515_can.c: 401:             Count++;
  4527     0FB7  3001               	movlw	1
  4528     0FB8  07F8               	addwf	mcp2515_requestNewMode@Count,f
  4529     0FB9  1803               	skipnc
  4530     0FBA  0AF9               	incf	mcp2515_requestNewMode@Count+1,f
  4531     0FBB  3000               	movlw	0
  4532     0FBC  07F9               	addwf	mcp2515_requestNewMode@Count+1,f
  4533     0FBD  2F87               	goto	l2785
  4534     0FBE                     l215:
  4535     0FBE  0008               	return
  4536     0FBF                     __end_of_mcp2515_requestNewMode:
  4537                           
  4538                           	psect	text25
  4539     0010                     __ptext25:	
  4540 ;; *************** function _mcp2515_modifyRegister *****************
  4541 ;; Defined at:
  4542 ;;		line 256 in file "mcp2515_can.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  address         1    wreg     const unsigned char 
  4545 ;;  mask            1    3[COMMON] const unsigned char 
  4546 ;;  data            1    4[COMMON] const unsigned char 
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;  address         1    5[COMMON] const unsigned char 
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      void 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0, pclath, cstack
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4558 ;;      Params:         2       0       0       0       0
  4559 ;;      Locals:         1       0       0       0       0
  4560 ;;      Temps:          0       0       0       0       0
  4561 ;;      Totals:         3       0       0       0       0
  4562 ;;Total ram usage:        3 bytes
  4563 ;; Hardware stack levels used: 1
  4564 ;; Hardware stack levels required when called: 1
  4565 ;; This function calls:
  4566 ;;		_WriteSPI
  4567 ;; This function is called by:
  4568 ;;		_mcp2515_setCANCTRL_Mode
  4569 ;;		_mcp2515_requestNewMode
  4570 ;;		_mcp2515_init
  4571 ;;		_mcp2515_getNextFreeTXBuf
  4572 ;;		_setSleepWakeup
  4573 ;;		_mcp2515_isTXBufFree
  4574 ;;		_sendMsgBuf1
  4575 ;;		_clearBufferTransmitIfFlags
  4576 ;;		_mcpPinMode
  4577 ;;		_mcpDigitalWrite
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581     0010                     _mcp2515_modifyRegister:	
  4582                           ;psect for function _mcp2515_modifyRegister
  4583                           
  4584                           
  4585                           ;incstack = 0
  4586                           ; Regs used in _mcp2515_modifyRegister: [wreg+status,2+status,0+pclath+cstack]
  4587                           ;mcp2515_modifyRegister@address stored from wreg
  4588     0010  00F6               	movwf	mcp2515_modifyRegister@address
  4589     0011                     l2747:
  4590                           
  4591                           ;mcp2515_can.c: 260:     RD0 = 0;;
  4592     0011  1283               	bcf	3,5	;RP0=0, select bank0
  4593     0012  1303               	bcf	3,6	;RP1=0, select bank0
  4594     0013  1008               	bcf	8,0	;volatile
  4595     0014                     l2749:
  4596                           
  4597                           ;mcp2515_can.c: 261:     WriteSPI(0x05);
  4598     0014  3005               	movlw	5
  4599     0015  120A  158A  25B5  120A  118A  	fcall	_WriteSPI
  4600                           
  4601                           ;mcp2515_can.c: 262:     WriteSPI(address);
  4602     001A  0876               	movf	mcp2515_modifyRegister@address,w
  4603     001B  120A  158A  25B5  120A  118A  	fcall	_WriteSPI
  4604                           
  4605                           ;mcp2515_can.c: 263:     WriteSPI(mask);
  4606     0020  0874               	movf	mcp2515_modifyRegister@mask,w
  4607     0021  120A  158A  25B5  120A  118A  	fcall	_WriteSPI
  4608                           
  4609                           ;mcp2515_can.c: 264:     WriteSPI(data);
  4610     0026  0875               	movf	mcp2515_modifyRegister@data,w
  4611     0027  120A  158A  25B5  120A  118A  	fcall	_WriteSPI
  4612     002C                     l2751:
  4613                           
  4614                           ;mcp2515_can.c: 265:     RD0 = 1;;
  4615     002C  1283               	bcf	3,5	;RP0=0, select bank0
  4616     002D  1303               	bcf	3,6	;RP1=0, select bank0
  4617     002E  1408               	bsf	8,0	;volatile
  4618     002F                     l176:
  4619     002F  0008               	return
  4620     0030                     __end_of_mcp2515_modifyRegister:
  4621                           
  4622                           	psect	text26
  4623     0D98                     __ptext26:	
  4624 ;; *************** function _getMode *****************
  4625 ;; Defined at:
  4626 ;;		line 338 in file "mcp2515_can.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;		None
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;		None
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  1    wreg      unsigned char 
  4633 ;; Registers used:
  4634 ;;		wreg, status,2, status,0, pclath, cstack
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4640 ;;      Params:         0       0       0       0       0
  4641 ;;      Locals:         0       0       0       0       0
  4642 ;;      Temps:          0       0       0       0       0
  4643 ;;      Totals:         0       0       0       0       0
  4644 ;;Total ram usage:        0 bytes
  4645 ;; Hardware stack levels used: 1
  4646 ;; Hardware stack levels required when called: 2
  4647 ;; This function calls:
  4648 ;;		_mcp2515_readRegister
  4649 ;; This function is called by:
  4650 ;;		_mcp2515_setCANCTRL_Mode
  4651 ;;		_sleep
  4652 ;;		_wake
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656     0D98                     _getMode:	
  4657                           ;psect for function _getMode
  4658                           
  4659     0D98                     l2779:	
  4660                           ;incstack = 0
  4661                           ; Regs used in _getMode: [wreg+status,2+status,0+pclath+cstack]
  4662                           
  4663                           
  4664                           ;mcp2515_can.c: 339:     return (mcp2515_readRegister(0x0E) & 0xE0);
  4665     0D98  300E               	movlw	14
  4666     0D99  120A  158A  268B  120A  158A  	fcall	_mcp2515_readRegister
  4667     0D9E  39E0               	andlw	224
  4668     0D9F                     l203:
  4669     0D9F  0008               	return
  4670     0DA0                     __end_of_getMode:
  4671                           
  4672                           	psect	text27
  4673     0E8B                     __ptext27:	
  4674 ;; *************** function _mcp2515_readRegister *****************
  4675 ;; Defined at:
  4676 ;;		line 172 in file "mcp2515_can.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;  address         1    wreg     const unsigned char 
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;  address         1    1[COMMON] const unsigned char 
  4681 ;;  ret             1    2[COMMON] unsigned char 
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      unsigned char 
  4684 ;; Registers used:
  4685 ;;		wreg, status,2, status,0, pclath, cstack
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4691 ;;      Params:         0       0       0       0       0
  4692 ;;      Locals:         2       0       0       0       0
  4693 ;;      Temps:          0       0       0       0       0
  4694 ;;      Totals:         2       0       0       0       0
  4695 ;;Total ram usage:        2 bytes
  4696 ;; Hardware stack levels used: 1
  4697 ;; Hardware stack levels required when called: 1
  4698 ;; This function calls:
  4699 ;;		_ReadSPI
  4700 ;;		_WriteSPI
  4701 ;; This function is called by:
  4702 ;;		_getMode
  4703 ;;		_mcp2515_setCANCTRL_Mode
  4704 ;;		_mcp2515_requestNewMode
  4705 ;;		_sendMsg
  4706 ;;		_enableTxInterrupt
  4707 ;;		_checkError
  4708 ;;		_mcpDigitalRead
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712     0E8B                     _mcp2515_readRegister:	
  4713                           ;psect for function _mcp2515_readRegister
  4714                           
  4715                           
  4716                           ;incstack = 0
  4717                           ; Regs used in _mcp2515_readRegister: [wreg+status,2+status,0+pclath+cstack]
  4718                           ;mcp2515_readRegister@address stored from wreg
  4719     0E8B  00F2               	movwf	mcp2515_readRegister@address
  4720     0E8C                     l2735:
  4721                           
  4722                           ;mcp2515_can.c: 173:     unsigned char ret;;mcp2515_can.c: 178:     RD0 = 0;;
  4723     0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  4724     0E8D  1303               	bcf	3,6	;RP1=0, select bank0
  4725     0E8E  1008               	bcf	8,0	;volatile
  4726     0E8F                     l2737:
  4727                           
  4728                           ;mcp2515_can.c: 179:     WriteSPI(0x03);
  4729     0E8F  3003               	movlw	3
  4730     0E90  120A  158A  25B5  120A  158A  	fcall	_WriteSPI
  4731                           
  4732                           ;mcp2515_can.c: 180:     WriteSPI(address);
  4733     0E95  0872               	movf	mcp2515_readRegister@address,w
  4734     0E96  120A  158A  25B5  120A  158A  	fcall	_WriteSPI
  4735     0E9B                     l2739:
  4736                           
  4737                           ;mcp2515_can.c: 181:     ret = ReadSPI();
  4738     0E9B  120A  158A  25A8  120A  158A  	fcall	_ReadSPI
  4739     0EA0  00F3               	movwf	mcp2515_readRegister@ret
  4740     0EA1                     l2741:
  4741                           
  4742                           ;mcp2515_can.c: 182:     RD0 = 1;;
  4743     0EA1  1283               	bcf	3,5	;RP0=0, select bank0
  4744     0EA2  1303               	bcf	3,6	;RP1=0, select bank0
  4745     0EA3  1408               	bsf	8,0	;volatile
  4746     0EA4                     l2743:
  4747                           
  4748                           ;mcp2515_can.c: 187:     return ret;
  4749     0EA4  0873               	movf	mcp2515_readRegister@ret,w
  4750     0EA5                     l157:
  4751     0EA5  0008               	return
  4752     0EA6                     __end_of_mcp2515_readRegister:
  4753                           
  4754                           	psect	text28
  4755     0DA8                     __ptext28:	
  4756 ;; *************** function _ReadSPI *****************
  4757 ;; Defined at:
  4758 ;;		line 176 in file "spi16.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;		None
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;		None
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  1    wreg      unsigned char 
  4765 ;; Registers used:
  4766 ;;		wreg, status,2
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4772 ;;      Params:         0       0       0       0       0
  4773 ;;      Locals:         0       0       0       0       0
  4774 ;;      Temps:          0       0       0       0       0
  4775 ;;      Totals:         0       0       0       0       0
  4776 ;;Total ram usage:        0 bytes
  4777 ;; Hardware stack levels used: 1
  4778 ;; This function calls:
  4779 ;;		Nothing
  4780 ;; This function is called by:
  4781 ;;		_mcp2515_readRegister
  4782 ;;		_mcp2515_readStatus
  4783 ;;		_mcp2515_read_canMsg
  4784 ;;		_mcp2515_readRegisterS
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787                           
  4788     0DA8                     _ReadSPI:	
  4789                           ;psect for function _ReadSPI
  4790                           
  4791     0DA8                     l2729:	
  4792                           ;incstack = 0
  4793                           ; Regs used in _ReadSPI: [wreg+status,2]
  4794                           
  4795                           
  4796                           ;spi16.c: 178:     SSPBUF = 0x00;
  4797     0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  4798     0DA9  1303               	bcf	3,6	;RP1=0, select bank0
  4799     0DAA  0193               	clrf	19	;volatile
  4800     0DAB                     l598:	
  4801                           ;spi16.c: 179:     while ( !BF );
  4802                           
  4803     0DAB  1683               	bsf	3,5	;RP0=1, select bank1
  4804     0DAC  1303               	bcf	3,6	;RP1=0, select bank1
  4805     0DAD  1C14               	btfss	20,0	;volatile
  4806     0DAE  2DB0               	goto	u1081
  4807     0DAF  2DB1               	goto	u1080
  4808     0DB0                     u1081:
  4809     0DB0  2DAB               	goto	l598
  4810     0DB1                     u1080:
  4811     0DB1                     l2731:
  4812                           
  4813                           ;spi16.c: 180:     return ( SSPBUF );
  4814     0DB1  1283               	bcf	3,5	;RP0=0, select bank0
  4815     0DB2  1303               	bcf	3,6	;RP1=0, select bank0
  4816     0DB3  0813               	movf	19,w	;volatile
  4817     0DB4                     l601:
  4818     0DB4  0008               	return
  4819     0DB5                     __end_of_ReadSPI:
  4820                           
  4821                           	psect	text29
  4822     0E12                     __ptext29:	
  4823 ;; *************** function _mcp2515_reset *****************
  4824 ;; Defined at:
  4825 ;;		line 155 in file "mcp2515_can.c"
  4826 ;; Parameters:    Size  Location     Type
  4827 ;;		None
  4828 ;; Auto vars:     Size  Location     Type
  4829 ;;		None
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  1    wreg      void 
  4832 ;; Registers used:
  4833 ;;		wreg, status,2, status,0, pclath, cstack
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4839 ;;      Params:         0       0       0       0       0
  4840 ;;      Locals:         0       0       0       0       0
  4841 ;;      Temps:          2       0       0       0       0
  4842 ;;      Totals:         2       0       0       0       0
  4843 ;;Total ram usage:        2 bytes
  4844 ;; Hardware stack levels used: 1
  4845 ;; Hardware stack levels required when called: 1
  4846 ;; This function calls:
  4847 ;;		_WriteSPI
  4848 ;; This function is called by:
  4849 ;;		_mcp2515_init
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853     0E12                     _mcp2515_reset:	
  4854                           ;psect for function _mcp2515_reset
  4855                           
  4856     0E12                     l2977:	
  4857                           ;incstack = 0
  4858                           ; Regs used in _mcp2515_reset: [wreg+status,2+status,0+pclath+cstack]
  4859                           
  4860                           
  4861                           ;mcp2515_can.c: 159:     RD0 = 0;;
  4862     0E12  1283               	bcf	3,5	;RP0=0, select bank0
  4863     0E13  1303               	bcf	3,6	;RP1=0, select bank0
  4864     0E14  1008               	bcf	8,0	;volatile
  4865     0E15                     l2979:
  4866                           
  4867                           ;mcp2515_can.c: 160:     WriteSPI(0xC0);
  4868     0E15  30C0               	movlw	192
  4869     0E16  120A  158A  25B5  120A  158A  	fcall	_WriteSPI
  4870     0E1B                     l2981:
  4871                           
  4872                           ;mcp2515_can.c: 161:     RD0 = 1;;
  4873     0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4874     0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4875     0E1D  1408               	bsf	8,0	;volatile
  4876     0E1E                     l2983:
  4877                           
  4878                           ;mcp2515_can.c: 165:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4879     0E1E  300D               	movlw	13
  4880     0E1F  00F3               	movwf	??_mcp2515_reset+1
  4881     0E20  30FB               	movlw	251
  4882     0E21  00F2               	movwf	??_mcp2515_reset
  4883     0E22                     u2217:
  4884     0E22  0BF2               	decfsz	??_mcp2515_reset,f
  4885     0E23  2E22               	goto	u2217
  4886     0E24  0BF3               	decfsz	??_mcp2515_reset+1,f
  4887     0E25  2E22               	goto	u2217
  4888     0E26  2E27               	nop2
  4889     0E27                     l154:
  4890     0E27  0008               	return
  4891     0E28                     __end_of_mcp2515_reset:
  4892                           
  4893                           	psect	text30
  4894     0FBF                     __ptext30:	
  4895 ;; *************** function _mcp2515_initCANBuffers *****************
  4896 ;; Defined at:
  4897 ;;		line 750 in file "mcp2515_can.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;		None
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  i               1    6[COMMON] unsigned char 
  4902 ;;  a3              1    5[COMMON] unsigned char 
  4903 ;;  a2              1    4[COMMON] unsigned char 
  4904 ;;  a1              1    3[COMMON] unsigned char 
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4914 ;;      Params:         0       0       0       0       0
  4915 ;;      Locals:         4       0       0       0       0
  4916 ;;      Temps:          0       0       0       0       0
  4917 ;;      Totals:         4       0       0       0       0
  4918 ;;Total ram usage:        4 bytes
  4919 ;; Hardware stack levels used: 1
  4920 ;; Hardware stack levels required when called: 2
  4921 ;; This function calls:
  4922 ;;		_mcp2515_setRegister
  4923 ;; This function is called by:
  4924 ;;		_mcp2515_init
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928     0FBF                     _mcp2515_initCANBuffers:	
  4929                           ;psect for function _mcp2515_initCANBuffers
  4930                           
  4931     0FBF                     l3195:	
  4932                           ;incstack = 0
  4933                           ; Regs used in _mcp2515_initCANBuffers: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4934                           
  4935                           
  4936                           ;mcp2515_can.c: 751:     unsigned char i, a1, a2, a3;;mcp2515_can.c: 753:     a1 = 0x30;
  4937     0FBF  3030               	movlw	48
  4938     0FC0  00F4               	movwf	mcp2515_initCANBuffers@a1
  4939                           
  4940                           ;mcp2515_can.c: 754:     a2 = 0x40;
  4941     0FC1  3040               	movlw	64
  4942     0FC2  00F5               	movwf	mcp2515_initCANBuffers@a2
  4943                           
  4944                           ;mcp2515_can.c: 755:     a3 = 0x50;
  4945     0FC3  3050               	movlw	80
  4946     0FC4  00F6               	movwf	mcp2515_initCANBuffers@a3
  4947     0FC5                     l3197:
  4948                           
  4949                           ;mcp2515_can.c: 756:     for (i = 0; i < 14; i++) {
  4950     0FC5  01F7               	clrf	mcp2515_initCANBuffers@i
  4951     0FC6                     l3203:
  4952                           
  4953                           ;mcp2515_can.c: 757:         mcp2515_setRegister(a1, 0);
  4954     0FC6  01F2               	clrf	mcp2515_setRegister@value
  4955     0FC7  0874               	movf	mcp2515_initCANBuffers@a1,w
  4956     0FC8  120A  158A  2657  120A  158A  	fcall	_mcp2515_setRegister
  4957                           
  4958                           ;mcp2515_can.c: 758:         mcp2515_setRegister(a2, 0);
  4959     0FCD  01F2               	clrf	mcp2515_setRegister@value
  4960     0FCE  0875               	movf	mcp2515_initCANBuffers@a2,w
  4961     0FCF  120A  158A  2657  120A  158A  	fcall	_mcp2515_setRegister
  4962                           
  4963                           ;mcp2515_can.c: 759:         mcp2515_setRegister(a3, 0);
  4964     0FD4  01F2               	clrf	mcp2515_setRegister@value
  4965     0FD5  0876               	movf	mcp2515_initCANBuffers@a3,w
  4966     0FD6  120A  158A  2657  120A  158A  	fcall	_mcp2515_setRegister
  4967     0FDB                     l3205:
  4968                           
  4969                           ;mcp2515_can.c: 760:         a1++;
  4970     0FDB  3001               	movlw	1
  4971     0FDC  00FF               	movwf	btemp+1
  4972     0FDD  087F               	movf	btemp+1,w
  4973     0FDE  07F4               	addwf	mcp2515_initCANBuffers@a1,f
  4974     0FDF                     l3207:
  4975                           
  4976                           ;mcp2515_can.c: 761:         a2++;
  4977     0FDF  3001               	movlw	1
  4978     0FE0  00FF               	movwf	btemp+1
  4979     0FE1  087F               	movf	btemp+1,w
  4980     0FE2  07F5               	addwf	mcp2515_initCANBuffers@a2,f
  4981     0FE3                     l3209:
  4982                           
  4983                           ;mcp2515_can.c: 762:         a3++;
  4984     0FE3  3001               	movlw	1
  4985     0FE4  00FF               	movwf	btemp+1
  4986     0FE5  087F               	movf	btemp+1,w
  4987     0FE6  07F6               	addwf	mcp2515_initCANBuffers@a3,f
  4988     0FE7                     l3211:
  4989                           
  4990                           ;mcp2515_can.c: 763:     }
  4991     0FE7  3001               	movlw	1
  4992     0FE8  00FF               	movwf	btemp+1
  4993     0FE9  087F               	movf	btemp+1,w
  4994     0FEA  07F7               	addwf	mcp2515_initCANBuffers@i,f
  4995     0FEB                     l3213:
  4996     0FEB  300E               	movlw	14
  4997     0FEC  0277               	subwf	mcp2515_initCANBuffers@i,w
  4998     0FED  1C03               	skipc
  4999     0FEE  2FF0               	goto	u1231
  5000     0FEF  2FF1               	goto	u1230
  5001     0FF0                     u1231:
  5002     0FF0  2FC6               	goto	l3203
  5003     0FF1                     u1230:
  5004     0FF1                     l3215:
  5005                           
  5006                           ;mcp2515_can.c: 764:     mcp2515_setRegister(0x60, 0);
  5007     0FF1  01F2               	clrf	mcp2515_setRegister@value
  5008     0FF2  3060               	movlw	96
  5009     0FF3  120A  158A  2657  120A  158A  	fcall	_mcp2515_setRegister
  5010                           
  5011                           ;mcp2515_can.c: 765:     mcp2515_setRegister(0x70, 0);
  5012     0FF8  01F2               	clrf	mcp2515_setRegister@value
  5013     0FF9  3070               	movlw	112
  5014     0FFA  120A  158A  2657  120A  158A  	fcall	_mcp2515_setRegister
  5015     0FFF                     l294:
  5016     0FFF  0008               	return
  5017     1000                     __end_of_mcp2515_initCANBuffers:
  5018                           
  5019                           	psect	text31
  5020     05B9                     __ptext31:	
  5021 ;; *************** function _mcp2515_configRate *****************
  5022 ;; Defined at:
  5023 ;;		line 410 in file "mcp2515_can.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;  canSpeed        1    wreg     const unsigned char 
  5026 ;;  clock           1    3[COMMON] const unsigned char 
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;  canSpeed        1    7[COMMON] const unsigned char 
  5029 ;;  cfg3            1   10[COMMON] unsigned char 
  5030 ;;  cfg2            1    9[COMMON] unsigned char 
  5031 ;;  cfg1            1    8[COMMON] unsigned char 
  5032 ;;  set             1    6[COMMON] unsigned char 
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  1    wreg      unsigned char 
  5035 ;; Registers used:
  5036 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5042 ;;      Params:         1       0       0       0       0
  5043 ;;      Locals:         5       0       0       0       0
  5044 ;;      Temps:          2       0       0       0       0
  5045 ;;      Totals:         8       0       0       0       0
  5046 ;;Total ram usage:        8 bytes
  5047 ;; Hardware stack levels used: 1
  5048 ;; Hardware stack levels required when called: 2
  5049 ;; This function calls:
  5050 ;;		_mcp2515_setRegister
  5051 ;; This function is called by:
  5052 ;;		_mcp2515_init
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056     05B9                     _mcp2515_configRate:	
  5057                           ;psect for function _mcp2515_configRate
  5058                           
  5059                           
  5060                           ;incstack = 0
  5061                           ; Regs used in _mcp2515_configRate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5062                           ;mcp2515_configRate@canSpeed stored from wreg
  5063     05B9  00F8               	movwf	mcp2515_configRate@canSpeed
  5064     05BA                     l2993:
  5065                           
  5066                           ;mcp2515_can.c: 411:     unsigned char set, cfg1, cfg2, cfg3;;mcp2515_can.c: 412:     se
      +                          t = 1;
  5067     05BA  01F7               	clrf	mcp2515_configRate@set
  5068     05BB  0AF7               	incf	mcp2515_configRate@set,f
  5069                           
  5070                           ;mcp2515_can.c: 413:     switch (clock) {
  5071     05BC  2FB2               	goto	l3163
  5072     05BD                     l2995:
  5073                           
  5074                           ;mcp2515_can.c: 417:                     cfg1 = (0x3F);
  5075     05BD  303F               	movlw	63
  5076     05BE  00F9               	movwf	mcp2515_configRate@cfg1
  5077                           
  5078                           ;mcp2515_can.c: 418:                     cfg2 = (0xFF);
  5079     05BF  30FF               	movlw	255
  5080     05C0  00FA               	movwf	mcp2515_configRate@cfg2
  5081                           
  5082                           ;mcp2515_can.c: 419:                     cfg3 = (0x87);
  5083     05C1  3087               	movlw	135
  5084     05C2  00FB               	movwf	mcp2515_configRate@cfg3
  5085                           
  5086                           ;mcp2515_can.c: 420:                     break;
  5087     05C3  2FC5               	goto	l3165
  5088     05C4                     l2997:
  5089                           
  5090                           ;mcp2515_can.c: 423:                     cfg1 = (0x1F);
  5091     05C4  301F               	movlw	31
  5092     05C5  00F9               	movwf	mcp2515_configRate@cfg1
  5093                           
  5094                           ;mcp2515_can.c: 424:                     cfg2 = (0xFF);
  5095     05C6  30FF               	movlw	255
  5096     05C7  00FA               	movwf	mcp2515_configRate@cfg2
  5097                           
  5098                           ;mcp2515_can.c: 425:                     cfg3 = (0x87);
  5099     05C8  3087               	movlw	135
  5100     05C9  00FB               	movwf	mcp2515_configRate@cfg3
  5101                           
  5102                           ;mcp2515_can.c: 426:                     break;
  5103     05CA  2FC5               	goto	l3165
  5104     05CB                     l2999:
  5105                           
  5106                           ;mcp2515_can.c: 429:                     cfg1 = (0x0F);
  5107     05CB  300F               	movlw	15
  5108     05CC  00F9               	movwf	mcp2515_configRate@cfg1
  5109                           
  5110                           ;mcp2515_can.c: 430:                     cfg2 = (0xFF);
  5111     05CD  30FF               	movlw	255
  5112     05CE  00FA               	movwf	mcp2515_configRate@cfg2
  5113                           
  5114                           ;mcp2515_can.c: 431:                     cfg3 = (0x87);
  5115     05CF  3087               	movlw	135
  5116     05D0  00FB               	movwf	mcp2515_configRate@cfg3
  5117                           
  5118                           ;mcp2515_can.c: 432:                     break;
  5119     05D1  2FC5               	goto	l3165
  5120     05D2                     l3001:
  5121                           
  5122                           ;mcp2515_can.c: 435:                     cfg1 = (0X0F);
  5123     05D2  300F               	movlw	15
  5124     05D3  00F9               	movwf	mcp2515_configRate@cfg1
  5125                           
  5126                           ;mcp2515_can.c: 436:                     cfg2 = (0XBA);
  5127     05D4  30BA               	movlw	186
  5128     05D5  00FA               	movwf	mcp2515_configRate@cfg2
  5129                           
  5130                           ;mcp2515_can.c: 437:                     cfg3 = (0X07);
  5131     05D6  3007               	movlw	7
  5132     05D7  00FB               	movwf	mcp2515_configRate@cfg3
  5133                           
  5134                           ;mcp2515_can.c: 438:                     break;
  5135     05D8  2FC5               	goto	l3165
  5136     05D9                     l3003:
  5137                           
  5138                           ;mcp2515_can.c: 441:                     cfg1 = (0x0F);
  5139     05D9  300F               	movlw	15
  5140     05DA  00F9               	movwf	mcp2515_configRate@cfg1
  5141                           
  5142                           ;mcp2515_can.c: 442:                     cfg2 = (0xF1);
  5143     05DB  30F1               	movlw	241
  5144     05DC  00FA               	movwf	mcp2515_configRate@cfg2
  5145                           
  5146                           ;mcp2515_can.c: 443:                     cfg3 = (0x85);
  5147     05DD  3085               	movlw	133
  5148     05DE  00FB               	movwf	mcp2515_configRate@cfg3
  5149                           
  5150                           ;mcp2515_can.c: 444:                     break;
  5151     05DF  2FC5               	goto	l3165
  5152     05E0                     l3005:
  5153                           
  5154                           ;mcp2515_can.c: 447:                     cfg1 = (0x09);
  5155     05E0  3009               	movlw	9
  5156     05E1  00F9               	movwf	mcp2515_configRate@cfg1
  5157                           
  5158                           ;mcp2515_can.c: 448:                     cfg2 = (0xBE);
  5159     05E2  30BE               	movlw	190
  5160     05E3  00FA               	movwf	mcp2515_configRate@cfg2
  5161                           
  5162                           ;mcp2515_can.c: 449:                     cfg3 = (0x07);
  5163     05E4  3007               	movlw	7
  5164     05E5  00FB               	movwf	mcp2515_configRate@cfg3
  5165                           
  5166                           ;mcp2515_can.c: 450:                     break;
  5167     05E6  2FC5               	goto	l3165
  5168     05E7                     l3007:
  5169                           
  5170                           ;mcp2515_can.c: 453:                     cfg1 = (0x07);
  5171     05E7  3007               	movlw	7
  5172     05E8  00F9               	movwf	mcp2515_configRate@cfg1
  5173                           
  5174                           ;mcp2515_can.c: 454:                     cfg2 = (0xFF);
  5175     05E9  30FF               	movlw	255
  5176     05EA  00FA               	movwf	mcp2515_configRate@cfg2
  5177                           
  5178                           ;mcp2515_can.c: 455:                     cfg3 = (0x87);
  5179     05EB  3087               	movlw	135
  5180     05EC  00FB               	movwf	mcp2515_configRate@cfg3
  5181                           
  5182                           ;mcp2515_can.c: 456:                     break;
  5183     05ED  2FC5               	goto	l3165
  5184     05EE                     l3009:
  5185                           
  5186                           ;mcp2515_can.c: 459:                     cfg1 = (0x07);
  5187     05EE  3007               	movlw	7
  5188     05EF  00F9               	movwf	mcp2515_configRate@cfg1
  5189                           
  5190                           ;mcp2515_can.c: 460:                     cfg2 = (0xFA);
  5191     05F0  30FA               	movlw	250
  5192     05F1  00FA               	movwf	mcp2515_configRate@cfg2
  5193                           
  5194                           ;mcp2515_can.c: 461:                     cfg3 = (0x87);
  5195     05F2  3087               	movlw	135
  5196     05F3  00FB               	movwf	mcp2515_configRate@cfg3
  5197                           
  5198                           ;mcp2515_can.c: 462:                     break;
  5199     05F4  2FC5               	goto	l3165
  5200     05F5                     l3011:
  5201                           
  5202                           ;mcp2515_can.c: 465:                     cfg1 = (0x03);
  5203     05F5  3003               	movlw	3
  5204     05F6  00F9               	movwf	mcp2515_configRate@cfg1
  5205                           
  5206                           ;mcp2515_can.c: 466:                     cfg2 = (0xFF);
  5207     05F7  30FF               	movlw	255
  5208     05F8  00FA               	movwf	mcp2515_configRate@cfg2
  5209                           
  5210                           ;mcp2515_can.c: 467:                     cfg3 = (0x87);
  5211     05F9  3087               	movlw	135
  5212     05FA  00FB               	movwf	mcp2515_configRate@cfg3
  5213                           
  5214                           ;mcp2515_can.c: 468:                     break;
  5215     05FB  2FC5               	goto	l3165
  5216     05FC                     l3013:
  5217                           
  5218                           ;mcp2515_can.c: 471:                     cfg1 = (0x03);
  5219     05FC  3003               	movlw	3
  5220     05FD  00F9               	movwf	mcp2515_configRate@cfg1
  5221                           
  5222                           ;mcp2515_can.c: 472:                     cfg2 = (0xBE);
  5223     05FE  30BE               	movlw	190
  5224     05FF  00FA               	movwf	mcp2515_configRate@cfg2
  5225                           
  5226                           ;mcp2515_can.c: 473:                     cfg3 = (0x07);
  5227     0600  3007               	movlw	7
  5228     0601  00FB               	movwf	mcp2515_configRate@cfg3
  5229                           
  5230                           ;mcp2515_can.c: 474:                     break;
  5231     0602  2FC5               	goto	l3165
  5232     0603                     l3015:
  5233                           
  5234                           ;mcp2515_can.c: 477:                     cfg1 = (0x03);
  5235     0603  3003               	movlw	3
  5236     0604  00F9               	movwf	mcp2515_configRate@cfg1
  5237                           
  5238                           ;mcp2515_can.c: 478:                     cfg2 = (0xAD);
  5239     0605  30AD               	movlw	173
  5240     0606  00FA               	movwf	mcp2515_configRate@cfg2
  5241                           
  5242                           ;mcp2515_can.c: 479:                     cfg3 = (0x07);
  5243     0607  3007               	movlw	7
  5244     0608  00FB               	movwf	mcp2515_configRate@cfg3
  5245                           
  5246                           ;mcp2515_can.c: 480:                     break;
  5247     0609  2FC5               	goto	l3165
  5248     060A                     l3017:
  5249                           
  5250                           ;mcp2515_can.c: 483:                     cfg1 = (0x03);
  5251     060A  3003               	movlw	3
  5252     060B  00F9               	movwf	mcp2515_configRate@cfg1
  5253                           
  5254                           ;mcp2515_can.c: 484:                     cfg2 = (0xFA);
  5255     060C  30FA               	movlw	250
  5256     060D  00FA               	movwf	mcp2515_configRate@cfg2
  5257                           
  5258                           ;mcp2515_can.c: 485:                     cfg3 = (0x87);
  5259     060E  3087               	movlw	135
  5260     060F  00FB               	movwf	mcp2515_configRate@cfg3
  5261                           
  5262                           ;mcp2515_can.c: 486:                     break;
  5263     0610  2FC5               	goto	l3165
  5264     0611                     l3019:
  5265                           
  5266                           ;mcp2515_can.c: 489:                     cfg1 = (0x03);
  5267     0611  3003               	movlw	3
  5268     0612  00F9               	movwf	mcp2515_configRate@cfg1
  5269                           
  5270                           ;mcp2515_can.c: 490:                     cfg2 = (0xF0);
  5271     0613  30F0               	movlw	240
  5272     0614  00FA               	movwf	mcp2515_configRate@cfg2
  5273                           
  5274                           ;mcp2515_can.c: 491:                     cfg3 = (0x86);
  5275     0615  3086               	movlw	134
  5276     0616  00FB               	movwf	mcp2515_configRate@cfg3
  5277                           
  5278                           ;mcp2515_can.c: 492:                     break;
  5279     0617  2FC5               	goto	l3165
  5280     0618                     l240:	
  5281                           ;mcp2515_can.c: 494:                 case (CAN_200KBPS):
  5282                           
  5283                           
  5284                           ;mcp2515_can.c: 495:                     cfg1 = (0x01);
  5285     0618  01F9               	clrf	mcp2515_configRate@cfg1
  5286     0619  0AF9               	incf	mcp2515_configRate@cfg1,f
  5287     061A                     l3021:
  5288                           
  5289                           ;mcp2515_can.c: 496:                     cfg2 = (0xFA);
  5290     061A  30FA               	movlw	250
  5291     061B  00FA               	movwf	mcp2515_configRate@cfg2
  5292                           
  5293                           ;mcp2515_can.c: 497:                     cfg3 = (0x87);
  5294     061C  3087               	movlw	135
  5295     061D  00FB               	movwf	mcp2515_configRate@cfg3
  5296                           
  5297                           ;mcp2515_can.c: 498:                     break;
  5298     061E  2FC5               	goto	l3165
  5299     061F                     l3023:
  5300                           
  5301                           ;mcp2515_can.c: 501:                     cfg1 = (0x41);
  5302     061F  3041               	movlw	65
  5303     0620  00F9               	movwf	mcp2515_configRate@cfg1
  5304                           
  5305                           ;mcp2515_can.c: 502:                     cfg2 = (0xF1);
  5306     0621  30F1               	movlw	241
  5307     0622  00FA               	movwf	mcp2515_configRate@cfg2
  5308                           
  5309                           ;mcp2515_can.c: 503:                     cfg3 = (0x85);
  5310     0623  3085               	movlw	133
  5311     0624  00FB               	movwf	mcp2515_configRate@cfg3
  5312                           
  5313                           ;mcp2515_can.c: 504:                     break;
  5314     0625  2FC5               	goto	l3165
  5315     0626                     l3025:
  5316                           
  5317                           ;mcp2515_can.c: 507:                     cfg1 = (0x00);
  5318     0626  01F9               	clrf	mcp2515_configRate@cfg1
  5319     0627                     l3027:
  5320                           
  5321                           ;mcp2515_can.c: 508:                     cfg2 = (0xF0);
  5322     0627  30F0               	movlw	240
  5323     0628  00FA               	movwf	mcp2515_configRate@cfg2
  5324     0629                     l3029:
  5325                           
  5326                           ;mcp2515_can.c: 509:                     cfg3 = (0x86);
  5327     0629  3086               	movlw	134
  5328     062A  00FB               	movwf	mcp2515_configRate@cfg3
  5329                           
  5330                           ;mcp2515_can.c: 510:                     break;
  5331     062B  2FC5               	goto	l3165
  5332     062C                     l3031:
  5333                           
  5334                           ;mcp2515_can.c: 513:                     cfg1 = (0x00);
  5335     062C  01F9               	clrf	mcp2515_configRate@cfg1
  5336     062D                     l3033:
  5337                           
  5338                           ;mcp2515_can.c: 514:                     cfg2 = (0xA0);
  5339     062D  30A0               	movlw	160
  5340     062E  00FA               	movwf	mcp2515_configRate@cfg2
  5341     062F                     l3035:
  5342                           
  5343                           ;mcp2515_can.c: 515:                     cfg3 = (0x04);
  5344     062F  3004               	movlw	4
  5345     0630  00FB               	movwf	mcp2515_configRate@cfg3
  5346                           
  5347                           ;mcp2515_can.c: 516:                     break;
  5348     0631  2FC5               	goto	l3165
  5349     0632                     l3037:
  5350                           
  5351                           ;mcp2515_can.c: 519:                     cfg1 = (0x40);
  5352     0632  3040               	movlw	64
  5353     0633  00F9               	movwf	mcp2515_configRate@cfg1
  5354                           
  5355                           ;mcp2515_can.c: 520:                     cfg2 = (0x92);
  5356     0634  3092               	movlw	146
  5357     0635  00FA               	movwf	mcp2515_configRate@cfg2
  5358                           
  5359                           ;mcp2515_can.c: 521:                     cfg3 = (0x02);
  5360     0636  3002               	movlw	2
  5361     0637  00FB               	movwf	mcp2515_configRate@cfg3
  5362                           
  5363                           ;mcp2515_can.c: 522:                     break;
  5364     0638  2FC5               	goto	l3165
  5365     0639                     l3039:
  5366                           
  5367                           ;mcp2515_can.c: 525:                     cfg1 = (0x00);
  5368     0639  01F9               	clrf	mcp2515_configRate@cfg1
  5369     063A                     l3041:
  5370                           
  5371                           ;mcp2515_can.c: 526:                     cfg2 = (0xD0);
  5372     063A  30D0               	movlw	208
  5373     063B  00FA               	movwf	mcp2515_configRate@cfg2
  5374     063C                     l3043:
  5375                           
  5376                           ;mcp2515_can.c: 527:                     cfg3 = (0x82);
  5377     063C  3082               	movlw	130
  5378     063D  00FB               	movwf	mcp2515_configRate@cfg3
  5379                           
  5380                           ;mcp2515_can.c: 528:                     break;
  5381     063E  2FC5               	goto	l3165
  5382     063F                     l3045:
  5383                           
  5384                           ;mcp2515_can.c: 531:                     set = 0;
  5385     063F  01F7               	clrf	mcp2515_configRate@set
  5386                           
  5387                           ;mcp2515_can.c: 532:                     break;
  5388     0640  2FC5               	goto	l3165
  5389     0641                     l3049:
  5390     0641  0878               	movf	mcp2515_configRate@canSpeed,w
  5391     0642  00F5               	movwf	??_mcp2515_configRate
  5392     0643  01F6               	clrf	??_mcp2515_configRate+1
  5393                           
  5394                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5395                           ; Switch size 1, requested type "simple"
  5396                           ; Number of cases is 1, Range of values is 0 to 0
  5397                           ; switch strategies available:
  5398                           ; Name         Instructions Cycles
  5399                           ; simple_byte            4     3 (average)
  5400                           ; direct_byte           11     8 (fixed)
  5401                           ; jumptable            260     6 (fixed)
  5402                           ;	Chosen strategy is simple_byte
  5403     0644  0876               	movf	??_mcp2515_configRate+1,w
  5404     0645  3A00               	xorlw	0	; case 0
  5405     0646  1903               	skipnz
  5406     0647  2E49               	goto	l4249
  5407     0648  2E3F               	goto	l3045
  5408     0649                     l4249:
  5409                           
  5410                           ; Switch size 1, requested type "simple"
  5411                           ; Number of cases is 19, Range of values is 1 to 19
  5412                           ; switch strategies available:
  5413                           ; Name         Instructions Cycles
  5414                           ; simple_byte           58    30 (average)
  5415                           ; direct_byte           68    11 (fixed)
  5416                           ; jumptable            263     9 (fixed)
  5417                           ;	Chosen strategy is simple_byte
  5418     0649  0875               	movf	??_mcp2515_configRate,w
  5419     064A  3A01               	xorlw	1	; case 1
  5420     064B  1903               	skipnz
  5421     064C  2DBD               	goto	l2995
  5422     064D  3A03               	xorlw	3	; case 2
  5423     064E  1903               	skipnz
  5424     064F  2DC4               	goto	l2997
  5425     0650  3A01               	xorlw	1	; case 3
  5426     0651  1903               	skipnz
  5427     0652  2DCB               	goto	l2999
  5428     0653  3A07               	xorlw	7	; case 4
  5429     0654  1903               	skipnz
  5430     0655  2DD2               	goto	l3001
  5431     0656  3A01               	xorlw	1	; case 5
  5432     0657  1903               	skipnz
  5433     0658  2DD9               	goto	l3003
  5434     0659  3A03               	xorlw	3	; case 6
  5435     065A  1903               	skipnz
  5436     065B  2DE0               	goto	l3005
  5437     065C  3A01               	xorlw	1	; case 7
  5438     065D  1903               	skipnz
  5439     065E  2DE7               	goto	l3007
  5440     065F  3A0F               	xorlw	15	; case 8
  5441     0660  1903               	skipnz
  5442     0661  2DEE               	goto	l3009
  5443     0662  3A01               	xorlw	1	; case 9
  5444     0663  1903               	skipnz
  5445     0664  2DF5               	goto	l3011
  5446     0665  3A03               	xorlw	3	; case 10
  5447     0666  1903               	skipnz
  5448     0667  2DFC               	goto	l3013
  5449     0668  3A01               	xorlw	1	; case 11
  5450     0669  1903               	skipnz
  5451     066A  2E03               	goto	l3015
  5452     066B  3A07               	xorlw	7	; case 12
  5453     066C  1903               	skipnz
  5454     066D  2E0A               	goto	l3017
  5455     066E  3A01               	xorlw	1	; case 13
  5456     066F  1903               	skipnz
  5457     0670  2E11               	goto	l3019
  5458     0671  3A03               	xorlw	3	; case 14
  5459     0672  1903               	skipnz
  5460     0673  2E18               	goto	l240
  5461     0674  3A01               	xorlw	1	; case 15
  5462     0675  1903               	skipnz
  5463     0676  2E1F               	goto	l3023
  5464     0677  3A1F               	xorlw	31	; case 16
  5465     0678  1903               	skipnz
  5466     0679  2E26               	goto	l3025
  5467     067A  3A01               	xorlw	1	; case 17
  5468     067B  1903               	skipnz
  5469     067C  2E2C               	goto	l3031
  5470     067D  3A03               	xorlw	3	; case 18
  5471     067E  1903               	skipnz
  5472     067F  2E32               	goto	l3037
  5473     0680  3A01               	xorlw	1	; case 19
  5474     0681  1903               	skipnz
  5475     0682  2E39               	goto	l3039
  5476     0683  2E3F               	goto	l3045
  5477     0684                     l3051:
  5478                           
  5479                           ;mcp2515_can.c: 539:                     cfg1 = (0x0C);
  5480     0684  300C               	movlw	12
  5481     0685  00F9               	movwf	mcp2515_configRate@cfg1
  5482                           
  5483                           ;mcp2515_can.c: 540:                     cfg2 = (0xBF);
  5484     0686  30BF               	movlw	191
  5485     0687  00FA               	movwf	mcp2515_configRate@cfg2
  5486                           
  5487                           ;mcp2515_can.c: 541:                     cfg3 = (0x05);
  5488     0688  3005               	movlw	5
  5489     0689  00FB               	movwf	mcp2515_configRate@cfg3
  5490                           
  5491                           ;mcp2515_can.c: 542:                     break;
  5492     068A  2FC5               	goto	l3165
  5493     068B                     l3053:
  5494                           
  5495                           ;mcp2515_can.c: 545:                     cfg1 = (0X0B);
  5496     068B  300B               	movlw	11
  5497     068C  00F9               	movwf	mcp2515_configRate@cfg1
  5498                           
  5499                           ;mcp2515_can.c: 546:                     cfg2 = (0XB6);
  5500     068D  30B6               	movlw	182
  5501     068E  00FA               	movwf	mcp2515_configRate@cfg2
  5502                           
  5503                           ;mcp2515_can.c: 547:                     cfg3 = (0X04);
  5504     068F  3004               	movlw	4
  5505     0690  00FB               	movwf	mcp2515_configRate@cfg3
  5506                           
  5507                           ;mcp2515_can.c: 548:                     break;
  5508     0691  2FC5               	goto	l3165
  5509     0692                     l3055:
  5510                           
  5511                           ;mcp2515_can.c: 551:                     cfg1 = (0x0B);
  5512     0692  300B               	movlw	11
  5513     0693  00F9               	movwf	mcp2515_configRate@cfg1
  5514                           
  5515                           ;mcp2515_can.c: 552:                     cfg2 = (0xAC);
  5516     0694  30AC               	movlw	172
  5517     0695  00FA               	movwf	mcp2515_configRate@cfg2
  5518                           
  5519                           ;mcp2515_can.c: 553:                     cfg3 = (0x03);
  5520     0696  3003               	movlw	3
  5521     0697  00FB               	movwf	mcp2515_configRate@cfg3
  5522                           
  5523                           ;mcp2515_can.c: 554:                     break;
  5524     0698  2FC5               	goto	l3165
  5525     0699                     l3057:
  5526                           
  5527                           ;mcp2515_can.c: 557:                     cfg1 = (0x0C);
  5528     0699  300C               	movlw	12
  5529     069A  00F9               	movwf	mcp2515_configRate@cfg1
  5530                           
  5531                           ;mcp2515_can.c: 558:                     cfg2 = (0xA4);
  5532     069B  30A4               	movlw	164
  5533     069C  00FA               	movwf	mcp2515_configRate@cfg2
  5534                           
  5535                           ;mcp2515_can.c: 559:                     cfg3 = (0x02);
  5536     069D  3002               	movlw	2
  5537     069E  00FB               	movwf	mcp2515_configRate@cfg3
  5538                           
  5539                           ;mcp2515_can.c: 560:                     break;
  5540     069F  2FC5               	goto	l3165
  5541     06A0                     l3059:
  5542                           
  5543                           ;mcp2515_can.c: 563:                     cfg1 = (0x09);
  5544     06A0  3009               	movlw	9
  5545     06A1  00F9               	movwf	mcp2515_configRate@cfg1
  5546                           
  5547                           ;mcp2515_can.c: 564:                     cfg2 = (0xA4);
  5548     06A2  30A4               	movlw	164
  5549     06A3  00FA               	movwf	mcp2515_configRate@cfg2
  5550                           
  5551                           ;mcp2515_can.c: 565:                     cfg3 = (0x03);
  5552     06A4  3003               	movlw	3
  5553     06A5  00FB               	movwf	mcp2515_configRate@cfg3
  5554                           
  5555                           ;mcp2515_can.c: 566:                     break;
  5556     06A6  2FC5               	goto	l3165
  5557     06A7                     l3061:
  5558                           
  5559                           ;mcp2515_can.c: 569:                     cfg1 = (0x05);
  5560     06A7  3005               	movlw	5
  5561     06A8  00F9               	movwf	mcp2515_configRate@cfg1
  5562                           
  5563                           ;mcp2515_can.c: 570:                     cfg2 = (0xB6);
  5564     06A9  30B6               	movlw	182
  5565     06AA  00FA               	movwf	mcp2515_configRate@cfg2
  5566                           
  5567                           ;mcp2515_can.c: 571:                     cfg3 = (0x04);
  5568     06AB  3004               	movlw	4
  5569     06AC  00FB               	movwf	mcp2515_configRate@cfg3
  5570                           
  5571                           ;mcp2515_can.c: 572:                     break;
  5572     06AD  2FC5               	goto	l3165
  5573     06AE                     l3063:
  5574                           
  5575                           ;mcp2515_can.c: 575:                     cfg1 = (0x04);
  5576     06AE  3004               	movlw	4
  5577     06AF  00F9               	movwf	mcp2515_configRate@cfg1
  5578                           
  5579                           ;mcp2515_can.c: 576:                     cfg2 = (0xA4);
  5580     06B0  30A4               	movlw	164
  5581     06B1  00FA               	movwf	mcp2515_configRate@cfg2
  5582                           
  5583                           ;mcp2515_can.c: 577:                     cfg3 = (0x03);
  5584     06B2  3003               	movlw	3
  5585     06B3  00FB               	movwf	mcp2515_configRate@cfg3
  5586                           
  5587                           ;mcp2515_can.c: 578:                     break;
  5588     06B4  2FC5               	goto	l3165
  5589     06B5                     l3065:
  5590                           
  5591                           ;mcp2515_can.c: 581:                     cfg1 = (0x03);
  5592     06B5  3003               	movlw	3
  5593     06B6  00F9               	movwf	mcp2515_configRate@cfg1
  5594                           
  5595                           ;mcp2515_can.c: 582:                     cfg2 = (0xB5);
  5596     06B7  30B5               	movlw	181
  5597     06B8  00FA               	movwf	mcp2515_configRate@cfg2
  5598                           
  5599                           ;mcp2515_can.c: 583:                     cfg3 = (0x03);
  5600     06B9  3003               	movlw	3
  5601     06BA  00FB               	movwf	mcp2515_configRate@cfg3
  5602                           
  5603                           ;mcp2515_can.c: 584:                     break;
  5604     06BB  2FC5               	goto	l3165
  5605     06BC                     l3067:
  5606                           
  5607                           ;mcp2515_can.c: 587:                     cfg1 = (0x02);
  5608     06BC  3002               	movlw	2
  5609     06BD  00F9               	movwf	mcp2515_configRate@cfg1
  5610                           
  5611                           ;mcp2515_can.c: 588:                     cfg2 = (0xBE);
  5612     06BE  30BE               	movlw	190
  5613     06BF  00FA               	movwf	mcp2515_configRate@cfg2
  5614                           
  5615                           ;mcp2515_can.c: 589:                     cfg3 = (0x04);
  5616     06C0  3004               	movlw	4
  5617     06C1  00FB               	movwf	mcp2515_configRate@cfg3
  5618                           
  5619                           ;mcp2515_can.c: 590:                     break;
  5620     06C2  2FC5               	goto	l3165
  5621     06C3                     l3069:
  5622                           
  5623                           ;mcp2515_can.c: 593:                     cfg1 = (0x02);
  5624     06C3  3002               	movlw	2
  5625     06C4  00F9               	movwf	mcp2515_configRate@cfg1
  5626                           
  5627                           ;mcp2515_can.c: 594:                     cfg2 = (0xB6);
  5628     06C5  30B6               	movlw	182
  5629     06C6  00FA               	movwf	mcp2515_configRate@cfg2
  5630                           
  5631                           ;mcp2515_can.c: 595:                     cfg3 = (0x04);
  5632     06C7  3004               	movlw	4
  5633     06C8  00FB               	movwf	mcp2515_configRate@cfg3
  5634                           
  5635                           ;mcp2515_can.c: 596:                     break;
  5636     06C9  2FC5               	goto	l3165
  5637     06CA                     l261:	
  5638                           ;mcp2515_can.c: 598:                 case (CAN_125KBPS) :
  5639                           
  5640                           
  5641                           ;mcp2515_can.c: 599:                     cfg1 = (0x01);
  5642     06CA  01F9               	clrf	mcp2515_configRate@cfg1
  5643     06CB  0AF9               	incf	mcp2515_configRate@cfg1,f
  5644     06CC                     l3071:
  5645                           
  5646                           ;mcp2515_can.c: 600:                     cfg2 = (0xBF);
  5647     06CC  30BF               	movlw	191
  5648     06CD  00FA               	movwf	mcp2515_configRate@cfg2
  5649                           
  5650                           ;mcp2515_can.c: 601:                     cfg3 = (0x06);
  5651     06CE  3006               	movlw	6
  5652     06CF  00FB               	movwf	mcp2515_configRate@cfg3
  5653                           
  5654                           ;mcp2515_can.c: 602:                     break;
  5655     06D0  2FC5               	goto	l3165
  5656     06D1                     l262:	
  5657                           ;mcp2515_can.c: 604:                 case (CAN_200KBPS) :
  5658                           
  5659                           
  5660                           ;mcp2515_can.c: 605:                     cfg1 = (0x01);
  5661     06D1  01F9               	clrf	mcp2515_configRate@cfg1
  5662     06D2  0AF9               	incf	mcp2515_configRate@cfg1,f
  5663     06D3                     l3073:
  5664                           
  5665                           ;mcp2515_can.c: 606:                     cfg2 = (0xA4);
  5666     06D3  30A4               	movlw	164
  5667     06D4  00FA               	movwf	mcp2515_configRate@cfg2
  5668                           
  5669                           ;mcp2515_can.c: 607:                     cfg3 = (0x03);
  5670     06D5  3003               	movlw	3
  5671     06D6  00FB               	movwf	mcp2515_configRate@cfg3
  5672                           
  5673                           ;mcp2515_can.c: 608:                     break;
  5674     06D7  2FC5               	goto	l3165
  5675     06D8                     l3075:
  5676                           
  5677                           ;mcp2515_can.c: 611:                     cfg1 = (0x00);
  5678     06D8  01F9               	clrf	mcp2515_configRate@cfg1
  5679     06D9                     l3077:
  5680                           
  5681                           ;mcp2515_can.c: 612:                     cfg2 = (0xBF);
  5682     06D9  30BF               	movlw	191
  5683     06DA  00FA               	movwf	mcp2515_configRate@cfg2
  5684     06DB                     l3079:
  5685                           
  5686                           ;mcp2515_can.c: 613:                     cfg3 = (0x06);
  5687     06DB  3006               	movlw	6
  5688     06DC  00FB               	movwf	mcp2515_configRate@cfg3
  5689                           
  5690                           ;mcp2515_can.c: 614:                     break;
  5691     06DD  2FC5               	goto	l3165
  5692     06DE                     l3081:
  5693                           
  5694                           ;mcp2515_can.c: 617:                     cfg1 = (0x00);
  5695     06DE  01F9               	clrf	mcp2515_configRate@cfg1
  5696     06DF                     l3083:
  5697                           
  5698                           ;mcp2515_can.c: 618:                     cfg2 = (0x9B);
  5699     06DF  309B               	movlw	155
  5700     06E0  00FA               	movwf	mcp2515_configRate@cfg2
  5701     06E1                     l3085:
  5702                           
  5703                           ;mcp2515_can.c: 619:                     cfg3 = (0x02);
  5704     06E1  3002               	movlw	2
  5705     06E2  00FB               	movwf	mcp2515_configRate@cfg3
  5706                           
  5707                           ;mcp2515_can.c: 620:                     break;
  5708     06E3  2FC5               	goto	l3165
  5709     06E4                     l3087:
  5710                           
  5711                           ;mcp2515_can.c: 623:                     cfg1 = (0x00);
  5712     06E4  01F9               	clrf	mcp2515_configRate@cfg1
  5713     06E5                     l3089:
  5714                           
  5715                           ;mcp2515_can.c: 624:                     cfg2 = (0x92);
  5716     06E5  3092               	movlw	146
  5717     06E6  00FA               	movwf	mcp2515_configRate@cfg2
  5718     06E7                     l3091:
  5719                           
  5720                           ;mcp2515_can.c: 625:                     cfg3 = (0x01);
  5721     06E7  01FB               	clrf	mcp2515_configRate@cfg3
  5722     06E8  0AFB               	incf	mcp2515_configRate@cfg3,f
  5723                           
  5724                           ;mcp2515_can.c: 626:                     break;
  5725     06E9  2FC5               	goto	l3165
  5726     06EA                     l3093:
  5727                           
  5728                           ;mcp2515_can.c: 629:                     cfg1 = (0x00);
  5729     06EA  01F9               	clrf	mcp2515_configRate@cfg1
  5730     06EB                     l3095:
  5731                           
  5732                           ;mcp2515_can.c: 630:                     cfg2 = (0x88);
  5733     06EB  3088               	movlw	136
  5734     06EC  00FA               	movwf	mcp2515_configRate@cfg2
  5735     06ED  2EE7               	goto	l3091
  5736     06EE                     l3103:
  5737     06EE  0878               	movf	mcp2515_configRate@canSpeed,w
  5738     06EF  00F5               	movwf	??_mcp2515_configRate
  5739     06F0  01F6               	clrf	??_mcp2515_configRate+1
  5740                           
  5741                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5742                           ; Switch size 1, requested type "simple"
  5743                           ; Number of cases is 1, Range of values is 0 to 0
  5744                           ; switch strategies available:
  5745                           ; Name         Instructions Cycles
  5746                           ; simple_byte            4     3 (average)
  5747                           ; direct_byte           11     8 (fixed)
  5748                           ; jumptable            260     6 (fixed)
  5749                           ;	Chosen strategy is simple_byte
  5750     06F1  0876               	movf	??_mcp2515_configRate+1,w
  5751     06F2  3A00               	xorlw	0	; case 0
  5752     06F3  1903               	skipnz
  5753     06F4  2EF6               	goto	l4251
  5754     06F5  2E3F               	goto	l3045
  5755     06F6                     l4251:
  5756                           
  5757                           ; Switch size 1, requested type "simple"
  5758                           ; Number of cases is 16, Range of values is 3 to 19
  5759                           ; switch strategies available:
  5760                           ; Name         Instructions Cycles
  5761                           ; simple_byte           49    25 (average)
  5762                           ; direct_byte           62    11 (fixed)
  5763                           ; jumptable            263     9 (fixed)
  5764                           ;	Chosen strategy is simple_byte
  5765     06F6  0875               	movf	??_mcp2515_configRate,w
  5766     06F7  3A03               	xorlw	3	; case 3
  5767     06F8  1903               	skipnz
  5768     06F9  2E84               	goto	l3051
  5769     06FA  3A07               	xorlw	7	; case 4
  5770     06FB  1903               	skipnz
  5771     06FC  2E8B               	goto	l3053
  5772     06FD  3A01               	xorlw	1	; case 5
  5773     06FE  1903               	skipnz
  5774     06FF  2E92               	goto	l3055
  5775     0700  3A03               	xorlw	3	; case 6
  5776     0701  1903               	skipnz
  5777     0702  2E99               	goto	l3057
  5778     0703  3A01               	xorlw	1	; case 7
  5779     0704  1903               	skipnz
  5780     0705  2EA0               	goto	l3059
  5781     0706  3A0F               	xorlw	15	; case 8
  5782     0707  1903               	skipnz
  5783     0708  2EA7               	goto	l3061
  5784     0709  3A01               	xorlw	1	; case 9
  5785     070A  1903               	skipnz
  5786     070B  2EAE               	goto	l3063
  5787     070C  3A03               	xorlw	3	; case 10
  5788     070D  1903               	skipnz
  5789     070E  2EB5               	goto	l3065
  5790     070F  3A01               	xorlw	1	; case 11
  5791     0710  1903               	skipnz
  5792     0711  2EBC               	goto	l3067
  5793     0712  3A07               	xorlw	7	; case 12
  5794     0713  1903               	skipnz
  5795     0714  2EC3               	goto	l3069
  5796     0715  3A01               	xorlw	1	; case 13
  5797     0716  1903               	skipnz
  5798     0717  2ECA               	goto	l261
  5799     0718  3A03               	xorlw	3	; case 14
  5800     0719  1903               	skipnz
  5801     071A  2ED1               	goto	l262
  5802     071B  3A01               	xorlw	1	; case 15
  5803     071C  1903               	skipnz
  5804     071D  2ED8               	goto	l3075
  5805     071E  3A1F               	xorlw	31	; case 16
  5806     071F  1903               	skipnz
  5807     0720  2EDE               	goto	l3081
  5808     0721  3A01               	xorlw	1	; case 17
  5809     0722  1903               	skipnz
  5810     0723  2EE4               	goto	l3087
  5811     0724  3A02               	xorlw	2	; case 19
  5812     0725  1903               	skipnz
  5813     0726  2EEA               	goto	l3093
  5814     0727  2E3F               	goto	l3045
  5815     0728                     l3105:
  5816                           
  5817                           ;mcp2515_can.c: 642:                     cfg1 = (0x1f);
  5818     0728  301F               	movlw	31
  5819     0729  00F9               	movwf	mcp2515_configRate@cfg1
  5820                           
  5821                           ;mcp2515_can.c: 643:                     cfg2 = (0xbf);
  5822     072A  30BF               	movlw	191
  5823     072B  00FA               	movwf	mcp2515_configRate@cfg2
  5824                           
  5825                           ;mcp2515_can.c: 644:                     cfg3 = (0x07);
  5826     072C  3007               	movlw	7
  5827     072D  00FB               	movwf	mcp2515_configRate@cfg3
  5828                           
  5829                           ;mcp2515_can.c: 645:                     break;
  5830     072E  2FC5               	goto	l3165
  5831     072F                     l3107:
  5832                           
  5833                           ;mcp2515_can.c: 648:                     cfg1 = (0x0f);
  5834     072F  300F               	movlw	15
  5835     0730  00F9               	movwf	mcp2515_configRate@cfg1
  5836                           
  5837                           ;mcp2515_can.c: 649:                     cfg2 = (0xbf);
  5838     0731  30BF               	movlw	191
  5839     0732  00FA               	movwf	mcp2515_configRate@cfg2
  5840                           
  5841                           ;mcp2515_can.c: 650:                     cfg3 = (0x07);
  5842     0733  3007               	movlw	7
  5843     0734  00FB               	movwf	mcp2515_configRate@cfg3
  5844                           
  5845                           ;mcp2515_can.c: 651:                     break;
  5846     0735  2FC5               	goto	l3165
  5847     0736                     l3109:
  5848                           
  5849                           ;mcp2515_can.c: 654:                     cfg1 = (0x07);
  5850     0736  3007               	movlw	7
  5851     0737  00F9               	movwf	mcp2515_configRate@cfg1
  5852                           
  5853                           ;mcp2515_can.c: 655:                     cfg2 = (0xbf);
  5854     0738  30BF               	movlw	191
  5855     0739  00FA               	movwf	mcp2515_configRate@cfg2
  5856                           
  5857                           ;mcp2515_can.c: 656:                     cfg3 = (0x07);
  5858     073A  3007               	movlw	7
  5859     073B  00FB               	movwf	mcp2515_configRate@cfg3
  5860                           
  5861                           ;mcp2515_can.c: 657:                     break;
  5862     073C  2FC5               	goto	l3165
  5863     073D                     l3111:
  5864                           
  5865                           ;mcp2515_can.c: 660:                     cfg1 = (0x07);
  5866     073D  3007               	movlw	7
  5867     073E  00F9               	movwf	mcp2515_configRate@cfg1
  5868                           
  5869                           ;mcp2515_can.c: 661:                     cfg2 = (0xa4);
  5870     073F  30A4               	movlw	164
  5871     0740  00FA               	movwf	mcp2515_configRate@cfg2
  5872                           
  5873                           ;mcp2515_can.c: 662:                     cfg3 = (0x04);
  5874     0741  3004               	movlw	4
  5875     0742  00FB               	movwf	mcp2515_configRate@cfg3
  5876                           
  5877                           ;mcp2515_can.c: 663:                     break;
  5878     0743  2FC5               	goto	l3165
  5879     0744                     l3113:
  5880                           
  5881                           ;mcp2515_can.c: 666:                     cfg1 = (0x03);
  5882     0744  3003               	movlw	3
  5883     0745  00F9               	movwf	mcp2515_configRate@cfg1
  5884                           
  5885                           ;mcp2515_can.c: 667:                     cfg2 = (0xbf);
  5886     0746  30BF               	movlw	191
  5887     0747  00FA               	movwf	mcp2515_configRate@cfg2
  5888                           
  5889                           ;mcp2515_can.c: 668:                     cfg3 = (0x07);
  5890     0748  3007               	movlw	7
  5891     0749  00FB               	movwf	mcp2515_configRate@cfg3
  5892                           
  5893                           ;mcp2515_can.c: 669:                     break;
  5894     074A  2FC5               	goto	l3165
  5895     074B                     l3115:
  5896                           
  5897                           ;mcp2515_can.c: 672:                     cfg1 = (0x03);
  5898     074B  3003               	movlw	3
  5899     074C  00F9               	movwf	mcp2515_configRate@cfg1
  5900                           
  5901                           ;mcp2515_can.c: 673:                     cfg2 = (0xb4);
  5902     074D  30B4               	movlw	180
  5903     074E  00FA               	movwf	mcp2515_configRate@cfg2
  5904                           
  5905                           ;mcp2515_can.c: 674:                     cfg3 = (0x06);
  5906     074F  3006               	movlw	6
  5907     0750  00FB               	movwf	mcp2515_configRate@cfg3
  5908                           
  5909                           ;mcp2515_can.c: 675:                     break;
  5910     0751  2FC5               	goto	l3165
  5911     0752                     l277:	
  5912                           ;mcp2515_can.c: 677:                 case (CAN_80KBPS) :
  5913                           
  5914                           
  5915                           ;mcp2515_can.c: 678:                     cfg1 = (0x01);
  5916     0752  01F9               	clrf	mcp2515_configRate@cfg1
  5917     0753  0AF9               	incf	mcp2515_configRate@cfg1,f
  5918     0754                     l3117:
  5919                           
  5920                           ;mcp2515_can.c: 679:                     cfg2 = (0xbf);
  5921     0754  30BF               	movlw	191
  5922     0755  00FA               	movwf	mcp2515_configRate@cfg2
  5923                           
  5924                           ;mcp2515_can.c: 680:                     cfg3 = (0x07);
  5925     0756  3007               	movlw	7
  5926     0757  00FB               	movwf	mcp2515_configRate@cfg3
  5927                           
  5928                           ;mcp2515_can.c: 681:                     break;
  5929     0758  2FC5               	goto	l3165
  5930     0759                     l278:	
  5931                           ;mcp2515_can.c: 683:                 case (CAN_100KBPS) :
  5932                           
  5933                           
  5934                           ;mcp2515_can.c: 684:                     cfg1 = (0x01);
  5935     0759  01F9               	clrf	mcp2515_configRate@cfg1
  5936     075A  0AF9               	incf	mcp2515_configRate@cfg1,f
  5937     075B                     l3119:
  5938                           
  5939                           ;mcp2515_can.c: 685:                     cfg2 = (0xb4);
  5940     075B  30B4               	movlw	180
  5941     075C  00FA               	movwf	mcp2515_configRate@cfg2
  5942                           
  5943                           ;mcp2515_can.c: 686:                     cfg3 = (0x06);
  5944     075D  3006               	movlw	6
  5945     075E  00FB               	movwf	mcp2515_configRate@cfg3
  5946                           
  5947                           ;mcp2515_can.c: 687:                     break;
  5948     075F  2FC5               	goto	l3165
  5949     0760                     l279:	
  5950                           ;mcp2515_can.c: 689:                 case (CAN_125KBPS) :
  5951                           
  5952                           
  5953                           ;mcp2515_can.c: 690:                     cfg1 = (0x01);
  5954     0760  01F9               	clrf	mcp2515_configRate@cfg1
  5955     0761  0AF9               	incf	mcp2515_configRate@cfg1,f
  5956     0762                     l3121:
  5957                           
  5958                           ;mcp2515_can.c: 691:                     cfg2 = (0xb1);
  5959     0762  30B1               	movlw	177
  5960     0763  00FA               	movwf	mcp2515_configRate@cfg2
  5961                           
  5962                           ;mcp2515_can.c: 692:                     cfg3 = (0x05);
  5963     0764  3005               	movlw	5
  5964     0765  00FB               	movwf	mcp2515_configRate@cfg3
  5965                           
  5966                           ;mcp2515_can.c: 693:                     break;
  5967     0766  2FC5               	goto	l3165
  5968     0767                     l3123:
  5969                           
  5970                           ;mcp2515_can.c: 696:                     cfg1 = (0x00);
  5971     0767  01F9               	clrf	mcp2515_configRate@cfg1
  5972     0768                     l3125:
  5973                           
  5974                           ;mcp2515_can.c: 697:                     cfg2 = (0xb4);
  5975     0768  30B4               	movlw	180
  5976     0769  00FA               	movwf	mcp2515_configRate@cfg2
  5977     076A  2EDB               	goto	l3079
  5978     076B                     l3129:
  5979                           
  5980                           ;mcp2515_can.c: 702:                     cfg1 = (0x00);
  5981     076B  01F9               	clrf	mcp2515_configRate@cfg1
  5982     076C                     l3131:
  5983                           
  5984                           ;mcp2515_can.c: 703:                     cfg2 = (0xb1);
  5985     076C  30B1               	movlw	177
  5986     076D  00FA               	movwf	mcp2515_configRate@cfg2
  5987     076E                     l3133:
  5988                           
  5989                           ;mcp2515_can.c: 704:                     cfg3 = (0x05);
  5990     076E  3005               	movlw	5
  5991     076F  00FB               	movwf	mcp2515_configRate@cfg3
  5992                           
  5993                           ;mcp2515_can.c: 705:                     break;
  5994     0770  2FC5               	goto	l3165
  5995     0771                     l3135:
  5996                           
  5997                           ;mcp2515_can.c: 708:                     cfg1 = (0x00);
  5998     0771  01F9               	clrf	mcp2515_configRate@cfg1
  5999     0772                     l3137:
  6000                           
  6001                           ;mcp2515_can.c: 709:                     cfg2 = (0x90);
  6002     0772  3090               	movlw	144
  6003     0773  00FA               	movwf	mcp2515_configRate@cfg2
  6004     0774  2EE1               	goto	l3085
  6005     0775                     l3141:
  6006                           
  6007                           ;mcp2515_can.c: 714:                     cfg1 = (0x00);
  6008     0775  01F9               	clrf	mcp2515_configRate@cfg1
  6009     0776                     l3143:
  6010                           
  6011                           ;mcp2515_can.c: 715:                     cfg2 = (0x80);
  6012     0776  3080               	movlw	128
  6013     0777  00FA               	movwf	mcp2515_configRate@cfg2
  6014     0778  2EE7               	goto	l3091
  6015     0779                     l3147:
  6016                           
  6017                           ;mcp2515_can.c: 720:                     cfg1 = (0x00);
  6018     0779  01F9               	clrf	mcp2515_configRate@cfg1
  6019     077A                     l3149:
  6020                           
  6021                           ;mcp2515_can.c: 721:                     cfg2 = (0x80);
  6022     077A  3080               	movlw	128
  6023     077B  00FA               	movwf	mcp2515_configRate@cfg2
  6024     077C                     l3151:
  6025                           
  6026                           ;mcp2515_can.c: 722:                     cfg3 = (0x00);
  6027     077C  01FB               	clrf	mcp2515_configRate@cfg3
  6028                           
  6029                           ;mcp2515_can.c: 723:                     break;
  6030     077D  2FC5               	goto	l3165
  6031     077E                     l3157:
  6032     077E  0878               	movf	mcp2515_configRate@canSpeed,w
  6033     077F  00F5               	movwf	??_mcp2515_configRate
  6034     0780  01F6               	clrf	??_mcp2515_configRate+1
  6035                           
  6036                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6037                           ; Switch size 1, requested type "simple"
  6038                           ; Number of cases is 1, Range of values is 0 to 0
  6039                           ; switch strategies available:
  6040                           ; Name         Instructions Cycles
  6041                           ; simple_byte            4     3 (average)
  6042                           ; direct_byte           11     8 (fixed)
  6043                           ; jumptable            260     6 (fixed)
  6044                           ;	Chosen strategy is simple_byte
  6045     0781  0876               	movf	??_mcp2515_configRate+1,w
  6046     0782  3A00               	xorlw	0	; case 0
  6047     0783  1903               	skipnz
  6048     0784  2F86               	goto	l4253
  6049     0785  2E3F               	goto	l3045
  6050     0786                     l4253:
  6051                           
  6052                           ; Switch size 1, requested type "simple"
  6053                           ; Number of cases is 14, Range of values is 1 to 19
  6054                           ; switch strategies available:
  6055                           ; Name         Instructions Cycles
  6056                           ; simple_byte           43    22 (average)
  6057                           ; direct_byte           68    11 (fixed)
  6058                           ; jumptable            263     9 (fixed)
  6059                           ;	Chosen strategy is simple_byte
  6060     0786  0875               	movf	??_mcp2515_configRate,w
  6061     0787  3A01               	xorlw	1	; case 1
  6062     0788  1903               	skipnz
  6063     0789  2F28               	goto	l3105
  6064     078A  3A03               	xorlw	3	; case 2
  6065     078B  1903               	skipnz
  6066     078C  2F2F               	goto	l3107
  6067     078D  3A01               	xorlw	1	; case 3
  6068     078E  1903               	skipnz
  6069     078F  2F36               	goto	l3109
  6070     0790  3A06               	xorlw	6	; case 5
  6071     0791  1903               	skipnz
  6072     0792  2F3D               	goto	l3111
  6073     0793  3A02               	xorlw	2	; case 7
  6074     0794  1903               	skipnz
  6075     0795  2F44               	goto	l3113
  6076     0796  3A0F               	xorlw	15	; case 8
  6077     0797  1903               	skipnz
  6078     0798  2F4B               	goto	l3115
  6079     0799  3A01               	xorlw	1	; case 9
  6080     079A  1903               	skipnz
  6081     079B  2F52               	goto	l277
  6082     079C  3A05               	xorlw	5	; case 12
  6083     079D  1903               	skipnz
  6084     079E  2F59               	goto	l278
  6085     079F  3A01               	xorlw	1	; case 13
  6086     07A0  1903               	skipnz
  6087     07A1  2F60               	goto	l279
  6088     07A2  3A03               	xorlw	3	; case 14
  6089     07A3  1903               	skipnz
  6090     07A4  2F67               	goto	l3123
  6091     07A5  3A01               	xorlw	1	; case 15
  6092     07A6  1903               	skipnz
  6093     07A7  2F6B               	goto	l3129
  6094     07A8  3A1F               	xorlw	31	; case 16
  6095     07A9  1903               	skipnz
  6096     07AA  2F71               	goto	l3135
  6097     07AB  3A02               	xorlw	2	; case 18
  6098     07AC  1903               	skipnz
  6099     07AD  2F75               	goto	l3141
  6100     07AE  3A01               	xorlw	1	; case 19
  6101     07AF  1903               	skipnz
  6102     07B0  2F79               	goto	l3147
  6103     07B1  2E3F               	goto	l3045
  6104     07B2                     l3163:
  6105     07B2  0874               	movf	mcp2515_configRate@clock,w
  6106     07B3  00F5               	movwf	??_mcp2515_configRate
  6107     07B4  01F6               	clrf	??_mcp2515_configRate+1
  6108                           
  6109                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6110                           ; Switch size 1, requested type "simple"
  6111                           ; Number of cases is 1, Range of values is 0 to 0
  6112                           ; switch strategies available:
  6113                           ; Name         Instructions Cycles
  6114                           ; simple_byte            4     3 (average)
  6115                           ; direct_byte           11     8 (fixed)
  6116                           ; jumptable            260     6 (fixed)
  6117                           ;	Chosen strategy is simple_byte
  6118     07B5  0876               	movf	??_mcp2515_configRate+1,w
  6119     07B6  3A00               	xorlw	0	; case 0
  6120     07B7  1903               	skipnz
  6121     07B8  2FBA               	goto	l4255
  6122     07B9  2E3F               	goto	l3045
  6123     07BA                     l4255:
  6124                           
  6125                           ; Switch size 1, requested type "simple"
  6126                           ; Number of cases is 3, Range of values is 1 to 3
  6127                           ; switch strategies available:
  6128                           ; Name         Instructions Cycles
  6129                           ; simple_byte           10     6 (average)
  6130                           ; direct_byte           20    11 (fixed)
  6131                           ; jumptable            263     9 (fixed)
  6132                           ;	Chosen strategy is simple_byte
  6133     07BA  0875               	movf	??_mcp2515_configRate,w
  6134     07BB  3A01               	xorlw	1	; case 1
  6135     07BC  1903               	skipnz
  6136     07BD  2E41               	goto	l3049
  6137     07BE  3A03               	xorlw	3	; case 2
  6138     07BF  1903               	skipnz
  6139     07C0  2EEE               	goto	l3103
  6140     07C1  3A01               	xorlw	1	; case 3
  6141     07C2  1903               	skipnz
  6142     07C3  2F7E               	goto	l3157
  6143     07C4  2E3F               	goto	l3045
  6144     07C5                     l3165:
  6145                           
  6146                           ;mcp2515_can.c: 736:     if (set) {
  6147     07C5  0877               	movf	mcp2515_configRate@set,w
  6148     07C6  1903               	btfsc	3,2
  6149     07C7  2FC9               	goto	u1221
  6150     07C8  2FCA               	goto	u1220
  6151     07C9                     u1221:
  6152     07C9  2FE4               	goto	l3175
  6153     07CA                     u1220:
  6154     07CA                     l3167:
  6155                           
  6156                           ;mcp2515_can.c: 737:         mcp2515_setRegister(0x2A, cfg1);
  6157     07CA  0879               	movf	mcp2515_configRate@cfg1,w
  6158     07CB  00F2               	movwf	mcp2515_setRegister@value
  6159     07CC  302A               	movlw	42
  6160     07CD  120A  158A  2657  120A  118A  	fcall	_mcp2515_setRegister
  6161                           
  6162                           ;mcp2515_can.c: 738:         mcp2515_setRegister(0x29, cfg2);
  6163     07D2  087A               	movf	mcp2515_configRate@cfg2,w
  6164     07D3  00F2               	movwf	mcp2515_setRegister@value
  6165     07D4  3029               	movlw	41
  6166     07D5  120A  158A  2657  120A  118A  	fcall	_mcp2515_setRegister
  6167                           
  6168                           ;mcp2515_can.c: 739:         mcp2515_setRegister(0x28, cfg3);
  6169     07DA  087B               	movf	mcp2515_configRate@cfg3,w
  6170     07DB  00F2               	movwf	mcp2515_setRegister@value
  6171     07DC  3028               	movlw	40
  6172     07DD  120A  158A  2657  120A  118A  	fcall	_mcp2515_setRegister
  6173     07E2                     l3169:
  6174                           
  6175                           ;mcp2515_can.c: 740:         return (0);
  6176     07E2  3000               	movlw	0
  6177     07E3  2FE5               	goto	l288
  6178     07E4                     l3175:
  6179                           
  6180                           ;mcp2515_can.c: 742:         return (1);
  6181     07E4  3001               	movlw	1
  6182     07E5                     l288:
  6183     07E5  0008               	return
  6184     07E6                     __end_of_mcp2515_configRate:
  6185                           
  6186                           	psect	text32
  6187     0E57                     __ptext32:	
  6188 ;; *************** function _mcp2515_setRegister *****************
  6189 ;; Defined at:
  6190 ;;		line 216 in file "mcp2515_can.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;  address         1    wreg     const unsigned char 
  6193 ;;  value           1    1[COMMON] const unsigned char 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  address         1    2[COMMON] const unsigned char 
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  1    wreg      void 
  6198 ;; Registers used:
  6199 ;;		wreg, status,2, status,0, pclath, cstack
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6205 ;;      Params:         1       0       0       0       0
  6206 ;;      Locals:         1       0       0       0       0
  6207 ;;      Temps:          0       0       0       0       0
  6208 ;;      Totals:         2       0       0       0       0
  6209 ;;Total ram usage:        2 bytes
  6210 ;; Hardware stack levels used: 1
  6211 ;; Hardware stack levels required when called: 1
  6212 ;; This function calls:
  6213 ;;		_WriteSPI
  6214 ;; This function is called by:
  6215 ;;		_mcp2515_configRate
  6216 ;;		_mcp2515_initCANBuffers
  6217 ;;		_mcp2515_init
  6218 ;;		_enableTxInterrupt
  6219 ;; This function uses a non-reentrant model
  6220 ;;
  6221                           
  6222     0E57                     _mcp2515_setRegister:	
  6223                           ;psect for function _mcp2515_setRegister
  6224                           
  6225                           
  6226                           ;incstack = 0
  6227                           ; Regs used in _mcp2515_setRegister: [wreg+status,2+status,0+pclath+cstack]
  6228                           ;mcp2515_setRegister@address stored from wreg
  6229     0E57  00F3               	movwf	mcp2515_setRegister@address
  6230     0E58                     l2911:
  6231                           
  6232                           ;mcp2515_can.c: 220:     RD0 = 0;;
  6233     0E58  1283               	bcf	3,5	;RP0=0, select bank0
  6234     0E59  1303               	bcf	3,6	;RP1=0, select bank0
  6235     0E5A  1008               	bcf	8,0	;volatile
  6236     0E5B                     l2913:
  6237                           
  6238                           ;mcp2515_can.c: 221:     WriteSPI(0x02);
  6239     0E5B  3002               	movlw	2
  6240     0E5C  120A  158A  25B5  120A  158A  	fcall	_WriteSPI
  6241                           
  6242                           ;mcp2515_can.c: 222:     WriteSPI(address);
  6243     0E61  0873               	movf	mcp2515_setRegister@address,w
  6244     0E62  120A  158A  25B5  120A  158A  	fcall	_WriteSPI
  6245                           
  6246                           ;mcp2515_can.c: 223:     WriteSPI(value);
  6247     0E67  0872               	movf	mcp2515_setRegister@value,w
  6248     0E68  120A  158A  25B5  120A  158A  	fcall	_WriteSPI
  6249     0E6D                     l2915:
  6250                           
  6251                           ;mcp2515_can.c: 224:     RD0 = 1;;
  6252     0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  6253     0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  6254     0E6F  1408               	bsf	8,0	;volatile
  6255     0E70                     l168:
  6256     0E70  0008               	return
  6257     0E71                     __end_of_mcp2515_setRegister:
  6258                           
  6259                           	psect	text33
  6260     0DB5                     __ptext33:	
  6261 ;; *************** function _WriteSPI *****************
  6262 ;; Defined at:
  6263 ;;		line 192 in file "spi16.c"
  6264 ;; Parameters:    Size  Location     Type
  6265 ;;  data_out        1    wreg     unsigned char 
  6266 ;; Auto vars:     Size  Location     Type
  6267 ;;  data_out        1    0[COMMON] unsigned char 
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  1    wreg      unsigned char 
  6270 ;; Registers used:
  6271 ;;		wreg
  6272 ;; Tracked objects:
  6273 ;;		On entry : 0/0
  6274 ;;		On exit  : 0/0
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6277 ;;      Params:         0       0       0       0       0
  6278 ;;      Locals:         1       0       0       0       0
  6279 ;;      Temps:          0       0       0       0       0
  6280 ;;      Totals:         1       0       0       0       0
  6281 ;;Total ram usage:        1 bytes
  6282 ;; Hardware stack levels used: 1
  6283 ;; This function calls:
  6284 ;;		Nothing
  6285 ;; This function is called by:
  6286 ;;		_mcp2515_reset
  6287 ;;		_mcp2515_readRegister
  6288 ;;		_mcp2515_setRegister
  6289 ;;		_mcp2515_modifyRegister
  6290 ;;		_mcp2515_readStatus
  6291 ;;		_mcp2515_write_canMsg
  6292 ;;		_mcp2515_read_canMsg
  6293 ;;		_mcp2515_start_transmit
  6294 ;;		_mcp2515_readRegisterS
  6295 ;;		_mcp2515_setRegisterS
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299     0DB5                     _WriteSPI:	
  6300                           ;psect for function _WriteSPI
  6301                           
  6302                           
  6303                           ;incstack = 0
  6304                           ; Regs used in _WriteSPI: [wreg]
  6305                           ;WriteSPI@data_out stored from wreg
  6306     0DB5  00F1               	movwf	WriteSPI@data_out
  6307     0DB6                     l2721:
  6308                           
  6309                           ;spi16.c: 192: unsigned char WriteSPI( unsigned char data_out );spi16.c: 193: {;spi16.c:
      +                           194:     SSPBUF = data_out;
  6310     0DB6  0871               	movf	WriteSPI@data_out,w
  6311     0DB7  1283               	bcf	3,5	;RP0=0, select bank0
  6312     0DB8  1303               	bcf	3,6	;RP1=0, select bank0
  6313     0DB9  0093               	movwf	19	;volatile
  6314     0DBA                     l2723:
  6315                           
  6316                           ;spi16.c: 195:     if ( WCOL )
  6317     0DBA  1F94               	btfss	20,7	;volatile
  6318     0DBB  2DBD               	goto	u1061
  6319     0DBC  2DBE               	goto	u1060
  6320     0DBD                     u1061:
  6321     0DBD  2DBF               	goto	l607
  6322     0DBE                     u1060:
  6323     0DBE  2DC5               	goto	l605
  6324     0DBF                     l607:
  6325     0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  6326     0DC0  1303               	bcf	3,6	;RP1=0, select bank1
  6327     0DC1  1C14               	btfss	20,0	;volatile
  6328     0DC2  2DC4               	goto	u1071
  6329     0DC3  2DC5               	goto	u1070
  6330     0DC4                     u1071:
  6331     0DC4  2DBF               	goto	l607
  6332     0DC5                     u1070:
  6333     0DC5                     l605:
  6334     0DC5  0008               	return
  6335     0DC6                     __end_of_WriteSPI:
  6336                           
  6337                           	psect	text34
  6338     00CE                     __ptext34:	
  6339 ;; *************** function _OpenSPI *****************
  6340 ;; Defined at:
  6341 ;;		line 106 in file "spi16.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;  sync_mode       1    wreg     unsigned char 
  6344 ;;  bus_mode        1    0[COMMON] unsigned char 
  6345 ;;  smp_phase       1    1[COMMON] unsigned char 
  6346 ;; Auto vars:     Size  Location     Type
  6347 ;;  sync_mode       1    4[COMMON] unsigned char 
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  1    wreg      void 
  6350 ;; Registers used:
  6351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6357 ;;      Params:         2       0       0       0       0
  6358 ;;      Locals:         1       0       0       0       0
  6359 ;;      Temps:          2       0       0       0       0
  6360 ;;      Totals:         5       0       0       0       0
  6361 ;;Total ram usage:        5 bytes
  6362 ;; Hardware stack levels used: 1
  6363 ;; This function calls:
  6364 ;;		Nothing
  6365 ;; This function is called by:
  6366 ;;		_begin
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370     00CE                     _OpenSPI:	
  6371                           ;psect for function _OpenSPI
  6372                           
  6373                           
  6374                           ;incstack = 0
  6375                           ; Regs used in _OpenSPI: [wreg-fsr0h+status,2+status,0+btemp+1]
  6376                           ;OpenSPI@sync_mode stored from wreg
  6377     00CE  00F5               	movwf	OpenSPI@sync_mode
  6378     00CF                     l3437:
  6379     00CF  1683               	bsf	3,5	;RP0=1, select bank1
  6380     00D0  1303               	bcf	3,6	;RP1=0, select bank1
  6381     00D1  0194               	clrf	20	;volatile
  6382     00D2  1283               	bcf	3,5	;RP0=0, select bank0
  6383     00D3  1303               	bcf	3,6	;RP1=0, select bank0
  6384     00D4  0194               	clrf	20	;volatile
  6385     00D5                     l3439:
  6386     00D5  0875               	movf	OpenSPI@sync_mode,w	;volatile
  6387     00D6  00FF               	movwf	btemp+1
  6388     00D7  087F               	movf	btemp+1,w
  6389     00D8  0494               	iorwf	20,f	;volatile
  6390     00D9                     l3441:
  6391     00D9  1872               	btfsc	OpenSPI@smp_phase,0
  6392     00DA  28DC               	goto	u1561
  6393     00DB  28DF               	goto	u1560
  6394     00DC                     u1561:
  6395     00DC  1683               	bsf	3,5	;RP0=1, select bank1
  6396     00DD  1303               	bcf	3,6	;RP1=0, select bank1
  6397     00DE  1794               	bsf	20,7	;volatile
  6398     00DF                     u1560:
  6399     00DF  28F5               	goto	l3445
  6400     00E0                     l585:
  6401     00E0  1683               	bsf	3,5	;RP0=1, select bank1
  6402     00E1  1303               	bcf	3,6	;RP1=0, select bank1
  6403     00E2  1714               	bsf	20,6	;volatile
  6404     00E3  1283               	bcf	3,5	;RP0=0, select bank0
  6405     00E4  1303               	bcf	3,6	;RP1=0, select bank0
  6406     00E5  1214               	bcf	20,4	;volatile
  6407     00E6  2914               	goto	l3449
  6408     00E7                     l587:
  6409     00E7  1683               	bsf	3,5	;RP0=1, select bank1
  6410     00E8  1303               	bcf	3,6	;RP1=0, select bank1
  6411     00E9  1714               	bsf	20,6	;volatile
  6412     00EA  1283               	bcf	3,5	;RP0=0, select bank0
  6413     00EB  1303               	bcf	3,6	;RP1=0, select bank0
  6414     00EC  1614               	bsf	20,4	;volatile
  6415     00ED  2914               	goto	l3449
  6416     00EE                     l588:
  6417     00EE  1683               	bsf	3,5	;RP0=1, select bank1
  6418     00EF  1303               	bcf	3,6	;RP1=0, select bank1
  6419     00F0  1314               	bcf	20,6	;volatile
  6420     00F1  1283               	bcf	3,5	;RP0=0, select bank0
  6421     00F2  1303               	bcf	3,6	;RP1=0, select bank0
  6422     00F3  1614               	bsf	20,4	;volatile
  6423     00F4  2914               	goto	l3449
  6424     00F5                     l3445:
  6425     00F5  0871               	movf	OpenSPI@bus_mode,w
  6426     00F6  00F3               	movwf	??_OpenSPI
  6427     00F7  01F4               	clrf	??_OpenSPI+1
  6428                           
  6429                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6430                           ; Switch size 1, requested type "simple"
  6431                           ; Number of cases is 1, Range of values is 0 to 0
  6432                           ; switch strategies available:
  6433                           ; Name         Instructions Cycles
  6434                           ; simple_byte            4     3 (average)
  6435                           ; direct_byte           11     8 (fixed)
  6436                           ; jumptable            260     6 (fixed)
  6437                           ;	Chosen strategy is simple_byte
  6438     00F8  0874               	movf	??_OpenSPI+1,w
  6439     00F9  3A00               	xorlw	0	; case 0
  6440     00FA  1903               	skipnz
  6441     00FB  28FD               	goto	l4257
  6442     00FC  2914               	goto	l3449
  6443     00FD                     l4257:
  6444                           
  6445                           ; Switch size 1, requested type "simple"
  6446                           ; Number of cases is 3, Range of values is 0 to 3
  6447                           ; switch strategies available:
  6448                           ; Name         Instructions Cycles
  6449                           ; simple_byte           10     6 (average)
  6450                           ; direct_byte           20     8 (fixed)
  6451                           ; jumptable            260     6 (fixed)
  6452                           ;	Chosen strategy is simple_byte
  6453     00FD  0873               	movf	??_OpenSPI,w
  6454     00FE  3A00               	xorlw	0	; case 0
  6455     00FF  1903               	skipnz
  6456     0100  28E0               	goto	l585
  6457     0101  3A02               	xorlw	2	; case 2
  6458     0102  1903               	skipnz
  6459     0103  28E7               	goto	l587
  6460     0104  3A01               	xorlw	1	; case 3
  6461     0105  1903               	skipnz
  6462     0106  28EE               	goto	l588
  6463     0107  2914               	goto	l3449
  6464     0108                     l591:
  6465     0108  1683               	bsf	3,5	;RP0=1, select bank1
  6466     0109  1303               	bcf	3,6	;RP1=0, select bank1
  6467     010A  1685               	bsf	5,5	;volatile
  6468     010B                     l592:
  6469     010B  1683               	bsf	3,5	;RP0=1, select bank1
  6470     010C  1303               	bcf	3,6	;RP1=0, select bank1
  6471     010D  1587               	bsf	7,3	;volatile
  6472     010E  1394               	bcf	20,7	;volatile
  6473     010F  2924               	goto	l593
  6474     0110                     l594:
  6475     0110  1683               	bsf	3,5	;RP0=1, select bank1
  6476     0111  1303               	bcf	3,6	;RP1=0, select bank1
  6477     0112  1187               	bcf	7,3	;volatile
  6478     0113  2924               	goto	l593
  6479     0114                     l3449:
  6480     0114  0875               	movf	OpenSPI@sync_mode,w
  6481     0115  00F3               	movwf	??_OpenSPI
  6482     0116  01F4               	clrf	??_OpenSPI+1
  6483                           
  6484                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6485                           ; Switch size 1, requested type "simple"
  6486                           ; Number of cases is 1, Range of values is 0 to 0
  6487                           ; switch strategies available:
  6488                           ; Name         Instructions Cycles
  6489                           ; simple_byte            4     3 (average)
  6490                           ; direct_byte           11     8 (fixed)
  6491                           ; jumptable            260     6 (fixed)
  6492                           ;	Chosen strategy is simple_byte
  6493     0117  0874               	movf	??_OpenSPI+1,w
  6494     0118  3A00               	xorlw	0	; case 0
  6495     0119  1903               	skipnz
  6496     011A  291C               	goto	l4259
  6497     011B  2910               	goto	l594
  6498     011C                     l4259:
  6499                           
  6500                           ; Switch size 1, requested type "simple"
  6501                           ; Number of cases is 2, Range of values is 4 to 5
  6502                           ; switch strategies available:
  6503                           ; Name         Instructions Cycles
  6504                           ; simple_byte            7     4 (average)
  6505                           ; direct_byte           17    11 (fixed)
  6506                           ; jumptable            263     9 (fixed)
  6507                           ;	Chosen strategy is simple_byte
  6508     011C  0873               	movf	??_OpenSPI,w
  6509     011D  3A04               	xorlw	4	; case 4
  6510     011E  1903               	skipnz
  6511     011F  2908               	goto	l591
  6512     0120  3A01               	xorlw	1	; case 5
  6513     0121  1903               	skipnz
  6514     0122  290B               	goto	l592
  6515     0123  2910               	goto	l594
  6516     0124                     l593:
  6517     0124  1287               	bcf	7,5	;volatile
  6518     0125  1607               	bsf	7,4	;volatile
  6519     0126  1283               	bcf	3,5	;RP0=0, select bank0
  6520     0127  1303               	bcf	3,6	;RP1=0, select bank0
  6521     0128  1694               	bsf	20,5	;volatile
  6522     0129                     l595:
  6523     0129  0008               	return
  6524     012A                     __end_of_OpenSPI:
  6525     007E                     btemp	set	126	;btemp
  6526     007E                     wtemp0	set	126
  6527                           
  6528                           	psect	config
  6529                           
  6530                           ;Config register CONFIG @ 0x2007
  6531                           ;	Oscillator Selection bits
  6532                           ;	FOSC = HS, HS oscillator
  6533                           ;	Watchdog Timer Enable bit
  6534                           ;	WDTE = OFF, WDT disabled
  6535                           ;	Power-up Timer Enable bit
  6536                           ;	PWRTE = 0x1, unprogrammed default
  6537                           ;	Brown-out Reset Enable bit
  6538                           ;	BOREN = 0x1, unprogrammed default
  6539                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  6540                           ;	LVP = 0x1, unprogrammed default
  6541                           ;	Data EEPROM Memory Code Protection bit
  6542                           ;	CPD = OFF, Data EEPROM code protection off
  6543                           ;	Flash Program Memory Write Enable bits
  6544                           ;	WRT = 0x3, unprogrammed default
  6545                           ;	In-Circuit Debugger Mode bit
  6546                           ;	DEBUG = 0x1, unprogrammed default
  6547                           ;	Flash Program Memory Code Protection bit
  6548                           ;	CP = OFF, Code protection off
  6549     2007                     	org	8199
  6550     2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     13      13
    BANK0            80     61      77
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    mcp2515_getNextFreeTXBuf@txbuf_n	PTR unsigned char  size(1) Largest target is 1
		 -> sendMsg@txbuf_n(BANK0[1]), trySendMsgBuf@txbuf_n(COMMON[1]), 

    mcp2515_id_to_buf@tbufdata	PTR unsigned char  size(1) Largest target is 4
		 -> mcp2515_write_canMsg@tbufdata(BANK0[4]), mcp2515_write_id@tbufdata(COMMON[4]), 

    mcp2515_read_canMsg@buf	PTR volatile unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    mcp2515_read_canMsg@ext	PTR volatile unsigned char  size(1) Largest target is 1
		 -> ext_flg(BANK0[1]), 

    mcp2515_read_canMsg@id	PTR volatile unsigned long  size(1) Largest target is 4
		 -> can_id(BANK0[4]), 

    mcp2515_read_canMsg@len	PTR volatile unsigned char  size(1) Largest target is 1
		 -> main@len(BANK0[1]), 

    mcp2515_read_canMsg@rtrBit	PTR volatile unsigned char  size(1) Largest target is 1
		 -> rtr(BANK0[1]), 

    mcp2515_write_canMsg@buf	PTR  unsigned char  size(1) Largest target is 8
		 -> stmp(BANK0[8]), 

    readMsgBuf@buf	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    readMsgBuf@len	PTR unsigned char  size(1) Largest target is 1
		 -> main@len(BANK0[1]), 

    readMsgBufID@buf	PTR volatile unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    readMsgBufID@ext	PTR volatile unsigned char  size(1) Largest target is 1
		 -> ext_flg(BANK0[1]), 

    readMsgBufID@id	PTR volatile unsigned long  size(1) Largest target is 4
		 -> can_id(BANK0[4]), 

    readMsgBufID@len	PTR volatile unsigned char  size(1) Largest target is 1
		 -> main@len(BANK0[1]), 

    readMsgBufID@rtrBit	PTR volatile unsigned char  size(1) Largest target is 1
		 -> rtr(BANK0[1]), 

    sendMsg@buf	PTR const unsigned char  size(1) Largest target is 8
		 -> stmp(BANK0[8]), 

    sendMsgBuf@buf	PTR const unsigned char  size(1) Largest target is 8
		 -> stmp(BANK0[8]), 


Critical Paths under _main in COMMON

    _sendMsg->_mcp2515_write_canMsg
    _mcp2515_write_canMsg->_mcp2515_id_to_buf
    _mcp2515_start_transmit->_txSidhToRTS
    _mcp2515_getNextFreeTXBuf->_mcp2515_modifyRegister
    _readRxTxStatus->_mcp2515_readStatus
    _readMsgBufID->_mcp2515_read_canMsg
    _mcp2515_read_canMsg->_WriteSPI
    _checkReceive->_mcp2515_readStatus
    _mcp2515_readStatus->_WriteSPI
    _mcp2515_init->_mcp2515_setCANCTRL_Mode
    _setMode->_mcp2515_setCANCTRL_Mode
    _mcp2515_setCANCTRL_Mode->_mcp2515_requestNewMode
    _mcp2515_requestNewMode->_mcp2515_modifyRegister
    _mcp2515_modifyRegister->_txIfFlag
    _getMode->_mcp2515_readRegister
    _mcp2515_readRegister->_WriteSPI
    _mcp2515_reset->_WriteSPI
    _mcp2515_initCANBuffers->_mcp2515_setRegister
    _mcp2515_configRate->_mcp2515_setRegister
    _mcp2515_setRegister->_WriteSPI

Critical Paths under _main in BANK0

    _main->_sendMsgBuf
    _sendMsgBuf->_sendMsg
    _sendMsg->_mcp2515_write_canMsg
    _readMsgBuf->_readMsgBufID
    _readMsgBufID->_mcp2515_read_canMsg
    _begin->_mcp2515_init
    _mcp2515_init->_setMode

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   37883
                                             43 BANK0     18    18      0
                              _begin
                       _checkReceive
                           _getCanId
                            _init_CS
                         _readMsgBuf
                         _sendMsgBuf
 ---------------------------------------------------------------------------------
 (1) _sendMsgBuf                                           9     0      9    8727
                                             34 BANK0      9     0      9
                            _sendMsg
 ---------------------------------------------------------------------------------
 (2) _sendMsg                                             16     7      9    8139
                                             18 BANK0     16     7      9
           _mcp2515_getNextFreeTXBuf
               _mcp2515_readRegister
               _mcp2515_write_canMsg
 ---------------------------------------------------------------------------------
 (3) _mcp2515_write_canMsg                                19    11      8    2443
                                             12 COMMON     1     1      0
                                              0 BANK0     18    10      8
                           _WriteSPI
                  _mcp2515_id_to_buf
             _mcp2515_start_transmit
                     _txSidhToTxLoad
 ---------------------------------------------------------------------------------
 (4) _txSidhToTxLoad                                       3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _mcp2515_start_transmit                               1     1      0      66
                                              3 COMMON     1     1      0
                           _WriteSPI
                        _txSidhToRTS
 ---------------------------------------------------------------------------------
 (5) _txSidhToRTS                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _mcp2515_id_to_buf                                   12     7      5     746
                                              0 COMMON    12     7      5
 ---------------------------------------------------------------------------------
 (3) _mcp2515_getNextFreeTXBuf                             3     3      0    4700
                                              6 COMMON     3     3      0
             _mcp2515_modifyRegister
                 _mcp2515_readStatus
                          _txCtrlReg
                           _txIfFlag
                _txStatusPendingFlag
 ---------------------------------------------------------------------------------
 (4) _txStatusPendingFlag                                  3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _txIfFlag                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _txCtrlReg                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _readMsgBuf                                           2     1      1    2593
                                             16 BANK0      2     1      1
                       _readMsgBufID
                     _readRxTxStatus
 ---------------------------------------------------------------------------------
 (2) _readRxTxStatus                                       7     7      0     229
                                              2 COMMON     7     7      0
                 _mcp2515_readStatus
 ---------------------------------------------------------------------------------
 (2) _readMsgBufID                                         7     2      5    2211
                                              9 BANK0      7     2      5
                _mcp2515_read_canMsg
                     _readRxTxStatus (ARG)
 ---------------------------------------------------------------------------------
 (3) _mcp2515_read_canMsg                                 21    16      5    1432
                                              1 COMMON    12     7      5
                                              0 BANK0      9     9      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (1) _init_CS                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getCanId                                             4     0      4       0
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _checkReceive                                         3     3      0      92
                                              2 COMMON     3     3      0
                 _mcp2515_readStatus
 ---------------------------------------------------------------------------------
 (4) _mcp2515_readStatus                                   1     1      0      45
                                              1 COMMON     1     1      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (1) _begin                                                6     1      5   26305
                                              6 BANK0      6     1      5
                            _OpenSPI
                       _mcp2515_init
 ---------------------------------------------------------------------------------
 (2) _mcp2515_init                                         5     4      1   25846
                                              1 BANK0      5     4      1
                 _mcp2515_configRate
             _mcp2515_initCANBuffers
             _mcp2515_modifyRegister
                      _mcp2515_reset
            _mcp2515_setCANCTRL_Mode
                _mcp2515_setRegister
                            _setMode
 ---------------------------------------------------------------------------------
 (3) _setMode                                              1     1      0    9135
                                              0 BANK0      1     1      0
            _mcp2515_setCANCTRL_Mode
 ---------------------------------------------------------------------------------
 (4) _mcp2515_setCANCTRL_Mode                              2     2      0    9069
                                             11 COMMON     2     2      0
                            _getMode
             _mcp2515_modifyRegister
               _mcp2515_readRegister
             _mcp2515_requestNewMode
 ---------------------------------------------------------------------------------
 (5) _mcp2515_requestNewMode                               5     5      0    4502
                                              6 COMMON     5     5      0
             _mcp2515_modifyRegister
               _mcp2515_readRegister
 ---------------------------------------------------------------------------------
 (4) _mcp2515_modifyRegister                               3     1      2    4344
                                              3 COMMON     3     1      2
                           _WriteSPI
                           _txIfFlag (ARG)
 ---------------------------------------------------------------------------------
 (5) _getMode                                              0     0      0      67
               _mcp2515_readRegister
 ---------------------------------------------------------------------------------
 (3) _mcp2515_readRegister                                 2     2      0      67
                                              1 COMMON     2     2      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _mcp2515_reset                                        2     2      0      22
                                              1 COMMON     2     2      0
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _mcp2515_initCANBuffers                               4     4      0     944
                                              3 COMMON     4     4      0
                _mcp2515_setRegister
 ---------------------------------------------------------------------------------
 (3) _mcp2515_configRate                                   8     7      1    1230
                                              3 COMMON     8     7      1
                _mcp2515_setRegister
 ---------------------------------------------------------------------------------
 (3) _mcp2515_setRegister                                  2     1      1     826
                                              1 COMMON     2     1      1
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (5) _WriteSPI                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenSPI                                              5     3      2     240
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _begin
     _OpenSPI
     _mcp2515_init
       _mcp2515_configRate
         _mcp2515_setRegister
           _WriteSPI
       _mcp2515_initCANBuffers
         _mcp2515_setRegister
       _mcp2515_modifyRegister
         _WriteSPI
         _txIfFlag (ARG)
       _mcp2515_reset
         _WriteSPI
       _mcp2515_setCANCTRL_Mode
         _getMode
           _mcp2515_readRegister
             _ReadSPI
             _WriteSPI
         _mcp2515_modifyRegister
         _mcp2515_readRegister
         _mcp2515_requestNewMode
           _mcp2515_modifyRegister
           _mcp2515_readRegister
       _mcp2515_setRegister
       _setMode
         _mcp2515_setCANCTRL_Mode
   _checkReceive
     _mcp2515_readStatus
       _ReadSPI
       _WriteSPI
   _getCanId
   _init_CS
   _readMsgBuf
     _readMsgBufID
       _mcp2515_read_canMsg
         _ReadSPI
         _WriteSPI
       _readRxTxStatus (ARG)
         _mcp2515_readStatus
     _readRxTxStatus
   _sendMsgBuf
     _sendMsg
       _mcp2515_getNextFreeTXBuf
         _mcp2515_modifyRegister
         _mcp2515_readStatus
         _txCtrlReg
         _txIfFlag
         _txStatusPendingFlag
       _mcp2515_readRegister
       _mcp2515_write_canMsg
         _WriteSPI
         _mcp2515_id_to_buf
         _mcp2515_start_transmit
           _WriteSPI
           _txSidhToRTS
         _txSidhToTxLoad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      0       0       9        0.0%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3D      4D       5       96.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      D       D       1      100.0%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5A      12        0.0%
ABS                  0      0      5A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Jan 01 01:11:14 2024

                 __end_of_checkReceive 0E3F                                      pc 0002  
                                   _BF 04A0                                     l15 0D97  
                                   l51 000F                                     l61 0460  
                                   l63 0458                                     l48 0E56  
                        begin@clockset 002A                                     fsr 0004  
                 ??_mcp2515_configRate 0075                     _mcp2515_readStatus 0DFE  
                                  l100 0EC1                                    l200 0DD7  
                                  l203 0D9F                                    l300 0307  
                                  l140 0EDE                                    l124 0F18  
                                  l132 0F35                                    l206 0177  
                                  l215 0FBE                                    l207 0152  
                                  l240 0618                                    l209 0186  
                                  l154 0E27                                    l306 0201  
                                  l148 0EFB                                    l261 06CA  
                                  l157 0EA5                                    l341 0DEA  
                                  l262 06D1                                    l326 0277  
                                  l406 03AE                                    l351 0079  
                                  l327 027E                                    l168 0E70  
                                  l176 002F                                    l424 00CD  
                                  l416 0E8A                                    l601 0DB4  
                                  l337 05B5                                    l409 0381  
                                  l338 05B8                                    l179 0E11  
                                  l419 0097                                    l605 0DC5  
                                  l277 0752                                    l278 0759  
                                  l294 0FFF                                    l358 0F53  
                                  l462 0E3D                                    l607 0DBF  
                                  l279 0760                                    l463 0E3E  
                                  l439 0F83                                    l288 07E5  
                                  l298 030A                                    l591 0108  
                                  l592 010B                                    l593 0124  
                                  l585 00E0                                    l594 0110  
                                  l595 0129                                    l587 00E7  
                                  l588 00EE                                    l598 0DAB  
                                  _CKE 04A6                                    _CKP 00A4  
                                  _RD0 0040                                    _RD3 0043  
                                  _SMP 04A7                                    fsr0 0004  
                                  _rtr 0063                                    indf 0000  
                  ?_mcp2515_readStatus 0071                    _mcp2515_read_canMsg 0471  
                                 l3001 05D2                                   l3011 05F5  
                                 l3003 05D9                                   l3021 061A  
                                 l3013 05FC                                   l3005 05E0  
                                 l3111 073D                                   l3103 06EE  
                                 l3031 062C                                   l3023 061F  
                                 l3015 0603                                   l3007 05E7  
                                 l3121 0762                                   l3113 0744  
                                 l3105 0728                                   l3041 063A  
                                 l3033 062D                                   l3025 0626  
                                 l3017 060A                                   l3009 05EE  
                                 l3131 076C                                   l3123 0767  
                                 l3115 074B                                   l3107 072F  
                                 l3051 0684                                   l3043 063C  
                                 l3035 062F                                   l3027 0627  
                                 l3019 0611                                   l3211 0FE7  
                                 l3203 0FC6                                   l3141 0775  
                                 l3133 076E                                   l3125 0768  
                                 l3117 0754                                   l3109 0736  
                                 l3061 06A7                                   l3053 068B  
                                 l3045 063F                                   l3037 0632  
                                 l3029 0629                                   l3213 0FEB  
                                 l3205 0FDB                                   l3301 0031  
                                 l3221 0213                                   l3151 077C  
                                 l3143 0776                                   l3135 0771  
                                 l3119 075B                                   l3071 06CC  
                                 l3063 06AE                                   l3055 0692  
                                 l3039 0639                                   l3215 0FF1  
                                 l3207 0FDF                                   l3311 0044  
                                 l3303 0038                                   l3231 0230  
                                 l3223 0216                                   l3137 0772  
                                 l3129 076B                                   l3081 06DE  
                                 l3073 06D3                                   l3065 06B5  
                                 l3057 0699                                   l3049 0641  
                                 l3209 0FE3                                   l3401 0295  
                                 l3313 0046                                   l3305 003C  
                                 l3241 0243                                   l3233 0236  
                                 l3225 021A                                   l3217 0205  
                                 l3147 0779                                   l3091 06E7  
                                 l3083 06DF                                   l3075 06D8  
                                 l3067 06BC                                   l3059 06A0  
                                 l3163 07B2                                   l3331 0F54  
                                 l3315 0051                                   l3323 006E  
                                 l3307 0042                                   l3251 0265  
                                 l3243 0249                                   l3227 021D  
                                 l3219 020E                                   l3157 077E  
                                 l3149 077A                                   l3093 06EA  
                                 l3085 06E1                                   l3077 06D9  
                                 l3069 06C3                                   l3165 07C5  
                                 l3421 02DB                                   l3413 02BD  
                                 l3405 02A3                                   l3261 0475  
                                 l3341 0F6A                                   l3333 0F5B  
                                 l3317 005E                                   l3325 0072  
                                 l3253 026B                                   l3245 024F  
                                 l3229 022D                                   l3501 039B  
                                 l3167 07CA                                   l3175 07E4  
                                 l3095 06EB                                   l3087 06E4  
                                 l3079 06DB                                   l3423 02E5  
                                 l3415 02C7                                   l3407 02AD  
                                 l3271 0485                                   l3263 047B  
                                 l3351 0F7C                                   l3343 0F6D  
                                 l3335 0F5F                                   l3319 006C  
                                 l3255 0271                                   l3247 0255  
                                 l3239 0239                                   l3503 03A4  
                                 l3441 00D9                                   l2721 0DB6  
                                 l3169 07E2                                   l3089 06E5  
                                 l3433 02FD                                   l3425 02EE  
                                 l3417 02CE                                   l3513 0D91  
                                 l3281 04CB                                   l3273 0489  
                                 l3361 0083                                   l3353 0F82  
                                 l3345 0F71                                   l3337 0F62  
                                 l4241 0F0C                                   l3257 0278  
                                 l3249 0259                                   l3505 03AB  
                                 l3601 0434                                   l2723 0DBA  
                                 l4251 06F6                                   l3195 0FBF  
                                 l2731 0DB1                                   l3427 02F7  
                                 l3419 02D3                                   l3523 0F36  
                                 l3291 0593                                   l3283 057A  
                                 l3275 048F                                   l3259 0472  
                                 l3371 00B1                                   l3363 0093  
                                 l3347 0F75                                   l3339 0F66  
                                 l3515 0E42                                   l4243 0EEF  
                                 l3603 0440                                   l3445 00F5  
                                 l3437 00CF                                   l4253 0786  
                                 l3197 0FC5                                   l2741 0EA1  
                                 l2805 0FB0                                   l3525 0F4C  
                                 l3533 0E28                                   l3293 0595  
                                 l3285 057E                                   l3277 04C4  
                                 l3269 047C                                   l3373 00C8  
                                 l3365 009B                                   l3357 007D  
                                 l3349 0F78                                   l2813 0EAA  
                                 l4245 0ED2                                   l2901 0EE7  
                                 l3509 03AD                                   l3461 030F  
                                 l3605 0441                                   l3439 00D5  
                                 l2911 0E58                                   l4255 07BA  
                                 l2743 0EA4                                   l2735 0E8C  
                                 l2751 002C                                   l3535 0E2E  
                                 l3519 0005                                   l3295 05A3  
                                 l3287 0584                                   l3279 04C7  
                                 l3375 00CC                                   l3359 007F  
                                 l4247 0EB6                                   l2823 0EAE  
                                 l2807 0EA7                                   l2903 0EFA  
                                 l4239 0F29                                   l3471 032B  
                                 l3463 0317                                   l3607 044B  
                                 l4257 00FD                                   l3449 0114  
                                 l2913 0E5B                                   l4249 0649  
                                 l2729 0DA8                                   l2737 0E8F  
                                 l2921 0E07                                   l3537 0E34  
                                 l3297 05A7                                   l3289 058A  
                                 l3369 00AC                                   l2817 0EAC  
                                 l2809 0EA8                                   l2753 0EFD  
                                 l2833 0F1A                                   l3481 0350  
                                 l3473 0334                                   l3465 0319  
                                 l3529 0E71                                   l4259 011C  
                                 l2915 0E6D                                   l2739 0E9B  
                                 l2747 0011                                   l2931 0135  
                                 l3395 0282                                   l2923 0E0D  
                                 l3539 0E39                                   l3299 05AF  
                                 l2771 0F17                                   l2763 0F02  
                                 l2755 0EFE                                   l2851 0F34  
                                 l2843 0F1F                                   l2835 0F1B  
                                 l3491 0371                                   l3475 033A  
                                 l3467 031B                                   l3459 030B  
                                 l2749 0014                                   l2941 0167  
                                 l2933 013B                                   l3397 0287  
                                 l2925 0E10                                   l2917 0DFE  
                                 l2861 0EC4                                   l3493 0377  
                                 l3485 0352                                   l3477 0340  
                                 l3469 0321                                   l3581 03BB  
                                 l2791 0F9F                                   l2783 0F85  
                                 l2935 0143                                   l3399 0290  
                                 l2919 0E01                                   l2759 0F00  
                                 l2839 0F1D                                   l3495 0389  
                                 l3487 0368                                   l3479 0349  
                                 l3591 0403                                   l3583 03C5  
                                 l2785 0F87                                   l2945 0169  
                                 l2937 0148                                   l2929 012B  
                                 l2865 0EC6                                   l2961 01B1  
                                 l2953 0188                                   l2769 0F04  
                                 l2849 0F21                                   l3497 0393  
                                 l3489 036F                                   l3593 040D  
                                 l3585 03DB                                   l3577 03AF  
                                 l2779 0D98                                   l2787 0F91  
                                 l2947 016E                                   l2939 015C  
                                 l2875 0ECA                                   l2859 0EC3  
                                 l2891 0EE3                                   l2963 01B6  
                                 l2955 018C                                   l2971 0DD9  
                                 l3499 0396                                   l3595 0417  
                                 l3587 03F2                                   l3579 03B5  
                                 l2981 0E1B                                   l2797 0FA1  
                                 l2789 0F98                                   l2949 0180  
                                 l2877 0EDD                                   l2869 0EC8  
                                 l2885 0EE0                                   l2965 01C6  
                                 l2957 0191                                   l2973 0DDC  
                                 l3597 0426                                   l3589 0400  
                                 l2983 0E1E                                   l2799 0FAE  
                                 l2895 0EE5                                   l2887 0EE1  
                                 l2967 01C9                                   l2959 019C  
                                 l2975 0DE7                                   l3599 0429  
             ??_mcp2515_requestNewMode 0077                                   l2993 05BA  
                                 l2977 0E12                                   l2985 0DC9  
                                 l2969 01D9                                   l2995 05BD  
                                 l2979 0E15                                   l2987 0DCF  
                                 l2997 05C4                                   l2989 0DD1  
                                 l2999 05CB                                   u1100 0FAE  
                                 u1101 0FAD                                   u1110 0135  
                                 u1111 0134                                   u1120 013B  
                                 u1105 0FAA                                   u1121 013A  
                                 u1130 0148                                   u1210 0DCF  
                                 u1131 0147                                   u1211 0DCE  
                                 u1060 0DBE                                   u1220 07CA  
                                 u1140 0167                                   u1300 04CB  
                                 u1061 0DBD                                   u1221 07C9  
                                 u1141 0166                                   u1301 04CA  
                                 u1205 01F1                                   u1070 0DC5  
                                 u1230 0FF1                                   u1150 016E  
                                 u1310 04E4                                   u1071 0DC4  
                                 u1231 0FF0                                   u1151 016D  
                                 u1080 0DB1                                   u1400 05B5  
                                 u1320 04EE                                   u1160 0191  
                                 u1240 0213                                   u1081 0DB0  
                                 u1401 05B4                                   u1321 04EF  
                                 u1161 0190                                   u1241 0212  
                                 u1090 0F9F                                   u1330 051E  
                                 u1322 04F4                                   u1410 0042  
                                 u1170 01AA                                   u1250 024F  
                                 u1091 0F9E                                   u1323 04F5  
                                 u1315 04DF                                   u1411 0041  
                                 u1251 024E                                   u2107 03C1  
                                 u1340 0528                                   u1420 0051  
                                 u1260 0271                                   u1341 0529  
                                 u1421 0050                                   u1261 0270  
                                 u2117 03FA                                   u1350 0558  
                                 u1342 052E                                   u1430 0078  
                                 u1270 0277                                   u2207 0FB2  
                                 u1343 052F                                   u1335 0519  
                                 u1431 0077                                   u1175 01A5  
                                 u1271 0276                                   u2127 0447  
                                 u1520 0295                                   u1360 0562  
                                 u1280 048F                                   u1440 0F5F  
                                 u1600 0350                                   u2217 0E22  
                                 u1521 0294                                   u1361 0563  
                                 u1281 048E                                   u1441 0F5E  
                                 u1185 01BA                                   u1601 034F  
                                 u2137 0454                                   u1530 02BC  
                                 u1370 0591                                   u1362 0568  
                                 u1450 0F6A                                   u1610 036F  
                                 u1531 02BB                                   u1371 058F  
                                 u1363 0569                                   u1355 0553  
                                 u1451 0F69                                   u1195 01D0  
                                 u1611 036E                                   u2147 0327  
                                 u1540 02CE                                   u1380 0592  
                                 u1460 0F75                                   u1620 0377  
                                 u1541 02CD                                   u1461 0F74  
                                 u2157 037D                                   u1621 0376  
                                 u1550 02FC                                   u1390 05AF  
                                 u1470 0083                                   u1630 039B  
                                 u1551 02FB                                   u2167 029B  
                                 u1391 05AE                                   u1295 0494  
                                 u1471 0082                                   u1631 039A  
                                 u1560 00DF                                   u1480 009B  
                                 u1640 03A4                                   u1561 00DC  
                                 u2177 02A9                                   u1481 009A  
                                 u1641 03A3                                   u1490 00B1  
                                 u1650 03AB                                   u1570 0321  
                                 u1730 03DB                                   u2187 02C3  
                                 u1491 00B0                                   u1651 03AA  
                                 u1571 0320                                   u1731 03DA  
                                 u1660 0F52                                   u1580 0340  
                                 u1740 040D                                   u2197 0303  
                                 u1661 0F50                                   u1581 033F  
                                 u1741 040C                                   u1670 0F53  
                                 u1590 0349                                   u1750 0434  
                                 u1591 0348                                   u1751 0433  
                                 u1680 0E34                                   u1760 0440  
                                 u1681 0E33                                   u1761 043F  
                                 u1770 046D                                   u1771 046C  
                                 u1775 0469                          begin@speedset 0026  
                                 _WCOL 00A7                ?_mcp2515_initCANBuffers 0071  
                                 _main 03AF                                   btemp 007E  
                                 _stmp 0065                                   start 0001  
                 _mcp2515_readRegister 0E8B                   ??_mcp2515_readStatus 0072  
                 ?_mcp2515_read_canMsg 0072                        __end_of_ReadSPI 0DB5  
                      __end_of_OpenSPI 012A                                  ?_main 0071  
                                _SSPEN 00A5                        __end_of_getMode 0DA0  
                                _begin 0F36                        __end_of_init_CS 0D98  
                                main@i 005A         __end_of_mcp2515_initCANBuffers 1000  
                      __end_of_sendMsg 03AF                        __end_of_setMode 0DD8  
                  _mcp2515_setRegister 0E57                                  pclath 000A  
          __end_of_txStatusPendingFlag 0EFC                                  status 0003  
        mcp2515_modifyRegister@address 0076                                  wtemp0 007E  
                ?_mcp2515_readRegister 0071                    mcp2515_id_to_buf@id 0071  
                      __initialization 07E6                  ??_mcp2515_read_canMsg 0020  
                         __end_of_main 0471                   ?_mcp2515_setRegister 0072  
                      readMsgBufID@buf 002D                        readMsgBufID@len 002C  
                               ??_main 004B                        readMsgBufID@ext 002A  
                        ?_readMsgBufID 0029                 mcp2515_write_canMsg@id 0020  
                               ?_begin 0026                ?_mcp2515_start_transmit 0071  
              _mcp2515_setCANCTRL_Mode 012A                       __end_of_WriteSPI 0DC6  
        mcp2515_write_canMsg@load_addr 002A                                 _TRISA5 042D  
                               _TRISD0 0440                                 _TRISC3 043B  
                               _TRISC4 043C                                 _TRISC5 043D  
                               _SSPCON 0014                                 _SSPBUF 0013  
                            ??_ReadSPI 0071             mcp2515_modifyRegister@data 0075  
                     __end_of_getCanId 0010             mcp2515_modifyRegister@mask 0074  
                            ??_OpenSPI 0073                           _mcp2515_init 027F  
                               _can_id 005F                  ??_mcp2515_setRegister 0073  
                     ??_txSidhToTxLoad 0071                              ??_getMode 0074  
           ??_mcp2515_getNextFreeTXBuf 0077                       __end_of_txIfFlag 0EDF  
                       ??_readMsgBufID 007E                              ??_init_CS 0071  
                   readMsgBufID@rtrBit 002B                     readMsgBufID@status 002E  
                            ??_sendMsg 003B                              ??_setMode 007E  
       __end_of_mcp2515_start_transmit 0DEB            mcp2515_requestNewMode@Count 0078  
      mcp2515_getNextFreeTXBuf@txbuf_n 0078                           _checkReceive 0E28  
           mcp2515_configRate@canSpeed 0078                           ?_txSidhToRTS 0071  
                 mcp2515_id_to_buf@ext 007A                __end_of__initialization 07FC  
               ??_mcp2515_readRegister 0072               mcp2515_setRegister@value 0072  
                       __pcstackCOMMON 0071                           __pidataBANK0 0DA0  
                        __end_of_begin 0F54                 _mcp2515_requestNewMode 0F84  
               mcp2515_configRate@cfg1 0079                 mcp2515_configRate@cfg2 007A  
               mcp2515_configRate@cfg3 007B                     txSidhToTxLoad@sidh 0073  
            ??_mcp2515_setCANCTRL_Mode 007C                                ??_begin 007E  
                           __pbssBANK0 005D                      mcp2515_init@clock 0021  
                      mcp2515_init@res 0025                             __pmaintext 03AF  
              mcp2515_write_canMsg@dlc 002B            mcp2515_read_canMsg@pMsgSize 007C  
              mcp2515_write_canMsg@buf 0027                mcp2515_write_canMsg@len 0026  
              mcp2515_write_canMsg@ext 0024                            sendMsg@res1 003E  
                            ?_WriteSPI 0071                    mcp2515_readStatus@i 0072  
                      txSidhToRTS@sidh 0073                              ?_getCanId 0071  
                        sendMsgBuf@buf 0049                          sendMsgBuf@len 0048  
                        sendMsgBuf@ext 0046            mcp2515_read_canMsg@tbufdata 0078  
                        sendMsg@rtrBit 0037                                _SSPSTAT 0094  
                 txStatusPendingFlag@i 0073               ??_mcp2515_modifyRegister 0076  
                              _ReadSPI 0DA8                   __end_of_readMsgBufID 00CE  
                              _OpenSPI 00CE                              ?_txIfFlag 0071  
      __end_of_mcp2515_setCANCTRL_Mode 0187                          setMode@opMode 0020  
                           _readMsgBuf 0E3F                          _mcp2515_reset 0E12  
                           ??_WriteSPI 0071                                _getMode 0D98  
     __end_of_mcp2515_getNextFreeTXBuf 007A                                __ptext1 0E71  
                              __ptext2 030B                                __ptext3 0202  
                              __ptext4 0F19                                __ptext5 0DD8  
                              __ptext6 0EFC                                __ptext7 0187  
                              __ptext8 0030                                __ptext9 0EDF  
                              _mcpMode 005E                                _init_CS 0D91  
                              _ext_flg 0064                                _sendMsg 030B  
                              _setMode 0DC6                             ??_getCanId 0075  
         __end_of_mcp2515_write_canMsg 027F                                main@buf 004E  
                              main@len 005C                   end_of_initialization 07FC  
                           _sendMsgBuf 0E71                  mcp2515_read_canMsg@id 0072  
          __end_of_mcp2515_read_canMsg 05B9             mcp2515_write_canMsg@rtrBit 0025  
                    __end_of_txCtrlReg 0EC2                             ??_txIfFlag 0071  
                   _readRxTxStatus$423 0073                     _readRxTxStatus$424 0075  
                   _readRxTxStatus$425 0077                         ?_mcp2515_reset 0071  
                     WriteSPI@data_out 0071               mcp2515_initCANBuffers@a1 0074  
             mcp2515_initCANBuffers@a2 0075               mcp2515_initCANBuffers@a3 0076  
                    _mcp2515_id_to_buf 0187                     ?_mcp2515_id_to_buf 0071  
                  sendMsgBuf@wait_sent 004A                              _TRISDbits 0088  
                  ??_mcp2515_id_to_buf 0076                mcp2515_readRegister@ret 0073  
          __end_of_mcp2515_setRegister 0E71                ?_mcp2515_requestNewMode 0071  
            __end_of_mcp2515_id_to_buf 0202                            ?_readMsgBuf 0030  
                     OpenSPI@smp_phase 0072  mcp2515_setCANCTRL_Mode@wakeIntEnabled 007D  
              mcp2515_configRate@clock 0074               ??_mcp2515_initCANBuffers 0074  
                 mcp2515_init@canSpeed 0024                    start_initialization 07E6  
            mcp2515_id_to_buf@tbufdata 0075          mcp2515_requestNewMode@newmode 007B  
                       readMsgBufID@id 0029                       OpenSPI@sync_mode 0075  
                       readMsgBufID@rc 002F                            ?_sendMsgBuf 0042  
        mcp2515_requestNewMode@statReg 007A                  mcp2515_write_canMsg@i 0031  
            ?_mcp2515_getNextFreeTXBuf 0071         __end_of_mcp2515_requestNewMode 0FBF  
                       _readRxTxStatus 0F54                        ??_mcp2515_reset 0072  
                           init_fetch0 0DEB                            __pdataBANK0 0065  
                 _mcp2515_write_canMsg 0202                 _mcp2515_modifyRegister 0010  
                         _readMsgBufID 007A                              ___latbits 0002  
                        __pcstackBANK0 0020                  mcp2515_configRate@set 0077  
               __end_of_readRxTxStatus 0F84                               ?_ReadSPI 0071  
                             ?_OpenSPI 0071                            _nReservedTx 005D  
                           sendMsg@buf 0039                             sendMsg@len 0038  
                           sendMsg@ext 0036                             sendMsg@res 003D  
                ?_mcp2515_write_canMsg 0020             __end_of_mcp2515_configRate 07E6  
                         sendMsgBuf@id 0042               ??_mcp2515_start_transmit 0074  
                             ?_getMode 0071               ?_mcp2515_setCANCTRL_Mode 0071  
                             ?_init_CS 0071   mcp2515_write_canMsg@buffer_sidh_addr 0030  
                             ?_sendMsg 0032                               ?_setMode 0071  
                  _txStatusPendingFlag 0EDF                        ?_readRxTxStatus 0071  
          mcp2515_readRegister@address 0072                   mcp2515_read_canMsg@i 007D  
       mcp2515_start_transmit@mcp_addr 0074             __end_of_mcp2515_readStatus 0E12  
                           txCtrlReg@i 0073                   ?_txStatusPendingFlag 0071  
                        ?_mcp2515_init 0021                              _txCtrlReg 0EA6  
              mcp2515_initCANBuffers@i 0077              mcp2515_getNextFreeTXBuf@i 0079  
  mcp2515_read_canMsg@buffer_load_addr 0077                         sendMsg@txbuf_n 003F  
                      OpenSPI@bus_mode 0071                              main@canId 0056  
             _mcp2515_write_canMsg$328 0028                          ?_checkReceive 0071  
                        ??_txSidhToRTS 0071                          readMsgBuf@buf 0030  
                        readMsgBuf@len 0031                 _mcp2515_initCANBuffers 0FBF  
           mcp2515_setRegister@address 0073                      readRxTxStatus@ret 0079  
                       ??_mcp2515_init 0022              mcp2515_read_canMsg@rtrBit 0074  
                ??_txStatusPendingFlag 0071                 ??_mcp2515_write_canMsg 007D  
                           ?_txCtrlReg 0071                       _checkReceive$438 0073  
                         ??_readMsgBuf 007E           mcp2515_write_canMsg@tbufdata 002C  
                             _WriteSPI 0DB5         mcp2515_getNextFreeTXBuf@status 0077  
                             _getCanId 0005                         _txSidhToTxLoad 0F19  
                       ??_checkReceive 0073                              sendMsg@id 0032  
                             __ptext10 0EC2                               __ptext11 0EA6  
                             __ptext20 0F36                               __ptext12 0E3F  
                             __ptext21 027F                               __ptext13 0F54  
                             __ptext30 0FBF                               __ptext22 0DC6  
                             __ptext14 007A                               __ptext31 05B9  
                             __ptext23 012A                               __ptext15 0471  
                             __ptext32 0E57                               __ptext24 0F84  
                             __ptext16 0D91                               __ptext33 0DB5  
                             __ptext25 0010                               __ptext17 0005  
                             __ptext34 00CE                               __ptext26 0D98  
                             __ptext18 0E28                               __ptext27 0E8B  
                             __ptext19 0DFE                               __ptext28 0DA8  
                             __ptext29 0E12                           ??_sendMsgBuf 007E  
                            txIfFlag@i 0073                               begin@res 002B  
                   __end_of_readMsgBuf 0E57                    __end_of_txSidhToRTS 0F19  
                             _txIfFlag 0EC2                ?_mcp2515_modifyRegister 0074  
       mcp2515_setCANCTRL_Mode@newmode 007C                     __end_of_sendMsgBuf 0E8B  
         __end_of_mcp2515_readRegister 0EA6                 __end_of_txSidhToTxLoad 0F36  
                      checkReceive@res 0075                 mcp2515_read_canMsg@buf 0076  
               mcp2515_read_canMsg@len 0075                 mcp2515_read_canMsg@ext 0073  
                             init_ram0 0DEF                 _mcp2515_start_transmit 0DD8  
                     sendMsgBuf@rtrBit 0047                            ??_txCtrlReg 0071  
                __end_of_mcp2515_reset 0E28         __end_of_mcp2515_modifyRegister 0030  
                     sendMsg@uiTimeOut 0040                        ?_txSidhToTxLoad 0071  
                     sendMsg@wait_sent 003A                   __end_of_mcp2515_init 030B  
                   _mcp2515_configRate 05B9                       ??_readRxTxStatus 0073  
             _mcp2515_getNextFreeTXBuf 0030                            _txSidhToRTS 0EFC  
                  ?_mcp2515_configRate 0074                 mcp2515_id_to_buf@canid 007B  
