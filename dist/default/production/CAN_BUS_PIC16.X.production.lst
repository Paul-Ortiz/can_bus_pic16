

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Jan 21 05:41:06 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48     0000                     
    49                           ; Generated 22/03/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F877A Definitions
    81                           ; 
    82                           ; SFR Addresses
    83     0000                     	;# 
    84     0001                     	;# 
    85     0002                     	;# 
    86     0003                     	;# 
    87     0004                     	;# 
    88     0005                     	;# 
    89     0006                     	;# 
    90     0007                     	;# 
    91     0008                     	;# 
    92     0009                     	;# 
    93     000A                     	;# 
    94     000B                     	;# 
    95     000C                     	;# 
    96     000D                     	;# 
    97     000E                     	;# 
    98     000E                     	;# 
    99     000F                     	;# 
   100     0010                     	;# 
   101     0011                     	;# 
   102     0012                     	;# 
   103     0013                     	;# 
   104     0014                     	;# 
   105     0015                     	;# 
   106     0015                     	;# 
   107     0016                     	;# 
   108     0017                     	;# 
   109     0018                     	;# 
   110     0019                     	;# 
   111     001A                     	;# 
   112     001B                     	;# 
   113     001B                     	;# 
   114     001C                     	;# 
   115     001D                     	;# 
   116     001E                     	;# 
   117     001F                     	;# 
   118     0081                     	;# 
   119     0085                     	;# 
   120     0086                     	;# 
   121     0087                     	;# 
   122     0088                     	;# 
   123     0089                     	;# 
   124     008C                     	;# 
   125     008D                     	;# 
   126     008E                     	;# 
   127     0091                     	;# 
   128     0092                     	;# 
   129     0093                     	;# 
   130     0094                     	;# 
   131     0098                     	;# 
   132     0099                     	;# 
   133     009C                     	;# 
   134     009D                     	;# 
   135     009E                     	;# 
   136     009F                     	;# 
   137     010C                     	;# 
   138     010D                     	;# 
   139     010E                     	;# 
   140     010F                     	;# 
   141     018C                     	;# 
   142     018D                     	;# 
   143     0000                     	;# 
   144     0001                     	;# 
   145     0002                     	;# 
   146     0003                     	;# 
   147     0004                     	;# 
   148     0005                     	;# 
   149     0006                     	;# 
   150     0007                     	;# 
   151     0008                     	;# 
   152     0009                     	;# 
   153     000A                     	;# 
   154     000B                     	;# 
   155     000C                     	;# 
   156     000D                     	;# 
   157     000E                     	;# 
   158     000E                     	;# 
   159     000F                     	;# 
   160     0010                     	;# 
   161     0011                     	;# 
   162     0012                     	;# 
   163     0013                     	;# 
   164     0014                     	;# 
   165     0015                     	;# 
   166     0015                     	;# 
   167     0016                     	;# 
   168     0017                     	;# 
   169     0018                     	;# 
   170     0019                     	;# 
   171     001A                     	;# 
   172     001B                     	;# 
   173     001B                     	;# 
   174     001C                     	;# 
   175     001D                     	;# 
   176     001E                     	;# 
   177     001F                     	;# 
   178     0081                     	;# 
   179     0085                     	;# 
   180     0086                     	;# 
   181     0087                     	;# 
   182     0088                     	;# 
   183     0089                     	;# 
   184     008C                     	;# 
   185     008D                     	;# 
   186     008E                     	;# 
   187     0091                     	;# 
   188     0092                     	;# 
   189     0093                     	;# 
   190     0094                     	;# 
   191     0098                     	;# 
   192     0099                     	;# 
   193     009C                     	;# 
   194     009D                     	;# 
   195     009E                     	;# 
   196     009F                     	;# 
   197     010C                     	;# 
   198     010D                     	;# 
   199     010E                     	;# 
   200     010F                     	;# 
   201     018C                     	;# 
   202     018D                     	;# 
   203     0000                     	;# 
   204     0001                     	;# 
   205     0002                     	;# 
   206     0003                     	;# 
   207     0004                     	;# 
   208     0005                     	;# 
   209     0006                     	;# 
   210     0007                     	;# 
   211     0008                     	;# 
   212     0009                     	;# 
   213     000A                     	;# 
   214     000B                     	;# 
   215     000C                     	;# 
   216     000D                     	;# 
   217     000E                     	;# 
   218     000E                     	;# 
   219     000F                     	;# 
   220     0010                     	;# 
   221     0011                     	;# 
   222     0012                     	;# 
   223     0013                     	;# 
   224     0014                     	;# 
   225     0015                     	;# 
   226     0015                     	;# 
   227     0016                     	;# 
   228     0017                     	;# 
   229     0018                     	;# 
   230     0019                     	;# 
   231     001A                     	;# 
   232     001B                     	;# 
   233     001B                     	;# 
   234     001C                     	;# 
   235     001D                     	;# 
   236     001E                     	;# 
   237     001F                     	;# 
   238     0081                     	;# 
   239     0085                     	;# 
   240     0086                     	;# 
   241     0087                     	;# 
   242     0088                     	;# 
   243     0089                     	;# 
   244     008C                     	;# 
   245     008D                     	;# 
   246     008E                     	;# 
   247     0091                     	;# 
   248     0092                     	;# 
   249     0093                     	;# 
   250     0094                     	;# 
   251     0098                     	;# 
   252     0099                     	;# 
   253     009C                     	;# 
   254     009D                     	;# 
   255     009E                     	;# 
   256     009F                     	;# 
   257     010C                     	;# 
   258     010D                     	;# 
   259     010E                     	;# 
   260     010F                     	;# 
   261     018C                     	;# 
   262     018D                     	;# 
   263     0000                     	;# 
   264     0001                     	;# 
   265     0002                     	;# 
   266     0003                     	;# 
   267     0004                     	;# 
   268     0005                     	;# 
   269     0006                     	;# 
   270     0007                     	;# 
   271     0008                     	;# 
   272     0009                     	;# 
   273     000A                     	;# 
   274     000B                     	;# 
   275     000C                     	;# 
   276     000D                     	;# 
   277     000E                     	;# 
   278     000E                     	;# 
   279     000F                     	;# 
   280     0010                     	;# 
   281     0011                     	;# 
   282     0012                     	;# 
   283     0013                     	;# 
   284     0014                     	;# 
   285     0015                     	;# 
   286     0015                     	;# 
   287     0016                     	;# 
   288     0017                     	;# 
   289     0018                     	;# 
   290     0019                     	;# 
   291     001A                     	;# 
   292     001B                     	;# 
   293     001B                     	;# 
   294     001C                     	;# 
   295     001D                     	;# 
   296     001E                     	;# 
   297     001F                     	;# 
   298     0081                     	;# 
   299     0085                     	;# 
   300     0086                     	;# 
   301     0087                     	;# 
   302     0088                     	;# 
   303     0089                     	;# 
   304     008C                     	;# 
   305     008D                     	;# 
   306     008E                     	;# 
   307     0091                     	;# 
   308     0092                     	;# 
   309     0093                     	;# 
   310     0094                     	;# 
   311     0098                     	;# 
   312     0099                     	;# 
   313     009C                     	;# 
   314     009D                     	;# 
   315     009E                     	;# 
   316     009F                     	;# 
   317     010C                     	;# 
   318     010D                     	;# 
   319     010E                     	;# 
   320     010F                     	;# 
   321     018C                     	;# 
   322     018D                     	;# 
   323     0000                     	;# 
   324     0001                     	;# 
   325     0002                     	;# 
   326     0003                     	;# 
   327     0004                     	;# 
   328     0005                     	;# 
   329     0006                     	;# 
   330     0007                     	;# 
   331     0008                     	;# 
   332     0009                     	;# 
   333     000A                     	;# 
   334     000B                     	;# 
   335     000C                     	;# 
   336     000D                     	;# 
   337     000E                     	;# 
   338     000E                     	;# 
   339     000F                     	;# 
   340     0010                     	;# 
   341     0011                     	;# 
   342     0012                     	;# 
   343     0013                     	;# 
   344     0014                     	;# 
   345     0015                     	;# 
   346     0015                     	;# 
   347     0016                     	;# 
   348     0017                     	;# 
   349     0018                     	;# 
   350     0019                     	;# 
   351     001A                     	;# 
   352     001B                     	;# 
   353     001B                     	;# 
   354     001C                     	;# 
   355     001D                     	;# 
   356     001E                     	;# 
   357     001F                     	;# 
   358     0081                     	;# 
   359     0085                     	;# 
   360     0086                     	;# 
   361     0087                     	;# 
   362     0088                     	;# 
   363     0089                     	;# 
   364     008C                     	;# 
   365     008D                     	;# 
   366     008E                     	;# 
   367     0091                     	;# 
   368     0092                     	;# 
   369     0093                     	;# 
   370     0094                     	;# 
   371     0098                     	;# 
   372     0099                     	;# 
   373     009C                     	;# 
   374     009D                     	;# 
   375     009E                     	;# 
   376     009F                     	;# 
   377     010C                     	;# 
   378     010D                     	;# 
   379     010E                     	;# 
   380     010F                     	;# 
   381     018C                     	;# 
   382     018D                     	;# 
   383                           
   384                           	psect	idataBANK0
   385     0D74                     __pidataBANK0:
   386                           
   387                           ;initializer for _stmp
   388     0D74  3401               	retlw	1
   389     0D75  3401               	retlw	1
   390     0D76  3402               	retlw	2
   391     0D77  3403               	retlw	3
   392     0D78  3400               	retlw	0
   393     0D79  3405               	retlw	5
   394     0D7A  3406               	retlw	6
   395     0D7B  3407               	retlw	7
   396     0008                     _PORTDbits	set	8
   397     0013                     _SSPBUF	set	19
   398     0014                     _SSPCON	set	20
   399     00A7                     _WCOL	set	167
   400     00A4                     _CKP	set	164
   401     00A5                     _SSPEN	set	165
   402     0040                     _RD0	set	64
   403     0094                     _SSPSTAT	set	148
   404     0443                     _TRISD3	set	1091
   405     04A0                     _BF	set	1184
   406     043C                     _TRISC4	set	1084
   407     043D                     _TRISC5	set	1085
   408     043B                     _TRISC3	set	1083
   409     042D                     _TRISA5	set	1069
   410     04A6                     _CKE	set	1190
   411     04A7                     _SMP	set	1191
   412     0440                     _TRISD0	set	1088
   413                           
   414                           	psect	cinit
   415     07E6                     start_initialization:	
   416                           ; #config settings
   417                           
   418     07E6                     __initialization:
   419                           
   420                           ; Initialize objects allocated to BANK0
   421     07E6  1383               	bcf	3,7	;select IRP bank0
   422     07E7  306D               	movlw	low (__pdataBANK0+8)
   423     07E8  00FD               	movwf	btemp+-1
   424     07E9  300D               	movlw	high __pidataBANK0
   425     07EA  00FE               	movwf	btemp
   426     07EB  3074               	movlw	low __pidataBANK0
   427     07EC  00FF               	movwf	btemp+1
   428     07ED  3065               	movlw	low __pdataBANK0
   429     07EE  0084               	movwf	4
   430     07EF  120A  158A  25CE  120A  118A  	fcall	init_ram0
   431                           
   432                           ; Clear objects allocated to BANK0
   433     07F4  01DD               	clrf	__pbssBANK0& (0+127)
   434     07F5  01DE               	clrf	(__pbssBANK0+1)& (0+127)
   435     07F6  01DF               	clrf	(__pbssBANK0+2)& (0+127)
   436     07F7  01E0               	clrf	(__pbssBANK0+3)& (0+127)
   437     07F8  01E1               	clrf	(__pbssBANK0+4)& (0+127)
   438     07F9  01E2               	clrf	(__pbssBANK0+5)& (0+127)
   439     07FA  01E3               	clrf	(__pbssBANK0+6)& (0+127)
   440     07FB  01E4               	clrf	(__pbssBANK0+7)& (0+127)
   441     07FC                     end_of_initialization:	
   442                           ;End of C runtime variable initialization code
   443                           
   444     07FC                     __end_of__initialization:
   445     07FC  0183               	clrf	3
   446     07FD  120A  118A  2B8F   	ljmp	_main	;jump to C main() function
   447                           
   448                           	psect	bssBANK0
   449     005D                     __pbssBANK0:
   450     005D                     _nReservedTx:
   451     005D                     	ds	1
   452     005E                     _mcpMode:
   453     005E                     	ds	1
   454     005F                     _can_id:
   455     005F                     	ds	4
   456     0063                     _rtr:
   457     0063                     	ds	1
   458     0064                     _ext_flg:
   459     0064                     	ds	1
   460                           
   461                           	psect	dataBANK0
   462     0065                     __pdataBANK0:
   463     0065                     _stmp:
   464     0065                     	ds	8
   465                           
   466                           	psect	inittext
   467     0DCA                     init_fetch0:	
   468                           ;	Called with low address in FSR and high address in W
   469                           
   470     0DCA  087E               	movf	btemp,w
   471     0DCB  008A               	movwf	10
   472     0DCC  087F               	movf	btemp+1,w
   473     0DCD  0082               	movwf	2
   474     0DCE                     init_ram0:	
   475                           ;Called with:
   476                           ;	high address of idata address in btemp 
   477                           ;	low address of idata address in btemp+1 
   478                           ;	low address of data in FSR
   479                           ;	high address + 1 of data in btemp-1
   480                           
   481     0DCE  120A  158A  25CA  120A  158A  	fcall	init_fetch0
   482     0DD3  0080               	movwf	0
   483     0DD4  0A84               	incf	4,f
   484     0DD5  0804               	movf	4,w
   485     0DD6  067D               	xorwf	btemp+-1,w
   486     0DD7  1903               	btfsc	3,2
   487     0DD8  3400               	retlw	0
   488     0DD9  0AFF               	incf	btemp+1,f
   489     0DDA  1903               	btfsc	3,2
   490     0DDB  0AFE               	incf	btemp,f
   491     0DDC  2DCE               	goto	init_ram0
   492                           
   493                           	psect	cstackCOMMON
   494     0070                     __pcstackCOMMON:
   495     0070                     ?_WriteSPI:
   496     0070                     ??_WriteSPI:	
   497                           ; 1 bytes @ 0x0
   498                           
   499     0070                     ?_ReadSPI:	
   500                           ; 1 bytes @ 0x0
   501                           
   502     0070                     ??_ReadSPI:	
   503                           ; 1 bytes @ 0x0
   504                           
   505     0070                     ?_getMode:	
   506                           ; 1 bytes @ 0x0
   507                           
   508     0070                     ?_mcp2515_setCANCTRL_Mode:	
   509                           ; 1 bytes @ 0x0
   510                           
   511     0070                     ?_mcp2515_requestNewMode:	
   512                           ; 1 bytes @ 0x0
   513                           
   514     0070                     ?_mcp2515_start_transmit:	
   515                           ; 1 bytes @ 0x0
   516                           
   517     0070                     ?_OpenSPI:	
   518                           ; 1 bytes @ 0x0
   519                           
   520     0070                     ?_init_CS:	
   521                           ; 1 bytes @ 0x0
   522                           
   523     0070                     ??_init_CS:	
   524                           ; 1 bytes @ 0x0
   525                           
   526     0070                     ?_txCtrlReg:	
   527                           ; 1 bytes @ 0x0
   528                           
   529     0070                     ??_txCtrlReg:	
   530                           ; 1 bytes @ 0x0
   531                           
   532     0070                     ?_txSidhToRTS:	
   533                           ; 1 bytes @ 0x0
   534                           
   535     0070                     ??_txSidhToRTS:	
   536                           ; 1 bytes @ 0x0
   537                           
   538     0070                     ?_txSidhToTxLoad:	
   539                           ; 1 bytes @ 0x0
   540                           
   541     0070                     ??_txSidhToTxLoad:	
   542                           ; 1 bytes @ 0x0
   543                           
   544     0070                     ?_txIfFlag:	
   545                           ; 1 bytes @ 0x0
   546                           
   547     0070                     ??_txIfFlag:	
   548                           ; 1 bytes @ 0x0
   549                           
   550     0070                     ?_txStatusPendingFlag:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0070                     ??_txStatusPendingFlag:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0070                     ?_mcp2515_reset:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     0070                     ?_mcp2515_readRegister:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0070                     ?_mcp2515_readStatus:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ?_setMode:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     ?_mcp2515_initCANBuffers:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ?_mcp2515_id_to_buf:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0070                     ?_mcp2515_getNextFreeTXBuf:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     0070                     ?_readRxTxStatus:	
   578                           ; 1 bytes @ 0x0
   579                           
   580     0070                     ?_checkReceive:	
   581                           ; 1 bytes @ 0x0
   582                           
   583     0070                     ?_main:	
   584                           ; 1 bytes @ 0x0
   585                           
   586     0070                     ?_getCanId:	
   587                           ; 1 bytes @ 0x0
   588                           
   589     0070                     OpenSPI@bus_mode:	
   590                           ; 4 bytes @ 0x0
   591                           
   592     0070                     WriteSPI@data_out:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0070                     mcp2515_id_to_buf@id:	
   596                           ; 1 bytes @ 0x0
   597                           
   598                           
   599                           ; 4 bytes @ 0x0
   600     0070                     	ds	1
   601     0071                     ??_mcp2515_reset:
   602     0071                     ??_mcp2515_readRegister:	
   603                           ; 1 bytes @ 0x1
   604                           
   605     0071                     ?_mcp2515_setRegister:	
   606                           ; 1 bytes @ 0x1
   607                           
   608     0071                     ??_mcp2515_readStatus:	
   609                           ; 1 bytes @ 0x1
   610                           
   611     0071                     ?_mcp2515_read_canMsg:	
   612                           ; 1 bytes @ 0x1
   613                           
   614     0071                     mcp2515_readRegister@address:	
   615                           ; 1 bytes @ 0x1
   616                           
   617     0071                     mcp2515_setRegister@value:	
   618                           ; 1 bytes @ 0x1
   619                           
   620     0071                     mcp2515_readStatus@i:	
   621                           ; 1 bytes @ 0x1
   622                           
   623     0071                     mcp2515_read_canMsg@id:	
   624                           ; 1 bytes @ 0x1
   625                           
   626     0071                     OpenSPI@smp_phase:	
   627                           ; 1 bytes @ 0x1
   628                           
   629                           
   630                           ; 1 bytes @ 0x1
   631     0071                     	ds	1
   632     0072                     ??_OpenSPI:
   633     0072                     ??_mcp2515_setRegister:	
   634                           ; 1 bytes @ 0x2
   635                           
   636     0072                     ??_readRxTxStatus:	
   637                           ; 1 bytes @ 0x2
   638                           
   639     0072                     ??_checkReceive:	
   640                           ; 1 bytes @ 0x2
   641                           
   642     0072                     txCtrlReg@i:	
   643                           ; 1 bytes @ 0x2
   644                           
   645     0072                     txSidhToRTS@sidh:	
   646                           ; 1 bytes @ 0x2
   647                           
   648     0072                     txSidhToTxLoad@sidh:	
   649                           ; 1 bytes @ 0x2
   650                           
   651     0072                     txIfFlag@i:	
   652                           ; 1 bytes @ 0x2
   653                           
   654     0072                     txStatusPendingFlag@i:	
   655                           ; 1 bytes @ 0x2
   656                           
   657     0072                     mcp2515_readRegister@ret:	
   658                           ; 1 bytes @ 0x2
   659                           
   660     0072                     mcp2515_setRegister@address:	
   661                           ; 1 bytes @ 0x2
   662                           
   663     0072                     mcp2515_read_canMsg@ext:	
   664                           ; 1 bytes @ 0x2
   665                           
   666     0072                     _readRxTxStatus$305:	
   667                           ; 1 bytes @ 0x2
   668                           
   669     0072                     _checkReceive$320:	
   670                           ; 2 bytes @ 0x2
   671                           
   672                           
   673                           ; 2 bytes @ 0x2
   674     0072                     	ds	1
   675     0073                     ??_getMode:
   676     0073                     ??_mcp2515_start_transmit:	
   677                           ; 1 bytes @ 0x3
   678                           
   679     0073                     ?_mcp2515_modifyRegister:	
   680                           ; 1 bytes @ 0x3
   681                           
   682     0073                     ?_mcp2515_configRate:	
   683                           ; 1 bytes @ 0x3
   684                           
   685     0073                     ??_mcp2515_initCANBuffers:	
   686                           ; 1 bytes @ 0x3
   687                           
   688     0073                     mcp2515_modifyRegister@mask:	
   689                           ; 1 bytes @ 0x3
   690                           
   691     0073                     mcp2515_configRate@clock:	
   692                           ; 1 bytes @ 0x3
   693                           
   694     0073                     mcp2515_initCANBuffers@a1:	
   695                           ; 1 bytes @ 0x3
   696                           
   697     0073                     mcp2515_read_canMsg@rtrBit:	
   698                           ; 1 bytes @ 0x3
   699                           
   700     0073                     mcp2515_start_transmit@mcp_addr:	
   701                           ; 1 bytes @ 0x3
   702                           
   703                           
   704                           ; 1 bytes @ 0x3
   705     0073                     	ds	1
   706     0074                     ??_mcp2515_configRate:
   707     0074                     ??_getCanId:	
   708                           ; 1 bytes @ 0x4
   709                           
   710     0074                     mcp2515_modifyRegister@data:	
   711                           ; 1 bytes @ 0x4
   712                           
   713     0074                     mcp2515_initCANBuffers@a2:	
   714                           ; 1 bytes @ 0x4
   715                           
   716     0074                     mcp2515_id_to_buf@tbufdata:	
   717                           ; 1 bytes @ 0x4
   718                           
   719     0074                     mcp2515_read_canMsg@len:	
   720                           ; 1 bytes @ 0x4
   721                           
   722     0074                     checkReceive@res:	
   723                           ; 1 bytes @ 0x4
   724                           
   725     0074                     OpenSPI@sync_mode:	
   726                           ; 1 bytes @ 0x4
   727                           
   728     0074                     _readRxTxStatus$306:	
   729                           ; 1 bytes @ 0x4
   730                           
   731                           
   732                           ; 2 bytes @ 0x4
   733     0074                     	ds	1
   734     0075                     ??_mcp2515_modifyRegister:
   735     0075                     ??_mcp2515_id_to_buf:	
   736                           ; 1 bytes @ 0x5
   737                           
   738     0075                     mcp2515_modifyRegister@address:	
   739                           ; 1 bytes @ 0x5
   740                           
   741     0075                     mcp2515_initCANBuffers@a3:	
   742                           ; 1 bytes @ 0x5
   743                           
   744     0075                     mcp2515_read_canMsg@buf:	
   745                           ; 1 bytes @ 0x5
   746                           
   747                           
   748                           ; 1 bytes @ 0x5
   749     0075                     	ds	1
   750     0076                     ??_mcp2515_requestNewMode:
   751     0076                     ??_mcp2515_getNextFreeTXBuf:	
   752                           ; 1 bytes @ 0x6
   753                           
   754     0076                     mcp2515_configRate@set:	
   755                           ; 1 bytes @ 0x6
   756                           
   757     0076                     mcp2515_initCANBuffers@i:	
   758                           ; 1 bytes @ 0x6
   759                           
   760     0076                     mcp2515_read_canMsg@buffer_load_addr:	
   761                           ; 1 bytes @ 0x6
   762                           
   763     0076                     mcp2515_getNextFreeTXBuf@status:	
   764                           ; 1 bytes @ 0x6
   765                           
   766     0076                     _readRxTxStatus$307:	
   767                           ; 1 bytes @ 0x6
   768                           
   769                           
   770                           ; 2 bytes @ 0x6
   771     0076                     	ds	1
   772     0077                     mcp2515_configRate@canSpeed:
   773     0077                     mcp2515_getNextFreeTXBuf@txbuf_n:	
   774                           ; 1 bytes @ 0x7
   775                           
   776     0077                     mcp2515_read_canMsg@tbufdata:	
   777                           ; 1 bytes @ 0x7
   778                           
   779                           
   780                           ; 4 bytes @ 0x7
   781     0077                     	ds	1
   782     0078                     mcp2515_configRate@cfg1:
   783     0078                     mcp2515_getNextFreeTXBuf@i:	
   784                           ; 1 bytes @ 0x8
   785                           
   786     0078                     readRxTxStatus@ret:	
   787                           ; 1 bytes @ 0x8
   788                           
   789     0078                     mcp2515_requestNewMode@Count:	
   790                           ; 1 bytes @ 0x8
   791                           
   792                           
   793                           ; 2 bytes @ 0x8
   794     0078                     	ds	1
   795     0079                     mcp2515_configRate@cfg2:
   796     0079                     mcp2515_id_to_buf@ext:	
   797                           ; 1 bytes @ 0x9
   798                           
   799                           
   800                           ; 1 bytes @ 0x9
   801     0079                     	ds	1
   802     007A                     mcp2515_requestNewMode@statReg:
   803     007A                     mcp2515_configRate@cfg3:	
   804                           ; 1 bytes @ 0xA
   805                           
   806     007A                     mcp2515_id_to_buf@canid:	
   807                           ; 1 bytes @ 0xA
   808                           
   809                           
   810                           ; 2 bytes @ 0xA
   811     007A                     	ds	1
   812     007B                     mcp2515_requestNewMode@newmode:
   813     007B                     mcp2515_read_canMsg@pMsgSize:	
   814                           ; 1 bytes @ 0xB
   815                           
   816                           
   817                           ; 1 bytes @ 0xB
   818     007B                     	ds	1
   819     007C                     ??_mcp2515_setCANCTRL_Mode:
   820     007C                     ??_mcp2515_write_canMsg:	
   821                           ; 1 bytes @ 0xC
   822                           
   823     007C                     mcp2515_setCANCTRL_Mode@newmode:	
   824                           ; 1 bytes @ 0xC
   825                           
   826     007C                     mcp2515_read_canMsg@i:	
   827                           ; 1 bytes @ 0xC
   828                           
   829                           
   830                           ; 1 bytes @ 0xC
   831     007C                     	ds	1
   832     007D                     ??_sendMsgBuf:
   833     007D                     ??_readMsgBufID:	
   834                           ; 1 bytes @ 0xD
   835                           
   836     007D                     ?_readMsgBuf:	
   837                           ; 1 bytes @ 0xD
   838                           
   839     007D                     mcp2515_setCANCTRL_Mode@wakeIntEnabled:	
   840                           ; 1 bytes @ 0xD
   841                           
   842     007D                     readMsgBuf@buf:	
   843                           ; 1 bytes @ 0xD
   844                           
   845                           
   846                           ; 1 bytes @ 0xD
   847     007D                     	ds	1
   848     007E                     ??_setMode:
   849     007E                     ??_begin:	
   850                           ; 1 bytes @ 0xE
   851                           
   852     007E                     ??_readMsgBuf:	
   853                           ; 1 bytes @ 0xE
   854                           
   855                           
   856                           	psect	cstackBANK0
   857     0020                     __pcstackBANK0:	
   858                           ; 1 bytes @ 0xE
   859                           
   860     0020                     ?_mcp2515_write_canMsg:
   861     0020                     ??_mcp2515_read_canMsg:	
   862                           ; 1 bytes @ 0x0
   863                           
   864     0020                     setMode@opMode:	
   865                           ; 1 bytes @ 0x0
   866                           
   867     0020                     mcp2515_write_canMsg@id:	
   868                           ; 1 bytes @ 0x0
   869                           
   870                           
   871                           ; 4 bytes @ 0x0
   872     0020                     	ds	1
   873     0021                     ?_mcp2515_init:
   874     0021                     mcp2515_init@clock:	
   875                           ; 1 bytes @ 0x1
   876                           
   877                           
   878                           ; 1 bytes @ 0x1
   879     0021                     	ds	1
   880     0022                     ??_mcp2515_init:
   881                           
   882                           ; 1 bytes @ 0x2
   883     0022                     	ds	2
   884     0024                     mcp2515_init@canSpeed:
   885     0024                     mcp2515_write_canMsg@ext:	
   886                           ; 1 bytes @ 0x4
   887                           
   888                           
   889                           ; 1 bytes @ 0x4
   890     0024                     	ds	1
   891     0025                     mcp2515_init@res:
   892     0025                     mcp2515_write_canMsg@rtrBit:	
   893                           ; 1 bytes @ 0x5
   894                           
   895                           
   896                           ; 1 bytes @ 0x5
   897     0025                     	ds	1
   898     0026                     ?_begin:
   899     0026                     mcp2515_write_canMsg@len:	
   900                           ; 1 bytes @ 0x6
   901                           
   902     0026                     begin@speedset:	
   903                           ; 1 bytes @ 0x6
   904                           
   905                           
   906                           ; 4 bytes @ 0x6
   907     0026                     	ds	1
   908     0027                     mcp2515_write_canMsg@buf:
   909                           
   910                           ; 1 bytes @ 0x7
   911     0027                     	ds	1
   912     0028                     _mcp2515_write_canMsg$210:
   913                           
   914                           ; 2 bytes @ 0x8
   915     0028                     	ds	1
   916     0029                     ?_readMsgBufID:
   917     0029                     readMsgBufID@id:	
   918                           ; 1 bytes @ 0x9
   919                           
   920                           
   921                           ; 1 bytes @ 0x9
   922     0029                     	ds	1
   923     002A                     mcp2515_write_canMsg@load_addr:
   924     002A                     begin@clockset:	
   925                           ; 1 bytes @ 0xA
   926                           
   927     002A                     readMsgBufID@ext:	
   928                           ; 1 bytes @ 0xA
   929                           
   930                           
   931                           ; 1 bytes @ 0xA
   932     002A                     	ds	1
   933     002B                     mcp2515_write_canMsg@dlc:
   934     002B                     begin@res:	
   935                           ; 1 bytes @ 0xB
   936                           
   937     002B                     readMsgBufID@rtrBit:	
   938                           ; 1 bytes @ 0xB
   939                           
   940                           
   941                           ; 1 bytes @ 0xB
   942     002B                     	ds	1
   943     002C                     readMsgBufID@len:
   944     002C                     mcp2515_write_canMsg@tbufdata:	
   945                           ; 1 bytes @ 0xC
   946                           
   947                           
   948                           ; 4 bytes @ 0xC
   949     002C                     	ds	1
   950     002D                     readMsgBufID@buf:
   951                           
   952                           ; 1 bytes @ 0xD
   953     002D                     	ds	1
   954     002E                     readMsgBufID@status:
   955                           
   956                           ; 1 bytes @ 0xE
   957     002E                     	ds	1
   958     002F                     readMsgBufID@rc:
   959                           
   960                           ; 1 bytes @ 0xF
   961     002F                     	ds	1
   962     0030                     mcp2515_write_canMsg@buffer_sidh_addr:
   963     0030                     readMsgBuf@len:	
   964                           ; 1 bytes @ 0x10
   965                           
   966                           
   967                           ; 1 bytes @ 0x10
   968     0030                     	ds	1
   969     0031                     mcp2515_write_canMsg@i:
   970                           
   971                           ; 1 bytes @ 0x11
   972     0031                     	ds	1
   973     0032                     ?_sendMsg:
   974     0032                     sendMsg@id:	
   975                           ; 1 bytes @ 0x12
   976                           
   977                           
   978                           ; 4 bytes @ 0x12
   979     0032                     	ds	4
   980     0036                     sendMsg@ext:
   981                           
   982                           ; 1 bytes @ 0x16
   983     0036                     	ds	1
   984     0037                     sendMsg@rtrBit:
   985                           
   986                           ; 1 bytes @ 0x17
   987     0037                     	ds	1
   988     0038                     sendMsg@len:
   989                           
   990                           ; 1 bytes @ 0x18
   991     0038                     	ds	1
   992     0039                     sendMsg@buf:
   993                           
   994                           ; 1 bytes @ 0x19
   995     0039                     	ds	1
   996     003A                     sendMsg@wait_sent:
   997                           
   998                           ; 1 bytes @ 0x1A
   999     003A                     	ds	1
  1000     003B                     ??_sendMsg:
  1001                           
  1002                           ; 1 bytes @ 0x1B
  1003     003B                     	ds	2
  1004     003D                     sendMsg@res:
  1005                           
  1006                           ; 1 bytes @ 0x1D
  1007     003D                     	ds	1
  1008     003E                     sendMsg@res1:
  1009                           
  1010                           ; 1 bytes @ 0x1E
  1011     003E                     	ds	1
  1012     003F                     sendMsg@txbuf_n:
  1013                           
  1014                           ; 1 bytes @ 0x1F
  1015     003F                     	ds	1
  1016     0040                     sendMsg@uiTimeOut:
  1017                           
  1018                           ; 2 bytes @ 0x20
  1019     0040                     	ds	2
  1020     0042                     ?_sendMsgBuf:
  1021     0042                     sendMsgBuf@id:	
  1022                           ; 1 bytes @ 0x22
  1023                           
  1024                           
  1025                           ; 4 bytes @ 0x22
  1026     0042                     	ds	4
  1027     0046                     sendMsgBuf@ext:
  1028                           
  1029                           ; 1 bytes @ 0x26
  1030     0046                     	ds	1
  1031     0047                     sendMsgBuf@rtrBit:
  1032                           
  1033                           ; 1 bytes @ 0x27
  1034     0047                     	ds	1
  1035     0048                     sendMsgBuf@len:
  1036                           
  1037                           ; 1 bytes @ 0x28
  1038     0048                     	ds	1
  1039     0049                     sendMsgBuf@buf:
  1040                           
  1041                           ; 1 bytes @ 0x29
  1042     0049                     	ds	1
  1043     004A                     sendMsgBuf@wait_sent:
  1044                           
  1045                           ; 1 bytes @ 0x2A
  1046     004A                     	ds	1
  1047     004B                     ??_main:
  1048                           
  1049                           ; 1 bytes @ 0x2B
  1050     004B                     	ds	3
  1051     004E                     main@buf:
  1052                           
  1053                           ; 8 bytes @ 0x2E
  1054     004E                     	ds	8
  1055     0056                     main@canId:
  1056                           
  1057                           ; 4 bytes @ 0x36
  1058     0056                     	ds	4
  1059     005A                     main@i:
  1060                           
  1061                           ; 2 bytes @ 0x3A
  1062     005A                     	ds	2
  1063     005C                     main@len:
  1064                           
  1065                           ; 1 bytes @ 0x3C
  1066     005C                     	ds	1
  1067                           
  1068                           	psect	maintext
  1069     038F                     __pmaintext:	
  1070 ;;
  1071 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1072 ;;
  1073 ;; *************** function _main *****************
  1074 ;; Defined at:
  1075 ;;		line 34 in file "main.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;  i               2   58[BANK0 ] int 
  1080 ;;  canId           4   54[BANK0 ] unsigned long 
  1081 ;;  buf             8   46[BANK0 ] unsigned char [8]
  1082 ;;  len             1   60[BANK0 ] unsigned char 
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : B00/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1092 ;;      Params:         0       0       0       0       0
  1093 ;;      Locals:         0      15       0       0       0
  1094 ;;      Temps:          0       3       0       0       0
  1095 ;;      Totals:         0      18       0       0       0
  1096 ;;Total ram usage:       18 bytes
  1097 ;; Hardware stack levels required when called: 7
  1098 ;; This function calls:
  1099 ;;		_begin
  1100 ;;		_checkReceive
  1101 ;;		_getCanId
  1102 ;;		_init_CS
  1103 ;;		_readMsgBuf
  1104 ;;		_sendMsgBuf
  1105 ;; This function is called by:
  1106 ;;		Startup code after reset
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110     038F                     _main:	
  1111                           ;psect for function _main
  1112                           
  1113     038F                     l3991:	
  1114                           ;incstack = 0
  1115                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1116                           
  1117                           
  1118                           ;main.c: 36:         if ((3) == checkReceive()) {
  1119     038F  1683               	bsf	3,5	;RP0=1, select bank1
  1120     0390  1303               	bcf	3,6	;RP1=0, select bank1
  1121     0391  1188               	bcf	8,3	;volatile
  1122                           
  1123                           ;main.c: 38: 
  1124     0392  1283               	bcf	3,5	;RP0=0, select bank0
  1125     0393  1303               	bcf	3,6	;RP1=0, select bank0
  1126     0394  1188               	bcf	8,3	;volatile
  1127     0395                     l3993:
  1128                           
  1129                           ;main.c: 40: 
  1130     0395  120A  118A  2003  120A  118A  	fcall	_init_CS
  1131                           
  1132                           ;main.c: 42: 
  1133     039A  2BA9               	goto	l3997
  1134     039B                     l3995:
  1135                           
  1136                           ;main.c: 43:                 if ((canId == 0x00000005) & (buf[i] == 0x72)){
  1137     039B  3003               	movlw	3
  1138     039C  1283               	bcf	3,5	;RP0=0, select bank0
  1139     039D  1303               	bcf	3,6	;RP1=0, select bank0
  1140     039E  00CD               	movwf	??_main+2
  1141     039F  308A               	movlw	138
  1142     03A0  00CC               	movwf	??_main+1
  1143     03A1  3055               	movlw	85
  1144     03A2  00CB               	movwf	??_main
  1145     03A3                     u2107:
  1146     03A3  0BCB               	decfsz	??_main,f
  1147     03A4  2BA3               	goto	u2107
  1148     03A5  0BCC               	decfsz	??_main+1,f
  1149     03A6  2BA3               	goto	u2107
  1150     03A7  0BCD               	decfsz	??_main+2,f
  1151     03A8  2BA3               	goto	u2107
  1152     03A9                     l3997:
  1153                           
  1154                           ;main.c: 42: 
  1155     03A9  3000               	movlw	0
  1156     03AA  1283               	bcf	3,5	;RP0=0, select bank0
  1157     03AB  1303               	bcf	3,6	;RP1=0, select bank0
  1158     03AC  00A9               	movwf	begin@speedset+3
  1159     03AD  3000               	movlw	0
  1160     03AE  00A8               	movwf	begin@speedset+2
  1161     03AF  3000               	movlw	0
  1162     03B0  00A7               	movwf	begin@speedset+1
  1163     03B1  3010               	movlw	16
  1164     03B2  00A6               	movwf	begin@speedset
  1165     03B3  3003               	movlw	3
  1166     03B4  00AA               	movwf	begin@clockset
  1167     03B5  120A  158A  2715  120A  118A  	fcall	_begin
  1168     03BA  3A00               	xorlw	0
  1169     03BB  1D03               	skipz
  1170     03BC  2BBE               	goto	u2051
  1171     03BD  2BBF               	goto	u2050
  1172     03BE                     u2051:
  1173     03BE  2B9B               	goto	l3995
  1174     03BF                     u2050:
  1175     03BF                     l600:
  1176                           
  1177                           ;main.c: 45:                     _delay((unsigned long)((100)*(20000000/4000.0)));
  1178     03BF  1283               	bcf	3,5	;RP0=0, select bank0
  1179     03C0  1303               	bcf	3,6	;RP1=0, select bank0
  1180     03C1  1588               	bsf	8,3	;volatile
  1181     03C2                     l3999:
  1182                           
  1183                           ;main.c: 46:                     PORTDbits.RD3 = 0;
  1184     03C2  301A               	movlw	26
  1185     03C3  1283               	bcf	3,5	;RP0=0, select bank0
  1186     03C4  1303               	bcf	3,6	;RP1=0, select bank0
  1187     03C5  00CD               	movwf	??_main+2
  1188     03C6  305E               	movlw	94
  1189     03C7  00CC               	movwf	??_main+1
  1190     03C8  306D               	movlw	109
  1191     03C9  00CB               	movwf	??_main
  1192     03CA                     u2117:
  1193     03CA  0BCB               	decfsz	??_main,f
  1194     03CB  2BCA               	goto	u2117
  1195     03CC  0BCC               	decfsz	??_main+1,f
  1196     03CD  2BCA               	goto	u2117
  1197     03CE  0BCD               	decfsz	??_main+2,f
  1198     03CF  2BCA               	goto	u2117
  1199     03D0  2BD1               	nop2
  1200     03D1                     l4001:
  1201                           
  1202                           ;main.c: 47:                     _delay((unsigned long)((100)*(20000000/4000.0)));
  1203     03D1  1283               	bcf	3,5	;RP0=0, select bank0
  1204     03D2  1303               	bcf	3,6	;RP1=0, select bank0
  1205     03D3  1188               	bcf	8,3	;volatile
  1206     03D4                     l4003:
  1207                           
  1208                           ;main.c: 50:             }
  1209     03D4  3000               	movlw	0
  1210     03D5  1283               	bcf	3,5	;RP0=0, select bank0
  1211     03D6  1303               	bcf	3,6	;RP1=0, select bank0
  1212     03D7  00C5               	movwf	sendMsgBuf@id+3
  1213     03D8  3000               	movlw	0
  1214     03D9  00C4               	movwf	sendMsgBuf@id+2
  1215     03DA  3000               	movlw	0
  1216     03DB  00C3               	movwf	sendMsgBuf@id+1
  1217     03DC  3004               	movlw	4
  1218     03DD  00C2               	movwf	sendMsgBuf@id
  1219     03DE  01C6               	clrf	sendMsgBuf@ext
  1220     03DF  01C7               	clrf	sendMsgBuf@rtrBit
  1221     03E0  3008               	movlw	8
  1222     03E1  00C8               	movwf	sendMsgBuf@len
  1223     03E2  3065               	movlw	(low (_stmp| 0))& (0+255)
  1224     03E3  00C9               	movwf	sendMsgBuf@buf
  1225     03E4  01CA               	clrf	sendMsgBuf@wait_sent
  1226     03E5  0ACA               	incf	sendMsgBuf@wait_sent,f
  1227     03E6  120A  158A  2650  120A  118A  	fcall	_sendMsgBuf
  1228     03EB                     l4005:
  1229                           
  1230                           ;main.c: 51:         }
  1231     03EB  301A               	movlw	26
  1232     03EC  1283               	bcf	3,5	;RP0=0, select bank0
  1233     03ED  1303               	bcf	3,6	;RP1=0, select bank0
  1234     03EE  00CD               	movwf	??_main+2
  1235     03EF  305E               	movlw	94
  1236     03F0  00CC               	movwf	??_main+1
  1237     03F1  306D               	movlw	109
  1238     03F2  00CB               	movwf	??_main
  1239     03F3                     u2127:
  1240     03F3  0BCB               	decfsz	??_main,f
  1241     03F4  2BF3               	goto	u2127
  1242     03F5  0BCC               	decfsz	??_main+1,f
  1243     03F6  2BF3               	goto	u2127
  1244     03F7  0BCD               	decfsz	??_main+2,f
  1245     03F8  2BF3               	goto	u2127
  1246     03F9  2BFA               	nop2
  1247     03FA                     l4007:
  1248                           
  1249                           ;main.c: 54:     return;
  1250     03FA  1283               	bcf	3,5	;RP0=0, select bank0
  1251     03FB  1303               	bcf	3,6	;RP1=0, select bank0
  1252     03FC  01DC               	clrf	main@len
  1253     03FD                     l4009:
  1254                           
  1255                           ;main.c: 55: }
  1256     03FD  120A  158A  2607  120A  118A  	fcall	_checkReceive
  1257     0402  3A03               	xorlw	3
  1258     0403  1D03               	skipz
  1259     0404  2C06               	goto	u2061
  1260     0405  2C07               	goto	u2060
  1261     0406                     u2061:
  1262     0406  2BD4               	goto	l4003
  1263     0407                     u2060:
  1264     0407                     l4011:
  1265     0407  304E               	movlw	(low (main@buf| 0))& (0+255)
  1266     0408  00FD               	movwf	readMsgBuf@buf
  1267     0409  305C               	movlw	(low (main@len| 0))& (0+255)
  1268     040A  120A  158A  261E  120A  118A  	fcall	_readMsgBuf
  1269     040F                     l4013:
  1270     040F  120A  158A  257C  120A  118A  	fcall	_getCanId
  1271     0414  0873               	movf	?_getCanId+3,w
  1272     0415  1283               	bcf	3,5	;RP0=0, select bank0
  1273     0416  1303               	bcf	3,6	;RP1=0, select bank0
  1274     0417  00D9               	movwf	main@canId+3
  1275     0418  0872               	movf	?_getCanId+2,w
  1276     0419  00D8               	movwf	main@canId+2
  1277     041A  0871               	movf	?_getCanId+1,w
  1278     041B  00D7               	movwf	main@canId+1
  1279     041C  0870               	movf	?_getCanId,w
  1280     041D  00D6               	movwf	main@canId
  1281     041E                     l4015:
  1282     041E  01DA               	clrf	main@i
  1283     041F  01DB               	clrf	main@i+1
  1284     0420  2C60               	goto	l603
  1285     0421                     l4017:
  1286     0421  3005               	movlw	5
  1287     0422  1283               	bcf	3,5	;RP0=0, select bank0
  1288     0423  1303               	bcf	3,6	;RP1=0, select bank0
  1289     0424  0656               	xorwf	main@canId,w
  1290     0425  0457               	iorwf	main@canId+1,w
  1291     0426  0458               	iorwf	main@canId+2,w
  1292     0427  0459               	iorwf	main@canId+3,w
  1293     0428  1D03               	btfss	3,2
  1294     0429  2C2B               	goto	u2071
  1295     042A  2C2C               	goto	u2070
  1296     042B                     u2071:
  1297     042B  2C58               	goto	l605
  1298     042C                     u2070:
  1299     042C                     l4019:
  1300     042C  1283               	bcf	3,5	;RP0=0, select bank0
  1301     042D  1303               	bcf	3,6	;RP1=0, select bank0
  1302     042E  085A               	movf	main@i,w
  1303     042F  3E4E               	addlw	(low (main@buf| 0))& (0+255)
  1304     0430  0084               	movwf	4
  1305     0431  3072               	movlw	114
  1306     0432  1383               	bcf	3,7	;select IRP bank0
  1307     0433  0600               	xorwf	0,w
  1308     0434  1D03               	btfss	3,2
  1309     0435  2C37               	goto	u2081
  1310     0436  2C38               	goto	u2080
  1311     0437                     u2081:
  1312     0437  2C58               	goto	l605
  1313     0438                     u2080:
  1314     0438                     l4021:
  1315     0438  1588               	bsf	8,3	;volatile
  1316     0439                     l4023:
  1317     0439  3003               	movlw	3
  1318     043A  1283               	bcf	3,5	;RP0=0, select bank0
  1319     043B  1303               	bcf	3,6	;RP1=0, select bank0
  1320     043C  00CD               	movwf	??_main+2
  1321     043D  308A               	movlw	138
  1322     043E  00CC               	movwf	??_main+1
  1323     043F  3055               	movlw	85
  1324     0440  00CB               	movwf	??_main
  1325     0441                     u2137:
  1326     0441  0BCB               	decfsz	??_main,f
  1327     0442  2C41               	goto	u2137
  1328     0443  0BCC               	decfsz	??_main+1,f
  1329     0444  2C41               	goto	u2137
  1330     0445  0BCD               	decfsz	??_main+2,f
  1331     0446  2C41               	goto	u2137
  1332     0447                     l4025:
  1333     0447  1283               	bcf	3,5	;RP0=0, select bank0
  1334     0448  1303               	bcf	3,6	;RP1=0, select bank0
  1335     0449  1188               	bcf	8,3	;volatile
  1336     044A  3003               	movlw	3
  1337     044B  1283               	bcf	3,5	;RP0=0, select bank0
  1338     044C  1303               	bcf	3,6	;RP1=0, select bank0
  1339     044D  00CD               	movwf	??_main+2
  1340     044E  308A               	movlw	138
  1341     044F  00CC               	movwf	??_main+1
  1342     0450  3055               	movlw	85
  1343     0451  00CB               	movwf	??_main
  1344     0452                     u2147:
  1345     0452  0BCB               	decfsz	??_main,f
  1346     0453  2C52               	goto	u2147
  1347     0454  0BCC               	decfsz	??_main+1,f
  1348     0455  2C52               	goto	u2147
  1349     0456  0BCD               	decfsz	??_main+2,f
  1350     0457  2C52               	goto	u2147
  1351     0458                     l605:
  1352     0458  3001               	movlw	1
  1353     0459  1283               	bcf	3,5	;RP0=0, select bank0
  1354     045A  1303               	bcf	3,6	;RP1=0, select bank0
  1355     045B  07DA               	addwf	main@i,f
  1356     045C  1803               	skipnc
  1357     045D  0ADB               	incf	main@i+1,f
  1358     045E  3000               	movlw	0
  1359     045F  07DB               	addwf	main@i+1,f
  1360     0460                     l603:
  1361     0460  085B               	movf	main@i+1,w
  1362     0461  3A80               	xorlw	128
  1363     0462  00CB               	movwf	??_main
  1364     0463  3080               	movlw	128
  1365     0464  024B               	subwf	??_main,w
  1366     0465  1D03               	skipz
  1367     0466  2C69               	goto	u2095
  1368     0467  085C               	movf	main@len,w
  1369     0468  025A               	subwf	main@i,w
  1370     0469                     u2095:
  1371     0469  1C03               	skipc
  1372     046A  2C6C               	goto	u2091
  1373     046B  2C6D               	goto	u2090
  1374     046C                     u2091:
  1375     046C  2C21               	goto	l4017
  1376     046D                     u2090:
  1377     046D  2BD4               	goto	l4003
  1378     046E  120A  118A  2800   	ljmp	start
  1379     0471                     __end_of_main:
  1380                           
  1381                           	psect	text1
  1382     0E50                     __ptext1:	
  1383 ;; *************** function _sendMsgBuf *****************
  1384 ;; Defined at:
  1385 ;;		line 1276 in file "mcp2515_can.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;  id              4   34[BANK0 ] unsigned long 
  1388 ;;  ext             1   38[BANK0 ] unsigned char 
  1389 ;;  rtrBit          1   39[BANK0 ] unsigned char 
  1390 ;;  len             1   40[BANK0 ] unsigned char 
  1391 ;;  buf             1   41[BANK0 ] PTR const unsigned char 
  1392 ;;		 -> stmp(8), 
  1393 ;;  wait_sent       1   42[BANK0 ] unsigned char 
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;		None
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  1    wreg      unsigned char 
  1398 ;; Registers used:
  1399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1405 ;;      Params:         0       9       0       0       0
  1406 ;;      Locals:         0       0       0       0       0
  1407 ;;      Temps:          0       0       0       0       0
  1408 ;;      Totals:         0       9       0       0       0
  1409 ;;Total ram usage:        9 bytes
  1410 ;; Hardware stack levels used: 1
  1411 ;; Hardware stack levels required when called: 4
  1412 ;; This function calls:
  1413 ;;		_sendMsg
  1414 ;; This function is called by:
  1415 ;;		_main
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419     0E50                     _sendMsgBuf:	
  1420                           ;psect for function _sendMsgBuf
  1421                           
  1422     0E50                     l3559:	
  1423                           ;incstack = 0
  1424                           ; Regs used in _sendMsgBuf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1425                           
  1426                           
  1427                           ;mcp2515_can.c: 1277:     return sendMsg(id, ext, rtrBit, len, buf, wait_sent);;	Return 
      +                          value of _sendMsgBuf is never used
  1428     0E50  1283               	bcf	3,5	;RP0=0, select bank0
  1429     0E51  1303               	bcf	3,6	;RP1=0, select bank0
  1430     0E52  0845               	movf	sendMsgBuf@id+3,w
  1431     0E53  00B5               	movwf	sendMsg@id+3
  1432     0E54  0844               	movf	sendMsgBuf@id+2,w
  1433     0E55  00B4               	movwf	sendMsg@id+2
  1434     0E56  0843               	movf	sendMsgBuf@id+1,w
  1435     0E57  00B3               	movwf	sendMsg@id+1
  1436     0E58  0842               	movf	sendMsgBuf@id,w
  1437     0E59  00B2               	movwf	sendMsg@id
  1438     0E5A  0846               	movf	sendMsgBuf@ext,w
  1439     0E5B  00B6               	movwf	sendMsg@ext
  1440     0E5C  0847               	movf	sendMsgBuf@rtrBit,w
  1441     0E5D  00B7               	movwf	sendMsg@rtrBit
  1442     0E5E  0848               	movf	sendMsgBuf@len,w
  1443     0E5F  00B8               	movwf	sendMsg@len
  1444     0E60  0849               	movf	sendMsgBuf@buf,w
  1445     0E61  00B9               	movwf	sendMsg@buf
  1446     0E62  084A               	movf	sendMsgBuf@wait_sent,w
  1447     0E63  00BA               	movwf	sendMsg@wait_sent
  1448     0E64  120A  118A  22E9  120A  158A  	fcall	_sendMsg
  1449     0E69                     l364:
  1450     0E69  0008               	return
  1451     0E6A                     __end_of_sendMsgBuf:
  1452                           
  1453                           	psect	text2
  1454     02E9                     __ptext2:	
  1455 ;; *************** function _sendMsg *****************
  1456 ;; Defined at:
  1457 ;;		line 1231 in file "mcp2515_can.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;  id              4   18[BANK0 ] unsigned long 
  1460 ;;  ext             1   22[BANK0 ] unsigned char 
  1461 ;;  rtrBit          1   23[BANK0 ] unsigned char 
  1462 ;;  len             1   24[BANK0 ] unsigned char 
  1463 ;;  buf             1   25[BANK0 ] PTR const unsigned char 
  1464 ;;		 -> stmp(8), 
  1465 ;;  wait_sent       1   26[BANK0 ] unsigned char 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  uiTimeOut       2   32[BANK0 ] unsigned short 
  1468 ;;  txbuf_n         1   31[BANK0 ] unsigned char 
  1469 ;;  res1            1   30[BANK0 ] unsigned char 
  1470 ;;  res             1   29[BANK0 ] unsigned char 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      unsigned char 
  1473 ;; Registers used:
  1474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1480 ;;      Params:         0       9       0       0       0
  1481 ;;      Locals:         0       5       0       0       0
  1482 ;;      Temps:          0       2       0       0       0
  1483 ;;      Totals:         0      16       0       0       0
  1484 ;;Total ram usage:       16 bytes
  1485 ;; Hardware stack levels used: 1
  1486 ;; Hardware stack levels required when called: 3
  1487 ;; This function calls:
  1488 ;;		_mcp2515_getNextFreeTXBuf
  1489 ;;		_mcp2515_readRegister
  1490 ;;		_mcp2515_write_canMsg
  1491 ;; This function is called by:
  1492 ;;		_sendMsgBuf
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496     02E9                     _sendMsg:	
  1497                           ;psect for function _sendMsg
  1498                           
  1499     02E9                     l3415:	
  1500                           ;incstack = 0
  1501                           ; Regs used in _sendMsg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1502                           
  1503                           
  1504                           ;mcp2515_can.c: 1232:     unsigned char res, res1, txbuf_n;;mcp2515_can.c: 1233:     uin
      +                          t16_t uiTimeOut = 0;
  1505     02E9  1283               	bcf	3,5	;RP0=0, select bank0
  1506     02EA  1303               	bcf	3,6	;RP1=0, select bank0
  1507     02EB  01C0               	clrf	sendMsg@uiTimeOut
  1508     02EC  01C1               	clrf	sendMsg@uiTimeOut+1
  1509     02ED                     l3417:
  1510                           
  1511                           ;mcp2515_can.c: 1235:     can_id = id;
  1512     02ED  0835               	movf	sendMsg@id+3,w
  1513     02EE  00E2               	movwf	_can_id+3
  1514     02EF  0834               	movf	sendMsg@id+2,w
  1515     02F0  00E1               	movwf	_can_id+2
  1516     02F1  0833               	movf	sendMsg@id+1,w
  1517     02F2  00E0               	movwf	_can_id+1
  1518     02F3  0832               	movf	sendMsg@id,w
  1519     02F4  00DF               	movwf	_can_id
  1520     02F5                     l3419:
  1521                           
  1522                           ;mcp2515_can.c: 1236:     ext_flg = ext;
  1523     02F5  0836               	movf	sendMsg@ext,w
  1524     02F6  00E4               	movwf	_ext_flg
  1525     02F7                     l3421:
  1526                           
  1527                           ;mcp2515_can.c: 1237:     rtr = rtrBit;
  1528     02F7  0837               	movf	sendMsg@rtrBit,w
  1529     02F8  00E3               	movwf	_rtr
  1530     02F9                     l3423:
  1531                           
  1532                           ;mcp2515_can.c: 1240:         if (uiTimeOut > 0) {
  1533     02F9  0840               	movf	sendMsg@uiTimeOut,w
  1534     02FA  0441               	iorwf	sendMsg@uiTimeOut+1,w
  1535     02FB  1903               	btfsc	3,2
  1536     02FC  2AFE               	goto	u1511
  1537     02FD  2AFF               	goto	u1510
  1538     02FE                     u1511:
  1539     02FE  2B0A               	goto	l3427
  1540     02FF                     u1510:
  1541     02FF                     l3425:
  1542                           
  1543                           ;mcp2515_can.c: 1241:             _delay((unsigned long)((10)*(20000000/4000.0)));
  1544     02FF  3041               	movlw	65
  1545     0300  1283               	bcf	3,5	;RP0=0, select bank0
  1546     0301  1303               	bcf	3,6	;RP1=0, select bank0
  1547     0302  00BC               	movwf	??_sendMsg+1
  1548     0303  30ED               	movlw	237
  1549     0304  00BB               	movwf	??_sendMsg
  1550     0305                     u2157:
  1551     0305  0BBB               	decfsz	??_sendMsg,f
  1552     0306  2B05               	goto	u2157
  1553     0307  0BBC               	decfsz	??_sendMsg+1,f
  1554     0308  2B05               	goto	u2157
  1555     0309  2B0A               	nop2
  1556     030A                     l3427:
  1557                           
  1558                           ;mcp2515_can.c: 1243:         res = mcp2515_getNextFreeTXBuf(&txbuf_n);
  1559     030A  303F               	movlw	(low (sendMsg@txbuf_n| 0))& (0+255)
  1560     030B  120A  118A  200A  120A  118A  	fcall	_mcp2515_getNextFreeTXBuf
  1561     0310  1283               	bcf	3,5	;RP0=0, select bank0
  1562     0311  1303               	bcf	3,6	;RP1=0, select bank0
  1563     0312  00BD               	movwf	sendMsg@res
  1564     0313                     l3429:
  1565                           
  1566                           ;mcp2515_can.c: 1244:         uiTimeOut++;
  1567     0313  3001               	movlw	1
  1568     0314  07C0               	addwf	sendMsg@uiTimeOut,f
  1569     0315  1803               	skipnc
  1570     0316  0AC1               	incf	sendMsg@uiTimeOut+1,f
  1571     0317  3000               	movlw	0
  1572     0318  07C1               	addwf	sendMsg@uiTimeOut+1,f
  1573     0319                     l3431:
  1574                           
  1575                           ;mcp2515_can.c: 1245:     } while (res == (2) && (uiTimeOut < 50));
  1576     0319  3002               	movlw	2
  1577     031A  063D               	xorwf	sendMsg@res,w
  1578     031B  1D03               	btfss	3,2
  1579     031C  2B1E               	goto	u1521
  1580     031D  2B1F               	goto	u1520
  1581     031E                     u1521:
  1582     031E  2B28               	goto	l3435
  1583     031F                     u1520:
  1584     031F                     l3433:
  1585     031F  3000               	movlw	0
  1586     0320  0241               	subwf	sendMsg@uiTimeOut+1,w
  1587     0321  3032               	movlw	50
  1588     0322  1903               	skipnz
  1589     0323  0240               	subwf	sendMsg@uiTimeOut,w
  1590     0324  1C03               	skipc
  1591     0325  2B27               	goto	u1531
  1592     0326  2B28               	goto	u1530
  1593     0327                     u1531:
  1594     0327  2AF9               	goto	l3423
  1595     0328                     u1530:
  1596     0328                     l3435:
  1597                           
  1598                           ;mcp2515_can.c: 1247:     if (uiTimeOut == 50) {
  1599     0328  3032               	movlw	50
  1600     0329  0640               	xorwf	sendMsg@uiTimeOut,w
  1601     032A  0441               	iorwf	sendMsg@uiTimeOut+1,w
  1602     032B  1D03               	btfss	3,2
  1603     032C  2B2E               	goto	u1541
  1604     032D  2B2F               	goto	u1540
  1605     032E                     u1541:
  1606     032E  2B31               	goto	l3441
  1607     032F                     u1540:
  1608     032F                     l3437:
  1609                           
  1610                           ;mcp2515_can.c: 1248:         return (6);
  1611     032F  3006               	movlw	6
  1612     0330  2B8E               	goto	l354
  1613     0331                     l3441:
  1614                           
  1615                           ;mcp2515_can.c: 1250:     mcp2515_write_canMsg(txbuf_n, id, ext, rtrBit, len, buf);
  1616     0331  0835               	movf	sendMsg@id+3,w
  1617     0332  00A3               	movwf	mcp2515_write_canMsg@id+3
  1618     0333  0834               	movf	sendMsg@id+2,w
  1619     0334  00A2               	movwf	mcp2515_write_canMsg@id+2
  1620     0335  0833               	movf	sendMsg@id+1,w
  1621     0336  00A1               	movwf	mcp2515_write_canMsg@id+1
  1622     0337  0832               	movf	sendMsg@id,w
  1623     0338  00A0               	movwf	mcp2515_write_canMsg@id
  1624     0339  0836               	movf	sendMsg@ext,w
  1625     033A  00A4               	movwf	mcp2515_write_canMsg@ext
  1626     033B  0837               	movf	sendMsg@rtrBit,w
  1627     033C  00A5               	movwf	mcp2515_write_canMsg@rtrBit
  1628     033D  0838               	movf	sendMsg@len,w
  1629     033E  00A6               	movwf	mcp2515_write_canMsg@len
  1630     033F  0839               	movf	sendMsg@buf,w
  1631     0340  00A7               	movwf	mcp2515_write_canMsg@buf
  1632     0341  083F               	movf	sendMsg@txbuf_n,w
  1633     0342  120A  118A  21DC  120A  118A  	fcall	_mcp2515_write_canMsg
  1634     0347                     l3443:
  1635                           
  1636                           ;mcp2515_can.c: 1252:     if (wait_sent) {
  1637     0347  1283               	bcf	3,5	;RP0=0, select bank0
  1638     0348  1303               	bcf	3,6	;RP1=0, select bank0
  1639     0349  083A               	movf	sendMsg@wait_sent,w
  1640     034A  1903               	btfsc	3,2
  1641     034B  2B4D               	goto	u1551
  1642     034C  2B4E               	goto	u1550
  1643     034D                     u1551:
  1644     034D  2B8D               	goto	l3465
  1645     034E                     u1550:
  1646     034E                     l3445:
  1647                           
  1648                           ;mcp2515_can.c: 1253:         uiTimeOut = 0;
  1649     034E  01C0               	clrf	sendMsg@uiTimeOut
  1650     034F  01C1               	clrf	sendMsg@uiTimeOut+1
  1651     0350                     l3447:
  1652                           
  1653                           ;mcp2515_can.c: 1255:             if (uiTimeOut > 0) {
  1654     0350  0840               	movf	sendMsg@uiTimeOut,w
  1655     0351  0441               	iorwf	sendMsg@uiTimeOut+1,w
  1656     0352  1903               	btfsc	3,2
  1657     0353  2B55               	goto	u1561
  1658     0354  2B56               	goto	u1560
  1659     0355                     u1561:
  1660     0355  2B61               	goto	l357
  1661     0356                     u1560:
  1662     0356                     l3449:
  1663                           
  1664                           ;mcp2515_can.c: 1256:                 _delay((unsigned long)((10)*(20000000/4000.0)));
  1665     0356  3041               	movlw	65
  1666     0357  1283               	bcf	3,5	;RP0=0, select bank0
  1667     0358  1303               	bcf	3,6	;RP1=0, select bank0
  1668     0359  00BC               	movwf	??_sendMsg+1
  1669     035A  30ED               	movlw	237
  1670     035B  00BB               	movwf	??_sendMsg
  1671     035C                     u2167:
  1672     035C  0BBB               	decfsz	??_sendMsg,f
  1673     035D  2B5C               	goto	u2167
  1674     035E  0BBC               	decfsz	??_sendMsg+1,f
  1675     035F  2B5C               	goto	u2167
  1676     0360  2B61               	nop2
  1677     0361                     l357:	
  1678                           ;mcp2515_can.c: 1257:             }
  1679                           
  1680                           
  1681                           ;mcp2515_can.c: 1258:             uiTimeOut++;
  1682     0361  3001               	movlw	1
  1683     0362  1283               	bcf	3,5	;RP0=0, select bank0
  1684     0363  1303               	bcf	3,6	;RP1=0, select bank0
  1685     0364  07C0               	addwf	sendMsg@uiTimeOut,f
  1686     0365  1803               	skipnc
  1687     0366  0AC1               	incf	sendMsg@uiTimeOut+1,f
  1688     0367  3000               	movlw	0
  1689     0368  07C1               	addwf	sendMsg@uiTimeOut+1,f
  1690     0369                     l3451:
  1691                           
  1692                           ;mcp2515_can.c: 1259:             res1 = mcp2515_readRegister(txbuf_n - 1);
  1693     0369  083F               	movf	sendMsg@txbuf_n,w
  1694     036A  3EFF               	addlw	255
  1695     036B  120A  158A  266A  120A  118A  	fcall	_mcp2515_readRegister
  1696     0370  1283               	bcf	3,5	;RP0=0, select bank0
  1697     0371  1303               	bcf	3,6	;RP1=0, select bank0
  1698     0372  00BE               	movwf	sendMsg@res1
  1699     0373                     l3453:
  1700                           
  1701                           ;mcp2515_can.c: 1260:             res1 = res1 & 0x08;
  1702     0373  083E               	movf	sendMsg@res1,w
  1703     0374  3908               	andlw	8
  1704     0375  00BE               	movwf	sendMsg@res1
  1705     0376                     l3455:
  1706                           
  1707                           ;mcp2515_can.c: 1261:         } while (res1 && (uiTimeOut < 50));
  1708     0376  083E               	movf	sendMsg@res1,w
  1709     0377  1903               	btfsc	3,2
  1710     0378  2B7A               	goto	u1571
  1711     0379  2B7B               	goto	u1570
  1712     037A                     u1571:
  1713     037A  2B84               	goto	l3459
  1714     037B                     u1570:
  1715     037B                     l3457:
  1716     037B  3000               	movlw	0
  1717     037C  0241               	subwf	sendMsg@uiTimeOut+1,w
  1718     037D  3032               	movlw	50
  1719     037E  1903               	skipnz
  1720     037F  0240               	subwf	sendMsg@uiTimeOut,w
  1721     0380  1C03               	skipc
  1722     0381  2B83               	goto	u1581
  1723     0382  2B84               	goto	u1580
  1724     0383                     u1581:
  1725     0383  2B50               	goto	l3447
  1726     0384                     u1580:
  1727     0384                     l3459:
  1728                           
  1729                           ;mcp2515_can.c: 1263:         if (uiTimeOut == 50) {
  1730     0384  3032               	movlw	50
  1731     0385  0640               	xorwf	sendMsg@uiTimeOut,w
  1732     0386  0441               	iorwf	sendMsg@uiTimeOut+1,w
  1733     0387  1D03               	btfss	3,2
  1734     0388  2B8A               	goto	u1591
  1735     0389  2B8B               	goto	u1590
  1736     038A                     u1591:
  1737     038A  2B8D               	goto	l3465
  1738     038B                     u1590:
  1739     038B                     l3461:
  1740                           
  1741                           ;mcp2515_can.c: 1264:             return (7);
  1742     038B  3007               	movlw	7
  1743     038C  2B8E               	goto	l354
  1744     038D                     l3465:
  1745                           
  1746                           ;mcp2515_can.c: 1268:     return (0);
  1747     038D  3000               	movlw	0
  1748     038E                     l354:
  1749     038E  0008               	return
  1750     038F                     __end_of_sendMsg:
  1751                           
  1752                           	psect	text3
  1753     01DC                     __ptext3:	
  1754 ;; *************** function _mcp2515_write_canMsg *****************
  1755 ;; Defined at:
  1756 ;;		line 918 in file "mcp2515_can.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  buffer_sidh_    1    wreg     const unsigned char 
  1759 ;;  id              4    0[BANK0 ] unsigned long 
  1760 ;;  ext             1    4[BANK0 ] unsigned char 
  1761 ;;  rtrBit          1    5[BANK0 ] unsigned char 
  1762 ;;  len             1    6[BANK0 ] unsigned char 
  1763 ;;  buf             1    7[BANK0 ] PTR  unsigned char 
  1764 ;;		 -> stmp(8), 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  buffer_sidh_    1   16[BANK0 ] const unsigned char 
  1767 ;;  tbufdata        4   12[BANK0 ] unsigned char [4]
  1768 ;;  i               1   17[BANK0 ] unsigned char 
  1769 ;;  dlc             1   11[BANK0 ] unsigned char 
  1770 ;;  load_addr       1   10[BANK0 ] unsigned char 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1780 ;;      Params:         0       8       0       0       0
  1781 ;;      Locals:         0      10       0       0       0
  1782 ;;      Temps:          1       0       0       0       0
  1783 ;;      Totals:         1      18       0       0       0
  1784 ;;Total ram usage:       19 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; Hardware stack levels required when called: 2
  1787 ;; This function calls:
  1788 ;;		_WriteSPI
  1789 ;;		_mcp2515_id_to_buf
  1790 ;;		_mcp2515_start_transmit
  1791 ;;		_txSidhToTxLoad
  1792 ;; This function is called by:
  1793 ;;		_sendMsg
  1794 ;;		_sendMsgBuf1
  1795 ;;		_trySendMsgBuf
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799     01DC                     _mcp2515_write_canMsg:	
  1800                           ;psect for function _mcp2515_write_canMsg
  1801                           
  1802                           
  1803                           ;incstack = 0
  1804                           ; Regs used in _mcp2515_write_canMsg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  1805                           ;mcp2515_write_canMsg@buffer_sidh_addr stored from wreg
  1806     01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1807     01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1808     01DE  00B0               	movwf	mcp2515_write_canMsg@buffer_sidh_addr
  1809     01DF                     l3221:
  1810                           
  1811                           ;mcp2515_can.c: 918: void mcp2515_write_canMsg(const unsigned char buffer_sidh_addr, uns
      +                          igned long id, unsigned char ext, unsigned char rtrBit, unsigned char len,;mcp2515_can.c
      +                          : 919:                                    volatile const unsigned char* buf) {;mcp2515_c
      +                          an.c: 920:     unsigned char load_addr = txSidhToTxLoad(buffer_sidh_addr);
  1812     01DF  0830               	movf	mcp2515_write_canMsg@buffer_sidh_addr,w
  1813     01E0  120A  158A  26F8  120A  118A  	fcall	_txSidhToTxLoad
  1814     01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1815     01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1816     01E7  00AA               	movwf	mcp2515_write_canMsg@load_addr
  1817     01E8                     l3223:
  1818                           
  1819                           ;mcp2515_can.c: 922:     unsigned char tbufdata[4];;mcp2515_can.c: 923:     unsigned cha
      +                          r dlc = len | (rtrBit ? 0x40 : 0) ;
  1820     01E8  0825               	movf	mcp2515_write_canMsg@rtrBit,w
  1821     01E9  1D03               	btfss	3,2
  1822     01EA  29EC               	goto	u1241
  1823     01EB  29ED               	goto	u1240
  1824     01EC                     u1241:
  1825     01EC  29F0               	goto	l3227
  1826     01ED                     u1240:
  1827     01ED                     l3225:
  1828     01ED  01A8               	clrf	_mcp2515_write_canMsg$210
  1829     01EE  01A9               	clrf	_mcp2515_write_canMsg$210+1
  1830     01EF  29F4               	goto	l3229
  1831     01F0                     l3227:
  1832     01F0  3040               	movlw	64
  1833     01F1  00A8               	movwf	_mcp2515_write_canMsg$210
  1834     01F2  3000               	movlw	0
  1835     01F3  00A9               	movwf	_mcp2515_write_canMsg$210+1
  1836     01F4                     l3229:
  1837     01F4  0826               	movf	mcp2515_write_canMsg@len,w
  1838     01F5  0428               	iorwf	_mcp2515_write_canMsg$210,w
  1839     01F6  00AB               	movwf	mcp2515_write_canMsg@dlc
  1840     01F7                     l3231:
  1841                           
  1842                           ;mcp2515_can.c: 924:     unsigned char i;;mcp2515_can.c: 926:     mcp2515_id_to_buf(ext,
      +                           id, tbufdata);
  1843     01F7  0823               	movf	mcp2515_write_canMsg@id+3,w
  1844     01F8  00F3               	movwf	mcp2515_id_to_buf@id+3
  1845     01F9  0822               	movf	mcp2515_write_canMsg@id+2,w
  1846     01FA  00F2               	movwf	mcp2515_id_to_buf@id+2
  1847     01FB  0821               	movf	mcp2515_write_canMsg@id+1,w
  1848     01FC  00F1               	movwf	mcp2515_id_to_buf@id+1
  1849     01FD  0820               	movf	mcp2515_write_canMsg@id,w
  1850     01FE  00F0               	movwf	mcp2515_id_to_buf@id
  1851     01FF  302C               	movlw	(low (mcp2515_write_canMsg@tbufdata| 0))& (0+255)
  1852     0200  00F4               	movwf	mcp2515_id_to_buf@tbufdata
  1853     0201  0824               	movf	mcp2515_write_canMsg@ext,w
  1854     0202  120A  118A  2161  120A  118A  	fcall	_mcp2515_id_to_buf
  1855     0207                     l3233:
  1856                           
  1857                           ;mcp2515_can.c: 931:     RD0 = 0;;
  1858     0207  1283               	bcf	3,5	;RP0=0, select bank0
  1859     0208  1303               	bcf	3,6	;RP1=0, select bank0
  1860     0209  1008               	bcf	8,0	;volatile
  1861     020A                     l3235:
  1862                           
  1863                           ;mcp2515_can.c: 932:     WriteSPI(load_addr);
  1864     020A  082A               	movf	mcp2515_write_canMsg@load_addr,w
  1865     020B  120A  158A  2594  120A  118A  	fcall	_WriteSPI
  1866     0210                     l3237:
  1867                           
  1868                           ;mcp2515_can.c: 933:     for (i = 0; i < 4; i++) {
  1869     0210  1283               	bcf	3,5	;RP0=0, select bank0
  1870     0211  1303               	bcf	3,6	;RP1=0, select bank0
  1871     0212  01B1               	clrf	mcp2515_write_canMsg@i
  1872     0213                     l3243:
  1873                           
  1874                           ;mcp2515_can.c: 934:         WriteSPI(tbufdata[i]);
  1875     0213  0831               	movf	mcp2515_write_canMsg@i,w
  1876     0214  3E2C               	addlw	(low (mcp2515_write_canMsg@tbufdata| 0))& (0+255)
  1877     0215  0084               	movwf	4
  1878     0216  1383               	bcf	3,7	;select IRP bank0
  1879     0217  0800               	movf	0,w
  1880     0218  120A  158A  2594  120A  118A  	fcall	_WriteSPI
  1881     021D                     l3245:
  1882                           
  1883                           ;mcp2515_can.c: 935:     }
  1884     021D  3001               	movlw	1
  1885     021E  00FF               	movwf	btemp+1
  1886     021F  087F               	movf	btemp+1,w
  1887     0220  1283               	bcf	3,5	;RP0=0, select bank0
  1888     0221  1303               	bcf	3,6	;RP1=0, select bank0
  1889     0222  07B1               	addwf	mcp2515_write_canMsg@i,f
  1890     0223                     l3247:
  1891     0223  3004               	movlw	4
  1892     0224  0231               	subwf	mcp2515_write_canMsg@i,w
  1893     0225  1C03               	skipc
  1894     0226  2A28               	goto	u1251
  1895     0227  2A29               	goto	u1250
  1896     0228                     u1251:
  1897     0228  2A13               	goto	l3243
  1898     0229                     u1250:
  1899     0229                     l3249:
  1900                           
  1901                           ;mcp2515_can.c: 936:     WriteSPI(dlc);
  1902     0229  082B               	movf	mcp2515_write_canMsg@dlc,w
  1903     022A  120A  158A  2594  120A  118A  	fcall	_WriteSPI
  1904     022F                     l3251:
  1905                           
  1906                           ;mcp2515_can.c: 937:     for (i = 0; i < len && i < (8); i++) {
  1907     022F  1283               	bcf	3,5	;RP0=0, select bank0
  1908     0230  1303               	bcf	3,6	;RP1=0, select bank0
  1909     0231  01B1               	clrf	mcp2515_write_canMsg@i
  1910     0232  2A45               	goto	l3257
  1911     0233                     l3253:
  1912                           
  1913                           ;mcp2515_can.c: 938:         WriteSPI(buf[i]);
  1914     0233  0831               	movf	mcp2515_write_canMsg@i,w
  1915     0234  0727               	addwf	mcp2515_write_canMsg@buf,w
  1916     0235  00FC               	movwf	??_mcp2515_write_canMsg
  1917     0236  087C               	movf	??_mcp2515_write_canMsg,w
  1918     0237  0084               	movwf	4
  1919     0238  1383               	bcf	3,7	;select IRP bank0
  1920     0239  0800               	movf	0,w
  1921     023A  120A  158A  2594  120A  118A  	fcall	_WriteSPI
  1922     023F                     l3255:
  1923                           
  1924                           ;mcp2515_can.c: 939:     }
  1925     023F  3001               	movlw	1
  1926     0240  00FF               	movwf	btemp+1
  1927     0241  087F               	movf	btemp+1,w
  1928     0242  1283               	bcf	3,5	;RP0=0, select bank0
  1929     0243  1303               	bcf	3,6	;RP1=0, select bank0
  1930     0244  07B1               	addwf	mcp2515_write_canMsg@i,f
  1931     0245                     l3257:
  1932     0245  0826               	movf	mcp2515_write_canMsg@len,w
  1933     0246  0231               	subwf	mcp2515_write_canMsg@i,w
  1934     0247  1803               	skipnc
  1935     0248  2A4A               	goto	u1261
  1936     0249  2A4B               	goto	u1260
  1937     024A                     u1261:
  1938     024A  2A51               	goto	l274
  1939     024B                     u1260:
  1940     024B                     l3259:
  1941     024B  3008               	movlw	8
  1942     024C  0231               	subwf	mcp2515_write_canMsg@i,w
  1943     024D  1C03               	skipc
  1944     024E  2A50               	goto	u1271
  1945     024F  2A51               	goto	u1270
  1946     0250                     u1271:
  1947     0250  2A33               	goto	l3253
  1948     0251                     u1270:
  1949     0251                     l274:
  1950                           
  1951                           ;mcp2515_can.c: 941:     RD0 = 1;;
  1952     0251  1408               	bsf	8,0	;volatile
  1953     0252                     l3261:
  1954                           
  1955                           ;mcp2515_can.c: 946:     mcp2515_start_transmit(buffer_sidh_addr);
  1956     0252  0830               	movf	mcp2515_write_canMsg@buffer_sidh_addr,w
  1957     0253  120A  158A  25B7  120A  118A  	fcall	_mcp2515_start_transmit
  1958     0258                     l275:
  1959     0258  0008               	return
  1960     0259                     __end_of_mcp2515_write_canMsg:
  1961                           
  1962                           	psect	text4
  1963     0EF8                     __ptext4:	
  1964 ;; *************** function _txSidhToTxLoad *****************
  1965 ;; Defined at:
  1966 ;;		line 116 in file "mcp2515_can.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  sidh            1    wreg     unsigned char 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  sidh            1    2[COMMON] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      unsigned char 
  1973 ;; Registers used:
  1974 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1980 ;;      Params:         0       0       0       0       0
  1981 ;;      Locals:         1       0       0       0       0
  1982 ;;      Temps:          2       0       0       0       0
  1983 ;;      Totals:         3       0       0       0       0
  1984 ;;Total ram usage:        3 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_mcp2515_write_canMsg
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993     0EF8                     _txSidhToTxLoad:	
  1994                           ;psect for function _txSidhToTxLoad
  1995                           
  1996                           
  1997                           ;incstack = 0
  1998                           ; Regs used in _txSidhToTxLoad: [wreg-fsr0h+status,2+status,0]
  1999                           ;txSidhToTxLoad@sidh stored from wreg
  2000     0EF8  00F2               	movwf	txSidhToTxLoad@sidh
  2001     0EF9                     l2837:
  2002                           
  2003                           ;mcp2515_can.c: 117:     switch (sidh) {
  2004     0EF9  2F00               	goto	l2853
  2005     0EFA                     l2839:
  2006     0EFA  3040               	movlw	64
  2007     0EFB  2F14               	goto	l80
  2008     0EFC                     l2843:
  2009     0EFC  3042               	movlw	66
  2010     0EFD  2F14               	goto	l80
  2011     0EFE                     l2847:
  2012     0EFE  3044               	movlw	68
  2013     0EFF  2F14               	goto	l80
  2014     0F00                     l2853:
  2015     0F00  0872               	movf	txSidhToTxLoad@sidh,w
  2016     0F01  00F0               	movwf	??_txSidhToTxLoad
  2017     0F02  01F1               	clrf	??_txSidhToTxLoad+1
  2018                           
  2019                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2020                           ; Switch size 1, requested type "simple"
  2021                           ; Number of cases is 1, Range of values is 0 to 0
  2022                           ; switch strategies available:
  2023                           ; Name         Instructions Cycles
  2024                           ; simple_byte            4     3 (average)
  2025                           ; direct_byte           11     8 (fixed)
  2026                           ; jumptable            260     6 (fixed)
  2027                           ;	Chosen strategy is simple_byte
  2028     0F03  0871               	movf	??_txSidhToTxLoad+1,w
  2029     0F04  3A00               	xorlw	0	; case 0
  2030     0F05  1903               	skipnz
  2031     0F06  2F08               	goto	l4247
  2032     0F07  2F13               	goto	l2855
  2033     0F08                     l4247:
  2034                           
  2035                           ; Switch size 1, requested type "simple"
  2036                           ; Number of cases is 3, Range of values is 49 to 81
  2037                           ; switch strategies available:
  2038                           ; Name         Instructions Cycles
  2039                           ; simple_byte           10     6 (average)
  2040                           ; direct_byte          110    11 (fixed)
  2041                           ; jumptable            263     9 (fixed)
  2042                           ;	Chosen strategy is simple_byte
  2043     0F08  0870               	movf	??_txSidhToTxLoad,w
  2044     0F09  3A31               	xorlw	49	; case 49
  2045     0F0A  1903               	skipnz
  2046     0F0B  2EFA               	goto	l2839
  2047     0F0C  3A70               	xorlw	112	; case 65
  2048     0F0D  1903               	skipnz
  2049     0F0E  2EFC               	goto	l2843
  2050     0F0F  3A10               	xorlw	16	; case 81
  2051     0F10  1903               	skipnz
  2052     0F11  2EFE               	goto	l2847
  2053     0F12  2F13               	goto	l2855
  2054     0F13                     l2855:
  2055                           
  2056                           ;mcp2515_can.c: 122:     return 0;
  2057     0F13  3000               	movlw	0
  2058     0F14                     l80:
  2059     0F14  0008               	return
  2060     0F15                     __end_of_txSidhToTxLoad:
  2061                           
  2062                           	psect	text5
  2063     0DB7                     __ptext5:	
  2064 ;; *************** function _mcp2515_start_transmit *****************
  2065 ;; Defined at:
  2066 ;;		line 990 in file "mcp2515_can.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  mcp_addr        1    wreg     const unsigned char 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  mcp_addr        1    3[COMMON] const unsigned char 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2080 ;;      Params:         0       0       0       0       0
  2081 ;;      Locals:         1       0       0       0       0
  2082 ;;      Temps:          0       0       0       0       0
  2083 ;;      Totals:         1       0       0       0       0
  2084 ;;Total ram usage:        1 bytes
  2085 ;; Hardware stack levels used: 1
  2086 ;; Hardware stack levels required when called: 1
  2087 ;; This function calls:
  2088 ;;		_WriteSPI
  2089 ;;		_txSidhToRTS
  2090 ;; This function is called by:
  2091 ;;		_mcp2515_write_canMsg
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095     0DB7                     _mcp2515_start_transmit:	
  2096                           ;psect for function _mcp2515_start_transmit
  2097                           
  2098                           
  2099                           ;incstack = 0
  2100                           ; Regs used in _mcp2515_start_transmit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2101                           ;mcp2515_start_transmit@mcp_addr stored from wreg
  2102     0DB7  00F3               	movwf	mcp2515_start_transmit@mcp_addr
  2103     0DB8                     l2975:
  2104                           
  2105                           ;mcp2515_can.c: 994:     RD0 = 0;;
  2106     0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  2107     0DB9  1303               	bcf	3,6	;RP1=0, select bank0
  2108     0DBA  1008               	bcf	8,0	;volatile
  2109     0DBB                     l2977:
  2110                           
  2111                           ;mcp2515_can.c: 995:     WriteSPI(txSidhToRTS(mcp_addr));
  2112     0DBB  0873               	movf	mcp2515_start_transmit@mcp_addr,w
  2113     0DBC  120A  158A  26DB  120A  158A  	fcall	_txSidhToRTS
  2114     0DC1  120A  158A  2594  120A  158A  	fcall	_WriteSPI
  2115     0DC6                     l2979:
  2116                           
  2117                           ;mcp2515_can.c: 996:     RD0 = 1;;
  2118     0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  2119     0DC7  1303               	bcf	3,6	;RP1=0, select bank0
  2120     0DC8  1408               	bsf	8,0	;volatile
  2121     0DC9                     l289:
  2122     0DC9  0008               	return
  2123     0DCA                     __end_of_mcp2515_start_transmit:
  2124                           
  2125                           	psect	text6
  2126     0EDB                     __ptext6:	
  2127 ;; *************** function _txSidhToRTS *****************
  2128 ;; Defined at:
  2129 ;;		line 103 in file "mcp2515_can.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  sidh            1    wreg     unsigned char 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  sidh            1    2[COMMON] unsigned char 
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      unsigned char 
  2136 ;; Registers used:
  2137 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2143 ;;      Params:         0       0       0       0       0
  2144 ;;      Locals:         1       0       0       0       0
  2145 ;;      Temps:          2       0       0       0       0
  2146 ;;      Totals:         3       0       0       0       0
  2147 ;;Total ram usage:        3 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; This function calls:
  2150 ;;		Nothing
  2151 ;; This function is called by:
  2152 ;;		_mcp2515_start_transmit
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156     0EDB                     _txSidhToRTS:	
  2157                           ;psect for function _txSidhToRTS
  2158                           
  2159                           
  2160                           ;incstack = 0
  2161                           ; Regs used in _txSidhToRTS: [wreg-fsr0h+status,2+status,0]
  2162                           ;txSidhToRTS@sidh stored from wreg
  2163     0EDB  00F2               	movwf	txSidhToRTS@sidh
  2164     0EDC                     l2757:
  2165                           
  2166                           ;mcp2515_can.c: 104:     switch (sidh) {
  2167     0EDC  2EE3               	goto	l2773
  2168     0EDD                     l2759:
  2169     0EDD  3081               	movlw	129
  2170     0EDE  2EF7               	goto	l72
  2171     0EDF                     l2763:
  2172     0EDF  3082               	movlw	130
  2173     0EE0  2EF7               	goto	l72
  2174     0EE1                     l2767:
  2175     0EE1  3084               	movlw	132
  2176     0EE2  2EF7               	goto	l72
  2177     0EE3                     l2773:
  2178     0EE3  0872               	movf	txSidhToRTS@sidh,w
  2179     0EE4  00F0               	movwf	??_txSidhToRTS
  2180     0EE5  01F1               	clrf	??_txSidhToRTS+1
  2181                           
  2182                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2183                           ; Switch size 1, requested type "simple"
  2184                           ; Number of cases is 1, Range of values is 0 to 0
  2185                           ; switch strategies available:
  2186                           ; Name         Instructions Cycles
  2187                           ; simple_byte            4     3 (average)
  2188                           ; direct_byte           11     8 (fixed)
  2189                           ; jumptable            260     6 (fixed)
  2190                           ;	Chosen strategy is simple_byte
  2191     0EE6  0871               	movf	??_txSidhToRTS+1,w
  2192     0EE7  3A00               	xorlw	0	; case 0
  2193     0EE8  1903               	skipnz
  2194     0EE9  2EEB               	goto	l4249
  2195     0EEA  2EF6               	goto	l2775
  2196     0EEB                     l4249:
  2197                           
  2198                           ; Switch size 1, requested type "simple"
  2199                           ; Number of cases is 3, Range of values is 49 to 81
  2200                           ; switch strategies available:
  2201                           ; Name         Instructions Cycles
  2202                           ; simple_byte           10     6 (average)
  2203                           ; direct_byte          110    11 (fixed)
  2204                           ; jumptable            263     9 (fixed)
  2205                           ;	Chosen strategy is simple_byte
  2206     0EEB  0870               	movf	??_txSidhToRTS,w
  2207     0EEC  3A31               	xorlw	49	; case 49
  2208     0EED  1903               	skipnz
  2209     0EEE  2EDD               	goto	l2759
  2210     0EEF  3A70               	xorlw	112	; case 65
  2211     0EF0  1903               	skipnz
  2212     0EF1  2EDF               	goto	l2763
  2213     0EF2  3A10               	xorlw	16	; case 81
  2214     0EF3  1903               	skipnz
  2215     0EF4  2EE1               	goto	l2767
  2216     0EF5  2EF6               	goto	l2775
  2217     0EF6                     l2775:
  2218                           
  2219                           ;mcp2515_can.c: 109:     return 0;
  2220     0EF6  3000               	movlw	0
  2221     0EF7                     l72:
  2222     0EF7  0008               	return
  2223     0EF8                     __end_of_txSidhToRTS:
  2224                           
  2225                           	psect	text7
  2226     0161                     __ptext7:	
  2227 ;; *************** function _mcp2515_id_to_buf *****************
  2228 ;; Defined at:
  2229 ;;		line 858 in file "mcp2515_can.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;  ext             1    wreg     const unsigned char 
  2232 ;;  id              4    0[COMMON] const unsigned long 
  2233 ;;  tbufdata        1    4[COMMON] PTR unsigned char 
  2234 ;;		 -> mcp2515_write_canMsg@tbufdata(4), mcp2515_write_id@tbufdata(4), 
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;  ext             1    9[COMMON] const unsigned char 
  2237 ;;  canid           2   10[COMMON] unsigned short 
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      void 
  2240 ;; Registers used:
  2241 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2247 ;;      Params:         5       0       0       0       0
  2248 ;;      Locals:         3       0       0       0       0
  2249 ;;      Temps:          4       0       0       0       0
  2250 ;;      Totals:        12       0       0       0       0
  2251 ;;Total ram usage:       12 bytes
  2252 ;; Hardware stack levels used: 1
  2253 ;; This function calls:
  2254 ;;		Nothing
  2255 ;; This function is called by:
  2256 ;;		_mcp2515_write_canMsg
  2257 ;;		_mcp2515_write_id
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261     0161                     _mcp2515_id_to_buf:	
  2262                           ;psect for function _mcp2515_id_to_buf
  2263                           
  2264                           
  2265                           ;incstack = 0
  2266                           ; Regs used in _mcp2515_id_to_buf: [wreg-fsr0h+status,2+status,0+btemp+1]
  2267                           ;mcp2515_id_to_buf@ext stored from wreg
  2268     0161  00F9               	movwf	mcp2515_id_to_buf@ext
  2269     0162                     l2957:
  2270                           
  2271                           ;mcp2515_can.c: 859:     uint16_t canid;;mcp2515_can.c: 861:     canid = (uint16_t)(id &
      +                           0x0FFFF);
  2272     0162  0871               	movf	mcp2515_id_to_buf@id+1,w
  2273     0163  00FB               	movwf	mcp2515_id_to_buf@canid+1
  2274     0164  0870               	movf	mcp2515_id_to_buf@id,w
  2275     0165  00FA               	movwf	mcp2515_id_to_buf@canid
  2276     0166                     l2959:
  2277                           
  2278                           ;mcp2515_can.c: 863:     if (ext == 1) {
  2279     0166  0379               	decf	mcp2515_id_to_buf@ext,w
  2280     0167  1D03               	btfss	3,2
  2281     0168  296A               	goto	u1161
  2282     0169  296B               	goto	u1160
  2283     016A                     u1161:
  2284     016A  29B3               	goto	l2973
  2285     016B                     u1160:
  2286     016B                     l2961:
  2287                           
  2288                           ;mcp2515_can.c: 864:         tbufdata[3] = (unsigned char)(canid & 0xFF);
  2289     016B  0874               	movf	mcp2515_id_to_buf@tbufdata,w
  2290     016C  3E03               	addlw	3
  2291     016D  0084               	movwf	4
  2292     016E  087A               	movf	mcp2515_id_to_buf@canid,w
  2293     016F  1383               	bcf	3,7	;select IRP bank0
  2294     0170  0080               	movwf	0
  2295                           
  2296                           ;mcp2515_can.c: 865:         tbufdata[2] = (unsigned char)(canid >> 8);
  2297     0171  0874               	movf	mcp2515_id_to_buf@tbufdata,w
  2298     0172  3E02               	addlw	2
  2299     0173  0084               	movwf	4
  2300     0174  087B               	movf	mcp2515_id_to_buf@canid+1,w
  2301     0175  0080               	movwf	0
  2302     0176                     l2963:
  2303                           
  2304                           ;mcp2515_can.c: 866:         canid = (uint16_t)(id >> 16);
  2305     0176  0870               	movf	mcp2515_id_to_buf@id,w
  2306     0177  00F5               	movwf	??_mcp2515_id_to_buf
  2307     0178  0871               	movf	mcp2515_id_to_buf@id+1,w
  2308     0179  00F6               	movwf	??_mcp2515_id_to_buf+1
  2309     017A  0872               	movf	mcp2515_id_to_buf@id+2,w
  2310     017B  00F7               	movwf	??_mcp2515_id_to_buf+2
  2311     017C  0873               	movf	mcp2515_id_to_buf@id+3,w
  2312     017D  00F8               	movwf	??_mcp2515_id_to_buf+3
  2313     017E  3010               	movlw	16
  2314     017F                     u1175:
  2315     017F  1003               	clrc
  2316     0180  0CF8               	rrf	??_mcp2515_id_to_buf+3,f
  2317     0181  0CF7               	rrf	??_mcp2515_id_to_buf+2,f
  2318     0182  0CF6               	rrf	??_mcp2515_id_to_buf+1,f
  2319     0183  0CF5               	rrf	??_mcp2515_id_to_buf,f
  2320     0184                     u1170:
  2321     0184  3EFF               	addlw	-1
  2322     0185  1D03               	skipz
  2323     0186  297F               	goto	u1175
  2324     0187  0876               	movf	??_mcp2515_id_to_buf+1,w
  2325     0188  00FB               	movwf	mcp2515_id_to_buf@canid+1
  2326     0189  0875               	movf	??_mcp2515_id_to_buf,w
  2327     018A  00FA               	movwf	mcp2515_id_to_buf@canid
  2328     018B                     l2965:
  2329                           
  2330                           ;mcp2515_can.c: 867:         tbufdata[1] = (unsigned char)(canid & 0x03);
  2331     018B  0A74               	incf	mcp2515_id_to_buf@tbufdata,w
  2332     018C  0084               	movwf	4
  2333     018D  087A               	movf	mcp2515_id_to_buf@canid,w
  2334     018E  3903               	andlw	3
  2335     018F  0080               	movwf	0
  2336     0190                     l2967:
  2337                           
  2338                           ;mcp2515_can.c: 868:         tbufdata[1] += (unsigned char)((canid & 0x1C) << 3);
  2339     0190  087A               	movf	mcp2515_id_to_buf@canid,w
  2340     0191  391C               	andlw	28
  2341     0192  00F5               	movwf	??_mcp2515_id_to_buf
  2342     0193  3002               	movlw	2
  2343     0194                     u1185:
  2344     0194  1003               	clrc
  2345     0195  0DF5               	rlf	??_mcp2515_id_to_buf,f
  2346     0196  3EFF               	addlw	-1
  2347     0197  1D03               	skipz
  2348     0198  2994               	goto	u1185
  2349     0199  1003               	clrc
  2350     019A  0D75               	rlf	??_mcp2515_id_to_buf,w
  2351     019B  00FF               	movwf	btemp+1
  2352     019C  0A74               	incf	mcp2515_id_to_buf@tbufdata,w
  2353     019D  0084               	movwf	4
  2354     019E  087F               	movf	btemp+1,w
  2355     019F  0780               	addwf	0,f
  2356     01A0                     l2969:
  2357                           
  2358                           ;mcp2515_can.c: 869:         tbufdata[1] |= 0x08;
  2359     01A0  0A74               	incf	mcp2515_id_to_buf@tbufdata,w
  2360     01A1  0084               	movwf	4
  2361     01A2  1580               	bsf	0,3
  2362     01A3                     l2971:
  2363                           
  2364                           ;mcp2515_can.c: 870:         tbufdata[0] = (unsigned char)(canid >> 5);
  2365     01A3  0874               	movf	mcp2515_id_to_buf@tbufdata,w
  2366     01A4  0084               	movwf	4
  2367     01A5  087B               	movf	mcp2515_id_to_buf@canid+1,w
  2368     01A6  00F6               	movwf	??_mcp2515_id_to_buf+1
  2369     01A7  087A               	movf	mcp2515_id_to_buf@canid,w
  2370     01A8  00F5               	movwf	??_mcp2515_id_to_buf
  2371     01A9  3005               	movlw	5
  2372     01AA                     u1195:
  2373     01AA  1003               	clrc
  2374     01AB  0CF6               	rrf	??_mcp2515_id_to_buf+1,f
  2375     01AC  0CF5               	rrf	??_mcp2515_id_to_buf,f
  2376     01AD  3EFF               	addlw	-1
  2377     01AE  1D03               	skipz
  2378     01AF  29AA               	goto	u1195
  2379     01B0  0875               	movf	??_mcp2515_id_to_buf,w
  2380     01B1  0080               	movwf	0
  2381                           
  2382                           ;mcp2515_can.c: 871:     } else {
  2383     01B2  29DB               	goto	l254
  2384     01B3                     l2973:
  2385                           
  2386                           ;mcp2515_can.c: 872:         tbufdata[0] = (unsigned char)(canid >> 3);
  2387     01B3  0874               	movf	mcp2515_id_to_buf@tbufdata,w
  2388     01B4  0084               	movwf	4
  2389     01B5  087B               	movf	mcp2515_id_to_buf@canid+1,w
  2390     01B6  00F6               	movwf	??_mcp2515_id_to_buf+1
  2391     01B7  087A               	movf	mcp2515_id_to_buf@canid,w
  2392     01B8  00F5               	movwf	??_mcp2515_id_to_buf
  2393     01B9  1003               	clrc
  2394     01BA  0CF6               	rrf	??_mcp2515_id_to_buf+1,f
  2395     01BB  0CF5               	rrf	??_mcp2515_id_to_buf,f
  2396     01BC  1003               	clrc
  2397     01BD  0CF6               	rrf	??_mcp2515_id_to_buf+1,f
  2398     01BE  0CF5               	rrf	??_mcp2515_id_to_buf,f
  2399     01BF  1003               	clrc
  2400     01C0  0CF6               	rrf	??_mcp2515_id_to_buf+1,f
  2401     01C1  0CF5               	rrf	??_mcp2515_id_to_buf,f
  2402     01C2  0875               	movf	??_mcp2515_id_to_buf,w
  2403     01C3  1383               	bcf	3,7	;select IRP bank0
  2404     01C4  0080               	movwf	0
  2405                           
  2406                           ;mcp2515_can.c: 873:         tbufdata[1] = (unsigned char)((canid & 0x07) << 5);
  2407     01C5  0A74               	incf	mcp2515_id_to_buf@tbufdata,w
  2408     01C6  0084               	movwf	4
  2409     01C7  087A               	movf	mcp2515_id_to_buf@canid,w
  2410     01C8  3907               	andlw	7
  2411     01C9  00F5               	movwf	??_mcp2515_id_to_buf
  2412     01CA  3004               	movlw	4
  2413     01CB                     u1205:
  2414     01CB  1003               	clrc
  2415     01CC  0DF5               	rlf	??_mcp2515_id_to_buf,f
  2416     01CD  3EFF               	addlw	-1
  2417     01CE  1D03               	skipz
  2418     01CF  29CB               	goto	u1205
  2419     01D0  1003               	clrc
  2420     01D1  0D75               	rlf	??_mcp2515_id_to_buf,w
  2421     01D2  0080               	movwf	0
  2422                           
  2423                           ;mcp2515_can.c: 874:         tbufdata[3] = 0;
  2424     01D3  0874               	movf	mcp2515_id_to_buf@tbufdata,w
  2425     01D4  3E03               	addlw	3
  2426     01D5  0084               	movwf	4
  2427     01D6  0180               	clrf	0
  2428                           
  2429                           ;mcp2515_can.c: 875:         tbufdata[2] = 0;
  2430     01D7  0874               	movf	mcp2515_id_to_buf@tbufdata,w
  2431     01D8  3E02               	addlw	2
  2432     01D9  0084               	movwf	4
  2433     01DA  0180               	clrf	0
  2434     01DB                     l254:
  2435     01DB  0008               	return
  2436     01DC                     __end_of_mcp2515_id_to_buf:
  2437                           
  2438                           	psect	text8
  2439     000A                     __ptext8:	
  2440 ;; *************** function _mcp2515_getNextFreeTXBuf *****************
  2441 ;; Defined at:
  2442 ;;		line 1024 in file "mcp2515_can.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  txbuf_n         1    wreg     PTR unsigned char 
  2445 ;;		 -> sendMsg@txbuf_n(1), trySendMsgBuf@txbuf_n(1), 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  txbuf_n         1    7[COMMON] PTR unsigned char 
  2448 ;;		 -> sendMsg@txbuf_n(1), trySendMsgBuf@txbuf_n(1), 
  2449 ;;  i               1    8[COMMON] unsigned char 
  2450 ;;  status          1    6[COMMON] unsigned char 
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      unsigned char 
  2453 ;; Registers used:
  2454 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2460 ;;      Params:         0       0       0       0       0
  2461 ;;      Locals:         3       0       0       0       0
  2462 ;;      Temps:          0       0       0       0       0
  2463 ;;      Totals:         3       0       0       0       0
  2464 ;;Total ram usage:        3 bytes
  2465 ;; Hardware stack levels used: 1
  2466 ;; Hardware stack levels required when called: 2
  2467 ;; This function calls:
  2468 ;;		_mcp2515_modifyRegister
  2469 ;;		_mcp2515_readStatus
  2470 ;;		_txCtrlReg
  2471 ;;		_txIfFlag
  2472 ;;		_txStatusPendingFlag
  2473 ;; This function is called by:
  2474 ;;		_sendMsg
  2475 ;;		_trySendMsgBuf
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479     000A                     _mcp2515_getNextFreeTXBuf:	
  2480                           ;psect for function _mcp2515_getNextFreeTXBuf
  2481                           
  2482                           
  2483                           ;incstack = 0
  2484                           ; Regs used in _mcp2515_getNextFreeTXBuf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  2485                           ;mcp2515_getNextFreeTXBuf@txbuf_n stored from wreg
  2486     000A  00F7               	movwf	mcp2515_getNextFreeTXBuf@txbuf_n
  2487     000B                     l3305:
  2488                           
  2489                           ;mcp2515_can.c: 1025:     unsigned char status = mcp2515_readStatus() & (0x54);
  2490     000B  120A  158A  25DD  120A  118A  	fcall	_mcp2515_readStatus
  2491     0010  3954               	andlw	84
  2492     0011  00F6               	movwf	mcp2515_getNextFreeTXBuf@status
  2493     0012                     l3307:
  2494                           
  2495                           ;mcp2515_can.c: 1026:     unsigned char i;;mcp2515_can.c: 1028:     *txbuf_n = 0x00;
  2496     0012  0877               	movf	mcp2515_getNextFreeTXBuf@txbuf_n,w
  2497     0013  0084               	movwf	4
  2498     0014  1383               	bcf	3,7	;select IRP bank0
  2499     0015  0180               	clrf	0
  2500     0016                     l3309:
  2501                           
  2502                           ;mcp2515_can.c: 1030:     if (status == (0x54)) {
  2503     0016  3054               	movlw	84
  2504     0017  0676               	xorwf	mcp2515_getNextFreeTXBuf@status,w
  2505     0018  1D03               	btfss	3,2
  2506     0019  281B               	goto	u1411
  2507     001A  281C               	goto	u1410
  2508     001B                     u1411:
  2509     001B  281E               	goto	l3315
  2510     001C                     u1410:
  2511     001C                     l3311:
  2512                           
  2513                           ;mcp2515_can.c: 1031:         return (2);
  2514     001C  3002               	movlw	2
  2515     001D  2853               	goto	l299
  2516     001E                     l3315:
  2517                           
  2518                           ;mcp2515_can.c: 1035:     for (i = 0; i < (3) - nReservedTx; i++) {
  2519     001E  01F8               	clrf	mcp2515_getNextFreeTXBuf@i
  2520     001F  284C               	goto	l3329
  2521     0020                     l3317:
  2522                           
  2523                           ;mcp2515_can.c: 1036:         if ((status & txStatusPendingFlag(i)) == 0) {
  2524     0020  0878               	movf	mcp2515_getNextFreeTXBuf@i,w
  2525     0021  120A  158A  26BE  120A  118A  	fcall	_txStatusPendingFlag
  2526     0026  0576               	andwf	mcp2515_getNextFreeTXBuf@status,w
  2527     0027  1D03               	btfss	3,2
  2528     0028  282A               	goto	u1421
  2529     0029  282B               	goto	u1420
  2530     002A                     u1421:
  2531     002A  2848               	goto	l3327
  2532     002B                     u1420:
  2533     002B                     l3319:
  2534                           
  2535                           ;mcp2515_can.c: 1037:             *txbuf_n = txCtrlReg(i) + 1;
  2536     002B  0878               	movf	mcp2515_getNextFreeTXBuf@i,w
  2537     002C  120A  158A  2685  120A  118A  	fcall	_txCtrlReg
  2538     0031  3E01               	addlw	1
  2539     0032  00FF               	movwf	btemp+1
  2540     0033  0877               	movf	mcp2515_getNextFreeTXBuf@txbuf_n,w
  2541     0034  0084               	movwf	4
  2542     0035  087F               	movf	btemp+1,w
  2543     0036  1383               	bcf	3,7	;select IRP bank0
  2544     0037  0080               	movwf	0
  2545     0038                     l3321:
  2546                           
  2547                           ;mcp2515_can.c: 1038:             mcp2515_modifyRegister(0x2C, txIfFlag(i), 0);
  2548     0038  0878               	movf	mcp2515_getNextFreeTXBuf@i,w
  2549     0039  120A  158A  26A1  120A  118A  	fcall	_txIfFlag
  2550     003E  00F3               	movwf	mcp2515_modifyRegister@mask
  2551     003F  01F4               	clrf	mcp2515_modifyRegister@data
  2552     0040  302C               	movlw	44
  2553     0041  120A  158A  2733  120A  118A  	fcall	_mcp2515_modifyRegister
  2554     0046                     l3323:
  2555                           
  2556                           ;mcp2515_can.c: 1039:             return (0);
  2557     0046  3000               	movlw	0
  2558     0047  2853               	goto	l299
  2559     0048                     l3327:
  2560                           
  2561                           ;mcp2515_can.c: 1041:     }
  2562     0048  3001               	movlw	1
  2563     0049  00FF               	movwf	btemp+1
  2564     004A  087F               	movf	btemp+1,w
  2565     004B  07F8               	addwf	mcp2515_getNextFreeTXBuf@i,f
  2566     004C                     l3329:
  2567     004C  3003               	movlw	3
  2568     004D  0278               	subwf	mcp2515_getNextFreeTXBuf@i,w
  2569     004E  1C03               	skipc
  2570     004F  2851               	goto	u1431
  2571     0050  2852               	goto	u1430
  2572     0051                     u1431:
  2573     0051  2820               	goto	l3317
  2574     0052                     u1430:
  2575     0052  281C               	goto	l3311
  2576     0053                     l299:
  2577     0053  0008               	return
  2578     0054                     __end_of_mcp2515_getNextFreeTXBuf:
  2579                           
  2580                           	psect	text9
  2581     0EBE                     __ptext9:	
  2582 ;; *************** function _txStatusPendingFlag *****************
  2583 ;; Defined at:
  2584 ;;		line 142 in file "mcp2515_can.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  i               1    wreg     unsigned char 
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;  i               1    2[COMMON] unsigned char 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      unsigned char 
  2591 ;; Registers used:
  2592 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2598 ;;      Params:         0       0       0       0       0
  2599 ;;      Locals:         1       0       0       0       0
  2600 ;;      Temps:          2       0       0       0       0
  2601 ;;      Totals:         3       0       0       0       0
  2602 ;;Total ram usage:        3 bytes
  2603 ;; Hardware stack levels used: 1
  2604 ;; This function calls:
  2605 ;;		Nothing
  2606 ;; This function is called by:
  2607 ;;		_mcp2515_getNextFreeTXBuf
  2608 ;;		_mcp2515_isTXBufFree
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612     0EBE                     _txStatusPendingFlag:	
  2613                           ;psect for function _txStatusPendingFlag
  2614                           
  2615                           
  2616                           ;incstack = 0
  2617                           ; Regs used in _txStatusPendingFlag: [wreg-fsr0h+status,2+status,0]
  2618                           ;txStatusPendingFlag@i stored from wreg
  2619     0EBE  00F2               	movwf	txStatusPendingFlag@i
  2620     0EBF                     l2889:
  2621                           
  2622                           ;mcp2515_can.c: 143:     switch (i) {
  2623     0EBF  2EC6               	goto	l2905
  2624     0EC0                     l2891:
  2625     0EC0  3004               	movlw	4
  2626     0EC1  2EDA               	goto	l96
  2627     0EC2                     l2895:
  2628     0EC2  3010               	movlw	16
  2629     0EC3  2EDA               	goto	l96
  2630     0EC4                     l2899:
  2631     0EC4  3040               	movlw	64
  2632     0EC5  2EDA               	goto	l96
  2633     0EC6                     l2905:
  2634     0EC6  0872               	movf	txStatusPendingFlag@i,w
  2635     0EC7  00F0               	movwf	??_txStatusPendingFlag
  2636     0EC8  01F1               	clrf	??_txStatusPendingFlag+1
  2637                           
  2638                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2639                           ; Switch size 1, requested type "simple"
  2640                           ; Number of cases is 1, Range of values is 0 to 0
  2641                           ; switch strategies available:
  2642                           ; Name         Instructions Cycles
  2643                           ; simple_byte            4     3 (average)
  2644                           ; direct_byte           11     8 (fixed)
  2645                           ; jumptable            260     6 (fixed)
  2646                           ;	Chosen strategy is simple_byte
  2647     0EC9  0871               	movf	??_txStatusPendingFlag+1,w
  2648     0ECA  3A00               	xorlw	0	; case 0
  2649     0ECB  1903               	skipnz
  2650     0ECC  2ECE               	goto	l4251
  2651     0ECD  2ED9               	goto	l2907
  2652     0ECE                     l4251:
  2653                           
  2654                           ; Switch size 1, requested type "simple"
  2655                           ; Number of cases is 3, Range of values is 0 to 2
  2656                           ; switch strategies available:
  2657                           ; Name         Instructions Cycles
  2658                           ; simple_byte           10     6 (average)
  2659                           ; direct_byte           17     8 (fixed)
  2660                           ; jumptable            260     6 (fixed)
  2661                           ;	Chosen strategy is simple_byte
  2662     0ECE  0870               	movf	??_txStatusPendingFlag,w
  2663     0ECF  3A00               	xorlw	0	; case 0
  2664     0ED0  1903               	skipnz
  2665     0ED1  2EC0               	goto	l2891
  2666     0ED2  3A01               	xorlw	1	; case 1
  2667     0ED3  1903               	skipnz
  2668     0ED4  2EC2               	goto	l2895
  2669     0ED5  3A03               	xorlw	3	; case 2
  2670     0ED6  1903               	skipnz
  2671     0ED7  2EC4               	goto	l2899
  2672     0ED8  2ED9               	goto	l2907
  2673     0ED9                     l2907:
  2674                           
  2675                           ;mcp2515_can.c: 148:     return 0xff;
  2676     0ED9  30FF               	movlw	255
  2677     0EDA                     l96:
  2678     0EDA  0008               	return
  2679     0EDB                     __end_of_txStatusPendingFlag:
  2680                           
  2681                           	psect	text10
  2682     0EA1                     __ptext10:	
  2683 ;; *************** function _txIfFlag *****************
  2684 ;; Defined at:
  2685 ;;		line 129 in file "mcp2515_can.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  i               1    wreg     unsigned char 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  i               1    2[COMMON] unsigned char 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      unsigned char 
  2692 ;; Registers used:
  2693 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2699 ;;      Params:         0       0       0       0       0
  2700 ;;      Locals:         1       0       0       0       0
  2701 ;;      Temps:          2       0       0       0       0
  2702 ;;      Totals:         3       0       0       0       0
  2703 ;;Total ram usage:        3 bytes
  2704 ;; Hardware stack levels used: 1
  2705 ;; This function calls:
  2706 ;;		Nothing
  2707 ;; This function is called by:
  2708 ;;		_mcp2515_getNextFreeTXBuf
  2709 ;;		_mcp2515_isTXBufFree
  2710 ;;		_checkClearTxStatus
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714     0EA1                     _txIfFlag:	
  2715                           ;psect for function _txIfFlag
  2716                           
  2717                           
  2718                           ;incstack = 0
  2719                           ; Regs used in _txIfFlag: [wreg-fsr0h+status,2+status,0]
  2720                           ;txIfFlag@i stored from wreg
  2721     0EA1  00F2               	movwf	txIfFlag@i
  2722     0EA2                     l2863:
  2723                           
  2724                           ;mcp2515_can.c: 130:     switch (i) {
  2725     0EA2  2EA9               	goto	l2879
  2726     0EA3                     l2865:
  2727     0EA3  3004               	movlw	4
  2728     0EA4  2EBD               	goto	l88
  2729     0EA5                     l2869:
  2730     0EA5  3008               	movlw	8
  2731     0EA6  2EBD               	goto	l88
  2732     0EA7                     l2873:
  2733     0EA7  3010               	movlw	16
  2734     0EA8  2EBD               	goto	l88
  2735     0EA9                     l2879:
  2736     0EA9  0872               	movf	txIfFlag@i,w
  2737     0EAA  00F0               	movwf	??_txIfFlag
  2738     0EAB  01F1               	clrf	??_txIfFlag+1
  2739                           
  2740                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2741                           ; Switch size 1, requested type "simple"
  2742                           ; Number of cases is 1, Range of values is 0 to 0
  2743                           ; switch strategies available:
  2744                           ; Name         Instructions Cycles
  2745                           ; simple_byte            4     3 (average)
  2746                           ; direct_byte           11     8 (fixed)
  2747                           ; jumptable            260     6 (fixed)
  2748                           ;	Chosen strategy is simple_byte
  2749     0EAC  0871               	movf	??_txIfFlag+1,w
  2750     0EAD  3A00               	xorlw	0	; case 0
  2751     0EAE  1903               	skipnz
  2752     0EAF  2EB1               	goto	l4253
  2753     0EB0  2EBC               	goto	l2881
  2754     0EB1                     l4253:
  2755                           
  2756                           ; Switch size 1, requested type "simple"
  2757                           ; Number of cases is 3, Range of values is 0 to 2
  2758                           ; switch strategies available:
  2759                           ; Name         Instructions Cycles
  2760                           ; simple_byte           10     6 (average)
  2761                           ; direct_byte           17     8 (fixed)
  2762                           ; jumptable            260     6 (fixed)
  2763                           ;	Chosen strategy is simple_byte
  2764     0EB1  0870               	movf	??_txIfFlag,w
  2765     0EB2  3A00               	xorlw	0	; case 0
  2766     0EB3  1903               	skipnz
  2767     0EB4  2EA3               	goto	l2865
  2768     0EB5  3A01               	xorlw	1	; case 1
  2769     0EB6  1903               	skipnz
  2770     0EB7  2EA5               	goto	l2869
  2771     0EB8  3A03               	xorlw	3	; case 2
  2772     0EB9  1903               	skipnz
  2773     0EBA  2EA7               	goto	l2873
  2774     0EBB  2EBC               	goto	l2881
  2775     0EBC                     l2881:
  2776                           
  2777                           ;mcp2515_can.c: 135:     return 0;
  2778     0EBC  3000               	movlw	0
  2779     0EBD                     l88:
  2780     0EBD  0008               	return
  2781     0EBE                     __end_of_txIfFlag:
  2782                           
  2783                           	psect	text11
  2784     0E85                     __ptext11:	
  2785 ;; *************** function _txCtrlReg *****************
  2786 ;; Defined at:
  2787 ;;		line 62 in file "mcp2515_can.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;  i               1    wreg     unsigned char 
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  i               1    2[COMMON] unsigned char 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      unsigned char 
  2794 ;; Registers used:
  2795 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2801 ;;      Params:         0       0       0       0       0
  2802 ;;      Locals:         1       0       0       0       0
  2803 ;;      Temps:          2       0       0       0       0
  2804 ;;      Totals:         3       0       0       0       0
  2805 ;;Total ram usage:        3 bytes
  2806 ;; Hardware stack levels used: 1
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_mcp2515_getNextFreeTXBuf
  2811 ;;		_mcp2515_isTXBufFree
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815     0E85                     _txCtrlReg:	
  2816                           ;psect for function _txCtrlReg
  2817                           
  2818                           
  2819                           ;incstack = 0
  2820                           ; Regs used in _txCtrlReg: [wreg-fsr0h+status,2+status,0]
  2821                           ;txCtrlReg@i stored from wreg
  2822     0E85  00F2               	movwf	txCtrlReg@i
  2823     0E86                     l2811:
  2824                           
  2825                           ;mcp2515_can.c: 63:     switch (i) {
  2826     0E86  2E8D               	goto	l2827
  2827     0E87                     l2813:
  2828     0E87  3030               	movlw	48
  2829     0E88  2EA0               	goto	l48
  2830     0E89                     l2817:
  2831     0E89  3040               	movlw	64
  2832     0E8A  2EA0               	goto	l48
  2833     0E8B                     l2821:
  2834     0E8B  3050               	movlw	80
  2835     0E8C  2EA0               	goto	l48
  2836     0E8D                     l2827:
  2837     0E8D  0872               	movf	txCtrlReg@i,w
  2838     0E8E  00F0               	movwf	??_txCtrlReg
  2839     0E8F  01F1               	clrf	??_txCtrlReg+1
  2840                           
  2841                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2842                           ; Switch size 1, requested type "simple"
  2843                           ; Number of cases is 1, Range of values is 0 to 0
  2844                           ; switch strategies available:
  2845                           ; Name         Instructions Cycles
  2846                           ; simple_byte            4     3 (average)
  2847                           ; direct_byte           11     8 (fixed)
  2848                           ; jumptable            260     6 (fixed)
  2849                           ;	Chosen strategy is simple_byte
  2850     0E90  0871               	movf	??_txCtrlReg+1,w
  2851     0E91  3A00               	xorlw	0	; case 0
  2852     0E92  1903               	skipnz
  2853     0E93  2E95               	goto	l4255
  2854     0E94  2E8B               	goto	l2821
  2855     0E95                     l4255:
  2856                           
  2857                           ; Switch size 1, requested type "simple"
  2858                           ; Number of cases is 3, Range of values is 0 to 2
  2859                           ; switch strategies available:
  2860                           ; Name         Instructions Cycles
  2861                           ; simple_byte           10     6 (average)
  2862                           ; direct_byte           17     8 (fixed)
  2863                           ; jumptable            260     6 (fixed)
  2864                           ;	Chosen strategy is simple_byte
  2865     0E95  0870               	movf	??_txCtrlReg,w
  2866     0E96  3A00               	xorlw	0	; case 0
  2867     0E97  1903               	skipnz
  2868     0E98  2E87               	goto	l2813
  2869     0E99  3A01               	xorlw	1	; case 1
  2870     0E9A  1903               	skipnz
  2871     0E9B  2E89               	goto	l2817
  2872     0E9C  3A03               	xorlw	3	; case 2
  2873     0E9D  1903               	skipnz
  2874     0E9E  2E8B               	goto	l2821
  2875     0E9F  2E8B               	goto	l2821
  2876     0EA0                     l48:
  2877     0EA0  0008               	return
  2878     0EA1                     __end_of_txCtrlReg:
  2879                           
  2880                           	psect	text12
  2881     0E1E                     __ptext12:	
  2882 ;; *************** function _readMsgBuf *****************
  2883 ;; Defined at:
  2884 ;;		line 28 in file "main.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  len             1    wreg     PTR unsigned char 
  2887 ;;		 -> main@len(1), 
  2888 ;;  buf             1   13[COMMON] PTR unsigned char 
  2889 ;;		 -> main@buf(8), 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  len             1   16[BANK0 ] PTR unsigned char 
  2892 ;;		 -> main@len(1), 
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      unsigned char 
  2895 ;; Registers used:
  2896 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2902 ;;      Params:         1       0       0       0       0
  2903 ;;      Locals:         0       1       0       0       0
  2904 ;;      Temps:          0       0       0       0       0
  2905 ;;      Totals:         1       1       0       0       0
  2906 ;;Total ram usage:        2 bytes
  2907 ;; Hardware stack levels used: 1
  2908 ;; Hardware stack levels required when called: 3
  2909 ;; This function calls:
  2910 ;;		_readMsgBufID
  2911 ;;		_readRxTxStatus
  2912 ;; This function is called by:
  2913 ;;		_main
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917     0E1E                     _readMsgBuf:	
  2918                           ;psect for function _readMsgBuf
  2919                           
  2920                           
  2921                           ;incstack = 0
  2922                           ; Regs used in _readMsgBuf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2923                           ;readMsgBuf@len stored from wreg
  2924     0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  2925     0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  2926     0E20  00B0               	movwf	readMsgBuf@len
  2927     0E21                     l3573:
  2928                           
  2929                           ;main.c: 29:         sendMsgBuf(0x04, 0, 0, 8, stmp, 1);;	Return value of _readMsgBuf is
      +                           never used
  2930     0E21  305F               	movlw	(low (_can_id| 0))& (0+255)
  2931     0E22  00A9               	movwf	readMsgBufID@id
  2932     0E23  3064               	movlw	(low (_ext_flg| 0))& (0+255)
  2933     0E24  00AA               	movwf	readMsgBufID@ext
  2934     0E25  3063               	movlw	(low (_rtr| 0))& (0+255)
  2935     0E26  00AB               	movwf	readMsgBufID@rtrBit
  2936     0E27  0830               	movf	readMsgBuf@len,w
  2937     0E28  00AC               	movwf	readMsgBufID@len
  2938     0E29  087D               	movf	readMsgBuf@buf,w
  2939     0E2A  00AD               	movwf	readMsgBufID@buf
  2940     0E2B  120A  158A  2753  120A  158A  	fcall	_readRxTxStatus
  2941     0E30  120A  118A  2054  120A  158A  	fcall	_readMsgBufID
  2942     0E35                     l590:
  2943     0E35  0008               	return
  2944     0E36                     __end_of_readMsgBuf:
  2945                           
  2946                           	psect	text13
  2947     0F53                     __ptext13:	
  2948 ;; *************** function _readRxTxStatus *****************
  2949 ;; Defined at:
  2950 ;;		line 1316 in file "mcp2515_can.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  ret             1    8[COMMON] unsigned char 
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      unsigned char 
  2957 ;; Registers used:
  2958 ;;		wreg, status,2, status,0, pclath, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2964 ;;      Params:         0       0       0       0       0
  2965 ;;      Locals:         7       0       0       0       0
  2966 ;;      Temps:          0       0       0       0       0
  2967 ;;      Totals:         7       0       0       0       0
  2968 ;;Total ram usage:        7 bytes
  2969 ;; Hardware stack levels used: 1
  2970 ;; Hardware stack levels required when called: 2
  2971 ;; This function calls:
  2972 ;;		_mcp2515_readStatus
  2973 ;; This function is called by:
  2974 ;;		_readMsgBuf
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978     0F53                     _readRxTxStatus:	
  2979                           ;psect for function _readRxTxStatus
  2980                           
  2981     0F53                     l3491:	
  2982                           ;incstack = 0
  2983                           ; Regs used in _readRxTxStatus: [wreg+status,2+status,0+pclath+cstack]
  2984                           
  2985                           
  2986                           ;mcp2515_can.c: 1317:     unsigned char ret = (mcp2515_readStatus() & ((0xA8) | (0x03)))
      +                          ;
  2987     0F53  120A  158A  25DD  120A  158A  	fcall	_mcp2515_readStatus
  2988     0F58  39AB               	andlw	171
  2989     0F59  00F8               	movwf	readRxTxStatus@ret
  2990     0F5A                     l3493:
  2991                           
  2992                           ;mcp2515_can.c: 1318:     ret = (ret & (0x08) ? 0x04 : 0) |
  2993     0F5A  1BF8               	btfsc	readRxTxStatus@ret,7
  2994     0F5B  2F5D               	goto	u1631
  2995     0F5C  2F5E               	goto	u1630
  2996     0F5D                     u1631:
  2997     0F5D  2F61               	goto	l3497
  2998     0F5E                     u1630:
  2999     0F5E                     l3495:
  3000     0F5E  01F2               	clrf	_readRxTxStatus$305
  3001     0F5F  01F3               	clrf	_readRxTxStatus$305+1
  3002     0F60  2F65               	goto	l3499
  3003     0F61                     l3497:
  3004     0F61  3010               	movlw	16
  3005     0F62  00F2               	movwf	_readRxTxStatus$305
  3006     0F63  3000               	movlw	0
  3007     0F64  00F3               	movwf	_readRxTxStatus$305+1
  3008     0F65                     l3499:
  3009     0F65  1AF8               	btfsc	readRxTxStatus@ret,5
  3010     0F66  2F68               	goto	u1641
  3011     0F67  2F69               	goto	u1640
  3012     0F68                     u1641:
  3013     0F68  2F6C               	goto	l3503
  3014     0F69                     u1640:
  3015     0F69                     l3501:
  3016     0F69  01F4               	clrf	_readRxTxStatus$306
  3017     0F6A  01F5               	clrf	_readRxTxStatus$306+1
  3018     0F6B  2F70               	goto	l3505
  3019     0F6C                     l3503:
  3020     0F6C  3008               	movlw	8
  3021     0F6D  00F4               	movwf	_readRxTxStatus$306
  3022     0F6E  3000               	movlw	0
  3023     0F6F  00F5               	movwf	_readRxTxStatus$306+1
  3024     0F70                     l3505:
  3025     0F70  19F8               	btfsc	readRxTxStatus@ret,3
  3026     0F71  2F73               	goto	u1651
  3027     0F72  2F74               	goto	u1650
  3028     0F73                     u1651:
  3029     0F73  2F77               	goto	l3509
  3030     0F74                     u1650:
  3031     0F74                     l3507:
  3032     0F74  01F6               	clrf	_readRxTxStatus$307
  3033     0F75  01F7               	clrf	_readRxTxStatus$307+1
  3034     0F76  2F7B               	goto	l3511
  3035     0F77                     l3509:
  3036     0F77  3004               	movlw	4
  3037     0F78  00F6               	movwf	_readRxTxStatus$307
  3038     0F79  3000               	movlw	0
  3039     0F7A  00F7               	movwf	_readRxTxStatus$307+1
  3040     0F7B                     l3511:
  3041     0F7B  0878               	movf	readRxTxStatus@ret,w
  3042     0F7C  3903               	andlw	3
  3043     0F7D  0476               	iorwf	_readRxTxStatus$307,w
  3044     0F7E  0474               	iorwf	_readRxTxStatus$306,w
  3045     0F7F  0472               	iorwf	_readRxTxStatus$305,w
  3046     0F80  00F8               	movwf	readRxTxStatus@ret
  3047     0F81                     l3513:
  3048                           
  3049                           ;mcp2515_can.c: 1322:     return ret;
  3050     0F81  0878               	movf	readRxTxStatus@ret,w
  3051     0F82                     l387:
  3052     0F82  0008               	return
  3053     0F83                     __end_of_readRxTxStatus:
  3054                           
  3055                           	psect	text14
  3056     0054                     __ptext14:	
  3057 ;; *************** function _readMsgBufID *****************
  3058 ;; Defined at:
  3059 ;;		line 1285 in file "mcp2515_can.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  status          1    wreg     unsigned char 
  3062 ;;  id              1    9[BANK0 ] PTR volatile unsigned lo
  3063 ;;		 -> can_id(4), 
  3064 ;;  ext             1   10[BANK0 ] PTR volatile unsigned ch
  3065 ;;		 -> ext_flg(1), 
  3066 ;;  rtrBit          1   11[BANK0 ] PTR volatile unsigned ch
  3067 ;;		 -> rtr(1), 
  3068 ;;  len             1   12[BANK0 ] PTR volatile unsigned ch
  3069 ;;		 -> main@len(1), 
  3070 ;;  buf             1   13[BANK0 ] PTR volatile unsigned ch
  3071 ;;		 -> main@buf(8), 
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;  status          1   14[BANK0 ] unsigned char 
  3074 ;;  rc              1   15[BANK0 ] unsigned char 
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      unsigned char 
  3077 ;; Registers used:
  3078 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3084 ;;      Params:         0       5       0       0       0
  3085 ;;      Locals:         0       2       0       0       0
  3086 ;;      Temps:          0       0       0       0       0
  3087 ;;      Totals:         0       7       0       0       0
  3088 ;;Total ram usage:        7 bytes
  3089 ;; Hardware stack levels used: 1
  3090 ;; Hardware stack levels required when called: 2
  3091 ;; This function calls:
  3092 ;;		_mcp2515_read_canMsg
  3093 ;; This function is called by:
  3094 ;;		_readMsgBuf
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098     0054                     _readMsgBufID:	
  3099                           ;psect for function _readMsgBufID
  3100                           
  3101                           
  3102                           ;incstack = 0
  3103                           ; Regs used in _readMsgBufID: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3104                           ;readMsgBufID@status stored from wreg
  3105     0054  1283               	bcf	3,5	;RP0=0, select bank0
  3106     0055  1303               	bcf	3,6	;RP1=0, select bank0
  3107     0056  00AE               	movwf	readMsgBufID@status
  3108     0057                     l3469:
  3109                           
  3110                           ;mcp2515_can.c: 1285: unsigned char readMsgBufID(unsigned char status, volatile unsigned
      +                           long* id, volatile unsigned char* ext, volatile unsigned char* rtrBit,;mcp2515_can.c: 1
      +                          286:                            volatile unsigned char* len, volatile unsigned char* buf
      +                          ) {;mcp2515_can.c: 1287:     unsigned char rc = (4);
  3111     0057  3004               	movlw	4
  3112     0058  00AF               	movwf	readMsgBufID@rc
  3113     0059                     l3471:
  3114                           
  3115                           ;mcp2515_can.c: 1289:     if (status & 0x01) {
  3116     0059  1C2E               	btfss	readMsgBufID@status,0
  3117     005A  285C               	goto	u1601
  3118     005B  285D               	goto	u1600
  3119     005C                     u1601:
  3120     005C  2871               	goto	l367
  3121     005D                     u1600:
  3122     005D                     l3473:
  3123                           
  3124                           ;mcp2515_can.c: 1290:         mcp2515_read_canMsg(0x90, id, ext, rtrBit, len, buf);
  3125     005D  0829               	movf	readMsgBufID@id,w
  3126     005E  00F1               	movwf	mcp2515_read_canMsg@id
  3127     005F  082A               	movf	readMsgBufID@ext,w
  3128     0060  00F2               	movwf	mcp2515_read_canMsg@ext
  3129     0061  082B               	movf	readMsgBufID@rtrBit,w
  3130     0062  00F3               	movwf	mcp2515_read_canMsg@rtrBit
  3131     0063  082C               	movf	readMsgBufID@len,w
  3132     0064  00F4               	movwf	mcp2515_read_canMsg@len
  3133     0065  082D               	movf	readMsgBufID@buf,w
  3134     0066  00F5               	movwf	mcp2515_read_canMsg@buf
  3135     0067  3090               	movlw	144
  3136     0068  120A  118A  2471  120A  118A  	fcall	_mcp2515_read_canMsg
  3137     006D                     l3475:
  3138                           
  3139                           ;mcp2515_can.c: 1291:         rc = (0);
  3140     006D  1283               	bcf	3,5	;RP0=0, select bank0
  3141     006E  1303               	bcf	3,6	;RP1=0, select bank0
  3142     006F  01AF               	clrf	readMsgBufID@rc
  3143                           
  3144                           ;mcp2515_can.c: 1292:     } else if (status & 0x02) {
  3145     0070  2886               	goto	l3481
  3146     0071                     l367:
  3147     0071  1CAE               	btfss	readMsgBufID@status,1
  3148     0072  2874               	goto	u1611
  3149     0073  2875               	goto	u1610
  3150     0074                     u1611:
  3151     0074  2886               	goto	l3481
  3152     0075                     u1610:
  3153     0075                     l3477:
  3154                           
  3155                           ;mcp2515_can.c: 1293:         mcp2515_read_canMsg(0x94, id, ext, rtrBit, len, buf);
  3156     0075  0829               	movf	readMsgBufID@id,w
  3157     0076  00F1               	movwf	mcp2515_read_canMsg@id
  3158     0077  082A               	movf	readMsgBufID@ext,w
  3159     0078  00F2               	movwf	mcp2515_read_canMsg@ext
  3160     0079  082B               	movf	readMsgBufID@rtrBit,w
  3161     007A  00F3               	movwf	mcp2515_read_canMsg@rtrBit
  3162     007B  082C               	movf	readMsgBufID@len,w
  3163     007C  00F4               	movwf	mcp2515_read_canMsg@len
  3164     007D  082D               	movf	readMsgBufID@buf,w
  3165     007E  00F5               	movwf	mcp2515_read_canMsg@buf
  3166     007F  3094               	movlw	148
  3167     0080  120A  118A  2471  120A  118A  	fcall	_mcp2515_read_canMsg
  3168     0085  286D               	goto	l3475
  3169     0086                     l3481:
  3170                           
  3171                           ;mcp2515_can.c: 1297:     if (rc == (0)) {
  3172     0086  082F               	movf	readMsgBufID@rc,w
  3173     0087  1D03               	btfss	3,2
  3174     0088  288A               	goto	u1621
  3175     0089  288B               	goto	u1620
  3176     008A                     u1621:
  3177     008A  28A2               	goto	l3485
  3178     008B                     u1620:
  3179     008B                     l3483:
  3180                           
  3181                           ;mcp2515_can.c: 1298:         rtr = *rtrBit;
  3182     008B  082B               	movf	readMsgBufID@rtrBit,w
  3183     008C  0084               	movwf	4
  3184     008D  1383               	bcf	3,7	;select IRP bank0
  3185     008E  0800               	movf	0,w
  3186     008F  00E3               	movwf	_rtr
  3187                           
  3188                           ;mcp2515_can.c: 1300:         ext_flg = *ext;
  3189     0090  082A               	movf	readMsgBufID@ext,w
  3190     0091  0084               	movwf	4
  3191     0092  0800               	movf	0,w
  3192     0093  00E4               	movwf	_ext_flg
  3193                           
  3194                           ;mcp2515_can.c: 1301:         can_id = *id;
  3195     0094  0829               	movf	readMsgBufID@id,w
  3196     0095  0084               	movwf	4
  3197     0096  0800               	movf	0,w
  3198     0097  00DF               	movwf	_can_id
  3199     0098  0A84               	incf	4,f
  3200     0099  0800               	movf	0,w
  3201     009A  00E0               	movwf	_can_id+1
  3202     009B  0A84               	incf	4,f
  3203     009C  0800               	movf	0,w
  3204     009D  00E1               	movwf	_can_id+2
  3205     009E  0A84               	incf	4,f
  3206     009F  0800               	movf	0,w
  3207     00A0  00E2               	movwf	_can_id+3
  3208                           
  3209                           ;mcp2515_can.c: 1302:     } else {
  3210     00A1  28A6               	goto	l3487
  3211     00A2                     l3485:
  3212                           
  3213                           ;mcp2515_can.c: 1303:         *len = 0;
  3214     00A2  082C               	movf	readMsgBufID@len,w
  3215     00A3  0084               	movwf	4
  3216     00A4  1383               	bcf	3,7	;select IRP bank0
  3217     00A5  0180               	clrf	0
  3218     00A6                     l3487:
  3219                           
  3220                           ;mcp2515_can.c: 1306:     return rc;
  3221     00A6  082F               	movf	readMsgBufID@rc,w
  3222     00A7                     l372:
  3223     00A7  0008               	return
  3224     00A8                     __end_of_readMsgBufID:
  3225                           
  3226                           	psect	text15
  3227     0471                     __ptext15:	
  3228 ;; *************** function _mcp2515_read_canMsg *****************
  3229 ;; Defined at:
  3230 ;;		line 954 in file "mcp2515_can.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;  buffer_load_    1    wreg     const unsigned char 
  3233 ;;  id              1    1[COMMON] PTR volatile unsigned lo
  3234 ;;		 -> can_id(4), 
  3235 ;;  ext             1    2[COMMON] PTR volatile unsigned ch
  3236 ;;		 -> ext_flg(1), 
  3237 ;;  rtrBit          1    3[COMMON] PTR volatile unsigned ch
  3238 ;;		 -> rtr(1), 
  3239 ;;  len             1    4[COMMON] PTR volatile unsigned ch
  3240 ;;		 -> main@len(1), 
  3241 ;;  buf             1    5[COMMON] PTR volatile unsigned ch
  3242 ;;		 -> main@buf(8), 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  buffer_load_    1    6[COMMON] const unsigned char 
  3245 ;;  tbufdata        4    7[COMMON] unsigned char [4]
  3246 ;;  i               1   12[COMMON] unsigned char 
  3247 ;;  pMsgSize        1   11[COMMON] unsigned char 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  1    wreg      void 
  3250 ;; Registers used:
  3251 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3257 ;;      Params:         5       0       0       0       0
  3258 ;;      Locals:         7       0       0       0       0
  3259 ;;      Temps:          0       9       0       0       0
  3260 ;;      Totals:        12       9       0       0       0
  3261 ;;Total ram usage:       21 bytes
  3262 ;; Hardware stack levels used: 1
  3263 ;; Hardware stack levels required when called: 1
  3264 ;; This function calls:
  3265 ;;		_ReadSPI
  3266 ;;		_WriteSPI
  3267 ;; This function is called by:
  3268 ;;		_readMsgBufID
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272     0471                     _mcp2515_read_canMsg:	
  3273                           ;psect for function _mcp2515_read_canMsg
  3274                           
  3275                           
  3276                           ;incstack = 0
  3277                           ; Regs used in _mcp2515_read_canMsg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3278                           ;mcp2515_read_canMsg@buffer_load_addr stored from wreg
  3279     0471  00F6               	movwf	mcp2515_read_canMsg@buffer_load_addr
  3280     0472                     l3263:
  3281                           
  3282                           ;mcp2515_can.c: 954: void mcp2515_read_canMsg(const unsigned char buffer_load_addr, vola
      +                          tile unsigned long* id, volatile unsigned char* ext,;mcp2515_can.c: 955:                
      +                                             volatile unsigned char* rtrBit, volatile unsigned char* len, volatile
      +                           unsigned char* buf) {;mcp2515_can.c: 956:     unsigned char tbufdata[4];;mcp2515_can.c:
      +                           957:     unsigned char i;;mcp2515_can.c: 959:     RD0 = 0;;
  3283     0472  1283               	bcf	3,5	;RP0=0, select bank0
  3284     0473  1303               	bcf	3,6	;RP1=0, select bank0
  3285     0474  1008               	bcf	8,0	;volatile
  3286     0475                     l3265:
  3287                           
  3288                           ;mcp2515_can.c: 960:     WriteSPI(buffer_load_addr);
  3289     0475  0876               	movf	mcp2515_read_canMsg@buffer_load_addr,w
  3290     0476  120A  158A  2594  120A  118A  	fcall	_WriteSPI
  3291     047B                     l3267:
  3292                           
  3293                           ;mcp2515_can.c: 962:     for (i = 0; i < 4; i++) {
  3294     047B  01FC               	clrf	mcp2515_read_canMsg@i
  3295     047C                     l3273:
  3296                           
  3297                           ;mcp2515_can.c: 963:         tbufdata[i] = ReadSPI();
  3298     047C  087C               	movf	mcp2515_read_canMsg@i,w
  3299     047D  3E77               	addlw	(low (mcp2515_read_canMsg@tbufdata| 0))& (0+255)
  3300     047E  0084               	movwf	4
  3301     047F  120A  158A  2587  120A  118A  	fcall	_ReadSPI
  3302     0484  0080               	movwf	0
  3303     0485                     l3275:
  3304                           
  3305                           ;mcp2515_can.c: 964:     }
  3306     0485  3001               	movlw	1
  3307     0486  00FF               	movwf	btemp+1
  3308     0487  087F               	movf	btemp+1,w
  3309     0488  07FC               	addwf	mcp2515_read_canMsg@i,f
  3310     0489                     l3277:
  3311     0489  3004               	movlw	4
  3312     048A  027C               	subwf	mcp2515_read_canMsg@i,w
  3313     048B  1C03               	skipc
  3314     048C  2C8E               	goto	u1281
  3315     048D  2C8F               	goto	u1280
  3316     048E                     u1281:
  3317     048E  2C7C               	goto	l3273
  3318     048F                     u1280:
  3319     048F                     l3279:
  3320                           
  3321                           ;mcp2515_can.c: 966:     *id = (tbufdata[0] << 3) + (tbufdata[1] >> 5);
  3322     048F  0878               	movf	mcp2515_read_canMsg@tbufdata+1,w
  3323     0490  1283               	bcf	3,5	;RP0=0, select bank0
  3324     0491  1303               	bcf	3,6	;RP1=0, select bank0
  3325     0492  00A0               	movwf	??_mcp2515_read_canMsg
  3326     0493  3005               	movlw	5
  3327     0494                     u1295:
  3328     0494  1003               	clrc
  3329     0495  0CA0               	rrf	??_mcp2515_read_canMsg,f
  3330     0496  3EFF               	addlw	-1
  3331     0497  1D03               	skipz
  3332     0498  2C94               	goto	u1295
  3333     0499  0877               	movf	mcp2515_read_canMsg@tbufdata,w
  3334     049A  00A1               	movwf	??_mcp2515_read_canMsg+1
  3335     049B  01A2               	clrf	??_mcp2515_read_canMsg+2
  3336     049C  1003               	clrc
  3337     049D  0DA1               	rlf	??_mcp2515_read_canMsg+1,f
  3338     049E  0DA2               	rlf	??_mcp2515_read_canMsg+2,f
  3339     049F  1003               	clrc
  3340     04A0  0DA1               	rlf	??_mcp2515_read_canMsg+1,f
  3341     04A1  0DA2               	rlf	??_mcp2515_read_canMsg+2,f
  3342     04A2  1003               	clrc
  3343     04A3  0DA1               	rlf	??_mcp2515_read_canMsg+1,f
  3344     04A4  0DA2               	rlf	??_mcp2515_read_canMsg+2,f
  3345     04A5  0820               	movf	??_mcp2515_read_canMsg,w
  3346     04A6  0721               	addwf	??_mcp2515_read_canMsg+1,w
  3347     04A7  00A3               	movwf	??_mcp2515_read_canMsg+3
  3348     04A8  3000               	movlw	0
  3349     04A9  1803               	skipnc
  3350     04AA  3001               	movlw	1
  3351     04AB  0722               	addwf	??_mcp2515_read_canMsg+2,w
  3352     04AC  00A4               	movwf	??_mcp2515_read_canMsg+4
  3353     04AD  0823               	movf	??_mcp2515_read_canMsg+3,w
  3354     04AE  00A5               	movwf	??_mcp2515_read_canMsg+5
  3355     04AF  0824               	movf	??_mcp2515_read_canMsg+4,w
  3356     04B0  00A6               	movwf	??_mcp2515_read_canMsg+6
  3357     04B1  3000               	movlw	0
  3358     04B2  1BA6               	btfsc	??_mcp2515_read_canMsg+6,7
  3359     04B3  30FF               	movlw	255
  3360     04B4  00A7               	movwf	??_mcp2515_read_canMsg+7
  3361     04B5  00A8               	movwf	??_mcp2515_read_canMsg+8
  3362     04B6  0871               	movf	mcp2515_read_canMsg@id,w
  3363     04B7  0084               	movwf	4
  3364     04B8  0825               	movf	??_mcp2515_read_canMsg+5,w
  3365     04B9  1383               	bcf	3,7	;select IRP bank0
  3366     04BA  0080               	movwf	0
  3367     04BB  0A84               	incf	4,f
  3368     04BC  0826               	movf	??_mcp2515_read_canMsg+6,w
  3369     04BD  0080               	movwf	0
  3370     04BE  0A84               	incf	4,f
  3371     04BF  0827               	movf	??_mcp2515_read_canMsg+7,w
  3372     04C0  0080               	movwf	0
  3373     04C1  0A84               	incf	4,f
  3374     04C2  0828               	movf	??_mcp2515_read_canMsg+8,w
  3375     04C3  0080               	movwf	0
  3376     04C4                     l3281:
  3377                           
  3378                           ;mcp2515_can.c: 967:     *ext = 0;
  3379     04C4  0872               	movf	mcp2515_read_canMsg@ext,w
  3380     04C5  0084               	movwf	4
  3381     04C6  0180               	clrf	0
  3382     04C7                     l3283:
  3383                           
  3384                           ;mcp2515_can.c: 968:     if ((tbufdata[1] & 0x08) == 0x08) {
  3385     04C7  1DF8               	btfss	mcp2515_read_canMsg@tbufdata+1,3
  3386     04C8  2CCA               	goto	u1301
  3387     04C9  2CCB               	goto	u1300
  3388     04CA                     u1301:
  3389     04CA  2D7E               	goto	l3289
  3390     04CB                     u1300:
  3391     04CB                     l3285:
  3392                           
  3393                           ;mcp2515_can.c: 970:         *id = (*id << 2) + (tbufdata[1] & 0x03);
  3394     04CB  0878               	movf	mcp2515_read_canMsg@tbufdata+1,w
  3395     04CC  3903               	andlw	3
  3396     04CD  00A0               	movwf	??_mcp2515_read_canMsg
  3397     04CE  01A1               	clrf	??_mcp2515_read_canMsg+1
  3398     04CF  01A2               	clrf	??_mcp2515_read_canMsg+2
  3399     04D0  01A3               	clrf	??_mcp2515_read_canMsg+3
  3400     04D1  0871               	movf	mcp2515_read_canMsg@id,w
  3401     04D2  0084               	movwf	4
  3402     04D3  0800               	movf	0,w
  3403     04D4  00A4               	movwf	??_mcp2515_read_canMsg+4
  3404     04D5  0A84               	incf	4,f
  3405     04D6  0800               	movf	0,w
  3406     04D7  00A5               	movwf	??_mcp2515_read_canMsg+5
  3407     04D8  0A84               	incf	4,f
  3408     04D9  0800               	movf	0,w
  3409     04DA  00A6               	movwf	??_mcp2515_read_canMsg+6
  3410     04DB  0A84               	incf	4,f
  3411     04DC  0800               	movf	0,w
  3412     04DD  00A7               	movwf	??_mcp2515_read_canMsg+7
  3413     04DE  3002               	movlw	2
  3414     04DF                     u1315:
  3415     04DF  1003               	clrc
  3416     04E0  0DA4               	rlf	??_mcp2515_read_canMsg+4,f
  3417     04E1  0DA5               	rlf	??_mcp2515_read_canMsg+5,f
  3418     04E2  0DA6               	rlf	??_mcp2515_read_canMsg+6,f
  3419     04E3  0DA7               	rlf	??_mcp2515_read_canMsg+7,f
  3420     04E4                     u1310:
  3421     04E4  3EFF               	addlw	-1
  3422     04E5  1D03               	skipz
  3423     04E6  2CDF               	goto	u1315
  3424     04E7  0824               	movf	??_mcp2515_read_canMsg+4,w
  3425     04E8  07A0               	addwf	??_mcp2515_read_canMsg,f
  3426     04E9  0825               	movf	??_mcp2515_read_canMsg+5,w
  3427     04EA  1803               	skipnc
  3428     04EB  0F25               	incfsz	??_mcp2515_read_canMsg+5,w
  3429     04EC  2CEE               	goto	u1320
  3430     04ED  2CEF               	goto	u1321
  3431     04EE                     u1320:
  3432     04EE  07A1               	addwf	??_mcp2515_read_canMsg+1,f
  3433     04EF                     u1321:
  3434     04EF  0826               	movf	??_mcp2515_read_canMsg+6,w
  3435     04F0  1803               	skipnc
  3436     04F1  0F26               	incfsz	??_mcp2515_read_canMsg+6,w
  3437     04F2  2CF4               	goto	u1322
  3438     04F3  2CF5               	goto	u1323
  3439     04F4                     u1322:
  3440     04F4  07A2               	addwf	??_mcp2515_read_canMsg+2,f
  3441     04F5                     u1323:
  3442     04F5  0827               	movf	??_mcp2515_read_canMsg+7,w
  3443     04F6  1803               	skipnc
  3444     04F7  0A27               	incf	??_mcp2515_read_canMsg+7,w
  3445     04F8  07A3               	addwf	??_mcp2515_read_canMsg+3,f
  3446     04F9  0871               	movf	mcp2515_read_canMsg@id,w
  3447     04FA  0084               	movwf	4
  3448     04FB  0820               	movf	??_mcp2515_read_canMsg,w
  3449     04FC  0080               	movwf	0
  3450     04FD  0A84               	incf	4,f
  3451     04FE  0821               	movf	??_mcp2515_read_canMsg+1,w
  3452     04FF  0080               	movwf	0
  3453     0500  0A84               	incf	4,f
  3454     0501  0822               	movf	??_mcp2515_read_canMsg+2,w
  3455     0502  0080               	movwf	0
  3456     0503  0A84               	incf	4,f
  3457     0504  0823               	movf	??_mcp2515_read_canMsg+3,w
  3458     0505  0080               	movwf	0
  3459                           
  3460                           ;mcp2515_can.c: 971:         *id = (*id << 8) + tbufdata[2];
  3461     0506  0879               	movf	mcp2515_read_canMsg@tbufdata+2,w
  3462     0507  00A0               	movwf	??_mcp2515_read_canMsg
  3463     0508  01A1               	clrf	??_mcp2515_read_canMsg+1
  3464     0509  01A2               	clrf	??_mcp2515_read_canMsg+2
  3465     050A  01A3               	clrf	??_mcp2515_read_canMsg+3
  3466     050B  0871               	movf	mcp2515_read_canMsg@id,w
  3467     050C  0084               	movwf	4
  3468     050D  0800               	movf	0,w
  3469     050E  00A4               	movwf	??_mcp2515_read_canMsg+4
  3470     050F  0A84               	incf	4,f
  3471     0510  0800               	movf	0,w
  3472     0511  00A5               	movwf	??_mcp2515_read_canMsg+5
  3473     0512  0A84               	incf	4,f
  3474     0513  0800               	movf	0,w
  3475     0514  00A6               	movwf	??_mcp2515_read_canMsg+6
  3476     0515  0A84               	incf	4,f
  3477     0516  0800               	movf	0,w
  3478     0517  00A7               	movwf	??_mcp2515_read_canMsg+7
  3479     0518  3008               	movlw	8
  3480     0519                     u1335:
  3481     0519  1003               	clrc
  3482     051A  0DA4               	rlf	??_mcp2515_read_canMsg+4,f
  3483     051B  0DA5               	rlf	??_mcp2515_read_canMsg+5,f
  3484     051C  0DA6               	rlf	??_mcp2515_read_canMsg+6,f
  3485     051D  0DA7               	rlf	??_mcp2515_read_canMsg+7,f
  3486     051E                     u1330:
  3487     051E  3EFF               	addlw	-1
  3488     051F  1D03               	skipz
  3489     0520  2D19               	goto	u1335
  3490     0521  0824               	movf	??_mcp2515_read_canMsg+4,w
  3491     0522  07A0               	addwf	??_mcp2515_read_canMsg,f
  3492     0523  0825               	movf	??_mcp2515_read_canMsg+5,w
  3493     0524  1803               	skipnc
  3494     0525  0F25               	incfsz	??_mcp2515_read_canMsg+5,w
  3495     0526  2D28               	goto	u1340
  3496     0527  2D29               	goto	u1341
  3497     0528                     u1340:
  3498     0528  07A1               	addwf	??_mcp2515_read_canMsg+1,f
  3499     0529                     u1341:
  3500     0529  0826               	movf	??_mcp2515_read_canMsg+6,w
  3501     052A  1803               	skipnc
  3502     052B  0F26               	incfsz	??_mcp2515_read_canMsg+6,w
  3503     052C  2D2E               	goto	u1342
  3504     052D  2D2F               	goto	u1343
  3505     052E                     u1342:
  3506     052E  07A2               	addwf	??_mcp2515_read_canMsg+2,f
  3507     052F                     u1343:
  3508     052F  0827               	movf	??_mcp2515_read_canMsg+7,w
  3509     0530  1803               	skipnc
  3510     0531  0A27               	incf	??_mcp2515_read_canMsg+7,w
  3511     0532  07A3               	addwf	??_mcp2515_read_canMsg+3,f
  3512     0533  0871               	movf	mcp2515_read_canMsg@id,w
  3513     0534  0084               	movwf	4
  3514     0535  0820               	movf	??_mcp2515_read_canMsg,w
  3515     0536  0080               	movwf	0
  3516     0537  0A84               	incf	4,f
  3517     0538  0821               	movf	??_mcp2515_read_canMsg+1,w
  3518     0539  0080               	movwf	0
  3519     053A  0A84               	incf	4,f
  3520     053B  0822               	movf	??_mcp2515_read_canMsg+2,w
  3521     053C  0080               	movwf	0
  3522     053D  0A84               	incf	4,f
  3523     053E  0823               	movf	??_mcp2515_read_canMsg+3,w
  3524     053F  0080               	movwf	0
  3525                           
  3526                           ;mcp2515_can.c: 972:         *id = (*id << 8) + tbufdata[3];
  3527     0540  087A               	movf	mcp2515_read_canMsg@tbufdata+3,w
  3528     0541  00A0               	movwf	??_mcp2515_read_canMsg
  3529     0542  01A1               	clrf	??_mcp2515_read_canMsg+1
  3530     0543  01A2               	clrf	??_mcp2515_read_canMsg+2
  3531     0544  01A3               	clrf	??_mcp2515_read_canMsg+3
  3532     0545  0871               	movf	mcp2515_read_canMsg@id,w
  3533     0546  0084               	movwf	4
  3534     0547  0800               	movf	0,w
  3535     0548  00A4               	movwf	??_mcp2515_read_canMsg+4
  3536     0549  0A84               	incf	4,f
  3537     054A  0800               	movf	0,w
  3538     054B  00A5               	movwf	??_mcp2515_read_canMsg+5
  3539     054C  0A84               	incf	4,f
  3540     054D  0800               	movf	0,w
  3541     054E  00A6               	movwf	??_mcp2515_read_canMsg+6
  3542     054F  0A84               	incf	4,f
  3543     0550  0800               	movf	0,w
  3544     0551  00A7               	movwf	??_mcp2515_read_canMsg+7
  3545     0552  3008               	movlw	8
  3546     0553                     u1355:
  3547     0553  1003               	clrc
  3548     0554  0DA4               	rlf	??_mcp2515_read_canMsg+4,f
  3549     0555  0DA5               	rlf	??_mcp2515_read_canMsg+5,f
  3550     0556  0DA6               	rlf	??_mcp2515_read_canMsg+6,f
  3551     0557  0DA7               	rlf	??_mcp2515_read_canMsg+7,f
  3552     0558                     u1350:
  3553     0558  3EFF               	addlw	-1
  3554     0559  1D03               	skipz
  3555     055A  2D53               	goto	u1355
  3556     055B  0824               	movf	??_mcp2515_read_canMsg+4,w
  3557     055C  07A0               	addwf	??_mcp2515_read_canMsg,f
  3558     055D  0825               	movf	??_mcp2515_read_canMsg+5,w
  3559     055E  1803               	skipnc
  3560     055F  0F25               	incfsz	??_mcp2515_read_canMsg+5,w
  3561     0560  2D62               	goto	u1360
  3562     0561  2D63               	goto	u1361
  3563     0562                     u1360:
  3564     0562  07A1               	addwf	??_mcp2515_read_canMsg+1,f
  3565     0563                     u1361:
  3566     0563  0826               	movf	??_mcp2515_read_canMsg+6,w
  3567     0564  1803               	skipnc
  3568     0565  0F26               	incfsz	??_mcp2515_read_canMsg+6,w
  3569     0566  2D68               	goto	u1362
  3570     0567  2D69               	goto	u1363
  3571     0568                     u1362:
  3572     0568  07A2               	addwf	??_mcp2515_read_canMsg+2,f
  3573     0569                     u1363:
  3574     0569  0827               	movf	??_mcp2515_read_canMsg+7,w
  3575     056A  1803               	skipnc
  3576     056B  0A27               	incf	??_mcp2515_read_canMsg+7,w
  3577     056C  07A3               	addwf	??_mcp2515_read_canMsg+3,f
  3578     056D  0871               	movf	mcp2515_read_canMsg@id,w
  3579     056E  0084               	movwf	4
  3580     056F  0820               	movf	??_mcp2515_read_canMsg,w
  3581     0570  0080               	movwf	0
  3582     0571  0A84               	incf	4,f
  3583     0572  0821               	movf	??_mcp2515_read_canMsg+1,w
  3584     0573  0080               	movwf	0
  3585     0574  0A84               	incf	4,f
  3586     0575  0822               	movf	??_mcp2515_read_canMsg+2,w
  3587     0576  0080               	movwf	0
  3588     0577  0A84               	incf	4,f
  3589     0578  0823               	movf	??_mcp2515_read_canMsg+3,w
  3590     0579  0080               	movwf	0
  3591     057A                     l3287:
  3592                           
  3593                           ;mcp2515_can.c: 973:         *ext = 1;
  3594     057A  0872               	movf	mcp2515_read_canMsg@ext,w
  3595     057B  0084               	movwf	4
  3596     057C  3001               	movlw	1
  3597     057D  0080               	movwf	0
  3598     057E                     l3289:
  3599                           
  3600                           ;mcp2515_can.c: 976:     unsigned char pMsgSize = ReadSPI();
  3601     057E  120A  158A  2587  120A  118A  	fcall	_ReadSPI
  3602     0583  00FB               	movwf	mcp2515_read_canMsg@pMsgSize
  3603     0584                     l3291:
  3604                           
  3605                           ;mcp2515_can.c: 977:     *len = pMsgSize & 0x0F;
  3606     0584  0874               	movf	mcp2515_read_canMsg@len,w
  3607     0585  0084               	movwf	4
  3608     0586  087B               	movf	mcp2515_read_canMsg@pMsgSize,w
  3609     0587  390F               	andlw	15
  3610     0588  1383               	bcf	3,7	;select IRP bank0
  3611     0589  0080               	movwf	0
  3612     058A                     l3293:
  3613                           
  3614                           ;mcp2515_can.c: 978:     *rtrBit = (pMsgSize & 0x40) ? 1 : 0;
  3615     058A  0873               	movf	mcp2515_read_canMsg@rtrBit,w
  3616     058B  0084               	movwf	4
  3617     058C  1B7B               	btfsc	mcp2515_read_canMsg@pMsgSize,6
  3618     058D  2D8F               	goto	u1371
  3619     058E  2D91               	goto	u1370
  3620     058F                     u1371:
  3621     058F  3001               	movlw	1
  3622     0590  2D92               	goto	u1380
  3623     0591                     u1370:
  3624     0591  3000               	movlw	0
  3625     0592                     u1380:
  3626     0592  0080               	movwf	0
  3627     0593                     l3295:
  3628                           
  3629                           ;mcp2515_can.c: 979:     for (i = 0; i < *len && i < (8); i++) {
  3630     0593  01FC               	clrf	mcp2515_read_canMsg@i
  3631     0594  2DA7               	goto	l3301
  3632     0595                     l3297:
  3633                           
  3634                           ;mcp2515_can.c: 980:         buf[i] = ReadSPI();
  3635     0595  087C               	movf	mcp2515_read_canMsg@i,w
  3636     0596  0775               	addwf	mcp2515_read_canMsg@buf,w
  3637     0597  1283               	bcf	3,5	;RP0=0, select bank0
  3638     0598  1303               	bcf	3,6	;RP1=0, select bank0
  3639     0599  00A0               	movwf	??_mcp2515_read_canMsg
  3640     059A  0820               	movf	??_mcp2515_read_canMsg,w
  3641     059B  0084               	movwf	4
  3642     059C  120A  158A  2587  120A  118A  	fcall	_ReadSPI
  3643     05A1  1383               	bcf	3,7	;select IRP bank0
  3644     05A2  0080               	movwf	0
  3645     05A3                     l3299:
  3646                           
  3647                           ;mcp2515_can.c: 981:     }
  3648     05A3  3001               	movlw	1
  3649     05A4  00FF               	movwf	btemp+1
  3650     05A5  087F               	movf	btemp+1,w
  3651     05A6  07FC               	addwf	mcp2515_read_canMsg@i,f
  3652     05A7                     l3301:
  3653     05A7  0874               	movf	mcp2515_read_canMsg@len,w
  3654     05A8  0084               	movwf	4
  3655     05A9  0800               	movf	0,w
  3656     05AA  027C               	subwf	mcp2515_read_canMsg@i,w
  3657     05AB  1803               	skipnc
  3658     05AC  2DAE               	goto	u1391
  3659     05AD  2DAF               	goto	u1390
  3660     05AE                     u1391:
  3661     05AE  2DB5               	goto	l285
  3662     05AF                     u1390:
  3663     05AF                     l3303:
  3664     05AF  3008               	movlw	8
  3665     05B0  027C               	subwf	mcp2515_read_canMsg@i,w
  3666     05B1  1C03               	skipc
  3667     05B2  2DB4               	goto	u1401
  3668     05B3  2DB5               	goto	u1400
  3669     05B4                     u1401:
  3670     05B4  2D95               	goto	l3297
  3671     05B5                     u1400:
  3672     05B5                     l285:
  3673                           
  3674                           ;mcp2515_can.c: 983:     RD0 = 1;;
  3675     05B5  1283               	bcf	3,5	;RP0=0, select bank0
  3676     05B6  1303               	bcf	3,6	;RP1=0, select bank0
  3677     05B7  1408               	bsf	8,0	;volatile
  3678     05B8                     l286:
  3679     05B8  0008               	return
  3680     05B9                     __end_of_mcp2515_read_canMsg:
  3681                           
  3682                           	psect	text16
  3683     0003                     __ptext16:	
  3684 ;; *************** function _init_CS *****************
  3685 ;; Defined at:
  3686 ;;		line 17 in file "mcp_can.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;		None
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;		None
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1    wreg      void 
  3693 ;; Registers used:
  3694 ;;		None
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3700 ;;      Params:         0       0       0       0       0
  3701 ;;      Locals:         0       0       0       0       0
  3702 ;;      Temps:          0       0       0       0       0
  3703 ;;      Totals:         0       0       0       0       0
  3704 ;;Total ram usage:        0 bytes
  3705 ;; Hardware stack levels used: 1
  3706 ;; This function calls:
  3707 ;;		Nothing
  3708 ;; This function is called by:
  3709 ;;		_main
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713     0003                     _init_CS:	
  3714                           ;psect for function _init_CS
  3715                           
  3716     0003                     l3517:	
  3717                           ;incstack = 0
  3718                           ; Regs used in _init_CS: []
  3719                           
  3720                           
  3721                           ;mcp_can.c: 23:     TRISD0 = 0;
  3722     0003  1683               	bsf	3,5	;RP0=1, select bank1
  3723     0004  1303               	bcf	3,6	;RP1=0, select bank1
  3724     0005  1008               	bcf	8,0	;volatile
  3725                           
  3726                           ;mcp_can.c: 24:     RD0 = 1;
  3727     0006  1283               	bcf	3,5	;RP0=0, select bank0
  3728     0007  1303               	bcf	3,6	;RP1=0, select bank0
  3729     0008  1408               	bsf	8,0	;volatile
  3730     0009                     l15:
  3731     0009  0008               	return
  3732     000A                     __end_of_init_CS:
  3733                           
  3734                           	psect	text17
  3735     0D7C                     __ptext17:	
  3736 ;; *************** function _getCanId *****************
  3737 ;; Defined at:
  3738 ;;		line 32 in file "main.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;		None
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;		None
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  4    0[COMMON] unsigned long 
  3745 ;; Registers used:
  3746 ;;		wreg
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3752 ;;      Params:         4       0       0       0       0
  3753 ;;      Locals:         0       0       0       0       0
  3754 ;;      Temps:          0       0       0       0       0
  3755 ;;      Totals:         4       0       0       0       0
  3756 ;;Total ram usage:        4 bytes
  3757 ;; Hardware stack levels used: 1
  3758 ;; This function calls:
  3759 ;;		Nothing
  3760 ;; This function is called by:
  3761 ;;		_main
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765     0D7C                     _getCanId:	
  3766                           ;psect for function _getCanId
  3767                           
  3768     0D7C                     l3577:	
  3769                           ;incstack = 0
  3770                           ; Regs used in _getCanId: [wreg]
  3771                           
  3772     0D7C  1283               	bcf	3,5	;RP0=0, select bank0
  3773     0D7D  1303               	bcf	3,6	;RP1=0, select bank0
  3774     0D7E  0862               	movf	_can_id+3,w
  3775     0D7F  00F3               	movwf	?_getCanId+3
  3776     0D80  0861               	movf	_can_id+2,w
  3777     0D81  00F2               	movwf	?_getCanId+2
  3778     0D82  0860               	movf	_can_id+1,w
  3779     0D83  00F1               	movwf	?_getCanId+1
  3780     0D84  085F               	movf	_can_id,w
  3781     0D85  00F0               	movwf	?_getCanId
  3782     0D86                     l593:
  3783     0D86  0008               	return
  3784     0D87                     __end_of_getCanId:
  3785                           
  3786                           	psect	text18
  3787     0E07                     __ptext18:	
  3788 ;; *************** function _checkReceive *****************
  3789 ;; Defined at:
  3790 ;;		line 1387 in file "mcp2515_can.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  res             1    4[COMMON] unsigned char 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      unsigned char 
  3797 ;; Registers used:
  3798 ;;		wreg, status,2, status,0, pclath, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3804 ;;      Params:         0       0       0       0       0
  3805 ;;      Locals:         3       0       0       0       0
  3806 ;;      Temps:          0       0       0       0       0
  3807 ;;      Totals:         3       0       0       0       0
  3808 ;;Total ram usage:        3 bytes
  3809 ;; Hardware stack levels used: 1
  3810 ;; Hardware stack levels required when called: 2
  3811 ;; This function calls:
  3812 ;;		_mcp2515_readStatus
  3813 ;; This function is called by:
  3814 ;;		_main
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818     0E07                     _checkReceive:	
  3819                           ;psect for function _checkReceive
  3820                           
  3821     0E07                     l3563:	
  3822                           ;incstack = 0
  3823                           ; Regs used in _checkReceive: [wreg+status,2+status,0+pclath+cstack]
  3824                           
  3825                           
  3826                           ;mcp2515_can.c: 1388:     unsigned char res;;mcp2515_can.c: 1389:     res = mcp2515_read
      +                          Status();
  3827     0E07  120A  158A  25DD  120A  158A  	fcall	_mcp2515_readStatus
  3828     0E0C  00F4               	movwf	checkReceive@res
  3829     0E0D                     l3565:
  3830                           
  3831                           ;mcp2515_can.c: 1390:     return ((res & (0x03)) ? (3) : (4));
  3832     0E0D  0874               	movf	checkReceive@res,w
  3833     0E0E  3903               	andlw	3
  3834     0E0F  1D03               	btfss	3,2
  3835     0E10  2E12               	goto	u1721
  3836     0E11  2E13               	goto	u1720
  3837     0E12                     u1721:
  3838     0E12  2E18               	goto	l3569
  3839     0E13                     u1720:
  3840     0E13                     l3567:
  3841     0E13  3004               	movlw	4
  3842     0E14  00F2               	movwf	_checkReceive$320
  3843     0E15  3000               	movlw	0
  3844     0E16  00F3               	movwf	_checkReceive$320+1
  3845     0E17  2E1C               	goto	l410
  3846     0E18                     l3569:
  3847     0E18  3003               	movlw	3
  3848     0E19  00F2               	movwf	_checkReceive$320
  3849     0E1A  3000               	movlw	0
  3850     0E1B  00F3               	movwf	_checkReceive$320+1
  3851     0E1C                     l410:
  3852     0E1C  0872               	movf	_checkReceive$320,w
  3853     0E1D                     l411:
  3854     0E1D  0008               	return
  3855     0E1E                     __end_of_checkReceive:
  3856                           
  3857                           	psect	text19
  3858     0DDD                     __ptext19:	
  3859 ;; *************** function _mcp2515_readStatus *****************
  3860 ;; Defined at:
  3861 ;;		line 275 in file "mcp2515_can.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;		None
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;  i               1    1[COMMON] unsigned char 
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  1    wreg      unsigned char 
  3868 ;; Registers used:
  3869 ;;		wreg, status,2, status,0, pclath, cstack
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3875 ;;      Params:         0       0       0       0       0
  3876 ;;      Locals:         1       0       0       0       0
  3877 ;;      Temps:          0       0       0       0       0
  3878 ;;      Totals:         1       0       0       0       0
  3879 ;;Total ram usage:        1 bytes
  3880 ;; Hardware stack levels used: 1
  3881 ;; Hardware stack levels required when called: 1
  3882 ;; This function calls:
  3883 ;;		_ReadSPI
  3884 ;;		_WriteSPI
  3885 ;; This function is called by:
  3886 ;;		_mcp2515_getNextFreeTXBuf
  3887 ;;		_readRxTxStatus
  3888 ;;		_checkReceive
  3889 ;;		_mcp2515_isTXBufFree
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893     0DDD                     _mcp2515_readStatus:	
  3894                           ;psect for function _mcp2515_readStatus
  3895                           
  3896     0DDD                     l2921:	
  3897                           ;incstack = 0
  3898                           ; Regs used in _mcp2515_readStatus: [wreg+status,2+status,0+pclath+cstack]
  3899                           
  3900                           
  3901                           ;mcp2515_can.c: 276:     unsigned char i;;mcp2515_can.c: 280:     RD0 = 0;;
  3902     0DDD  1283               	bcf	3,5	;RP0=0, select bank0
  3903     0DDE  1303               	bcf	3,6	;RP1=0, select bank0
  3904     0DDF  1008               	bcf	8,0	;volatile
  3905     0DE0                     l2923:
  3906                           
  3907                           ;mcp2515_can.c: 281:     WriteSPI(0xA0);
  3908     0DE0  30A0               	movlw	160
  3909     0DE1  120A  158A  2594  120A  158A  	fcall	_WriteSPI
  3910     0DE6                     l2925:
  3911                           
  3912                           ;mcp2515_can.c: 282:     i = ReadSPI();
  3913     0DE6  120A  158A  2587  120A  158A  	fcall	_ReadSPI
  3914     0DEB  00F1               	movwf	mcp2515_readStatus@i
  3915     0DEC                     l2927:
  3916                           
  3917                           ;mcp2515_can.c: 283:     RD0 = 1;;
  3918     0DEC  1283               	bcf	3,5	;RP0=0, select bank0
  3919     0DED  1303               	bcf	3,6	;RP1=0, select bank0
  3920     0DEE  1408               	bsf	8,0	;volatile
  3921     0DEF                     l2929:
  3922                           
  3923                           ;mcp2515_can.c: 288:     return i;
  3924     0DEF  0871               	movf	mcp2515_readStatus@i,w
  3925     0DF0                     l127:
  3926     0DF0  0008               	return
  3927     0DF1                     __end_of_mcp2515_readStatus:
  3928                           
  3929                           	psect	text20
  3930     0F15                     __ptext20:	
  3931 ;; *************** function _begin *****************
  3932 ;; Defined at:
  3933 ;;		line 1049 in file "mcp2515_can.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  speedset        4    6[BANK0 ] unsigned long 
  3936 ;;  clockset        1   10[BANK0 ] const unsigned char 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;  res             1   11[BANK0 ] unsigned char 
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      unsigned char 
  3941 ;; Registers used:
  3942 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3948 ;;      Params:         0       5       0       0       0
  3949 ;;      Locals:         0       1       0       0       0
  3950 ;;      Temps:          0       0       0       0       0
  3951 ;;      Totals:         0       6       0       0       0
  3952 ;;Total ram usage:        6 bytes
  3953 ;; Hardware stack levels used: 1
  3954 ;; Hardware stack levels required when called: 6
  3955 ;; This function calls:
  3956 ;;		_OpenSPI
  3957 ;;		_mcp2515_init
  3958 ;; This function is called by:
  3959 ;;		_main
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963     0F15                     _begin:	
  3964                           ;psect for function _begin
  3965                           
  3966     0F15                     l3553:	
  3967                           ;incstack = 0
  3968                           ; Regs used in _begin: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3969                           
  3970                           
  3971                           ;mcp2515_can.c: 1050:     OpenSPI(0, 0, 0x80);
  3972     0F15  01F0               	clrf	OpenSPI@bus_mode
  3973     0F16  3080               	movlw	128
  3974     0F17  00F1               	movwf	OpenSPI@smp_phase
  3975     0F18  3000               	movlw	0
  3976     0F19  120A  118A  20A8  120A  158A  	fcall	_OpenSPI
  3977                           
  3978                           ;mcp2515_can.c: 1051:     unsigned char res = mcp2515_init((unsigned char)speedset, cloc
      +                          kset);
  3979     0F1E  1283               	bcf	3,5	;RP0=0, select bank0
  3980     0F1F  1303               	bcf	3,6	;RP1=0, select bank0
  3981     0F20  082A               	movf	begin@clockset,w
  3982     0F21  00A1               	movwf	mcp2515_init@clock
  3983     0F22  0826               	movf	begin@speedset,w
  3984     0F23  120A  118A  2259  120A  158A  	fcall	_mcp2515_init
  3985     0F28  1283               	bcf	3,5	;RP0=0, select bank0
  3986     0F29  1303               	bcf	3,6	;RP1=0, select bank0
  3987     0F2A  00AB               	movwf	begin@res
  3988     0F2B                     l3555:
  3989                           
  3990                           ;mcp2515_can.c: 1053:     return ((res == (0)) ? (0) : (1));
  3991     0F2B  082B               	movf	begin@res,w
  3992     0F2C  1D03               	btfss	3,2
  3993     0F2D  2F2F               	goto	u1701
  3994     0F2E  2F31               	goto	u1700
  3995     0F2F                     u1701:
  3996     0F2F  3001               	movlw	1
  3997     0F30  2F32               	goto	u1710
  3998     0F31                     u1700:
  3999     0F31  3000               	movlw	0
  4000     0F32                     u1710:
  4001     0F32                     l306:
  4002     0F32  0008               	return
  4003     0F33                     __end_of_begin:
  4004                           
  4005                           	psect	text21
  4006     0259                     __ptext21:	
  4007 ;; *************** function _mcp2515_init *****************
  4008 ;; Defined at:
  4009 ;;		line 772 in file "mcp2515_can.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  canSpeed        1    wreg     const unsigned char 
  4012 ;;  clock           1    1[BANK0 ] const unsigned char 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  canSpeed        1    4[BANK0 ] const unsigned char 
  4015 ;;  res             1    5[BANK0 ] unsigned char 
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      unsigned char 
  4018 ;; Registers used:
  4019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4025 ;;      Params:         0       1       0       0       0
  4026 ;;      Locals:         0       2       0       0       0
  4027 ;;      Temps:          0       2       0       0       0
  4028 ;;      Totals:         0       5       0       0       0
  4029 ;;Total ram usage:        5 bytes
  4030 ;; Hardware stack levels used: 1
  4031 ;; Hardware stack levels required when called: 5
  4032 ;; This function calls:
  4033 ;;		_mcp2515_configRate
  4034 ;;		_mcp2515_initCANBuffers
  4035 ;;		_mcp2515_modifyRegister
  4036 ;;		_mcp2515_reset
  4037 ;;		_mcp2515_setCANCTRL_Mode
  4038 ;;		_mcp2515_setRegister
  4039 ;;		_setMode
  4040 ;; This function is called by:
  4041 ;;		_begin
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045     0259                     _mcp2515_init:	
  4046                           ;psect for function _mcp2515_init
  4047                           
  4048                           
  4049                           ;incstack = 0
  4050                           ; Regs used in _mcp2515_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4051                           ;mcp2515_init@canSpeed stored from wreg
  4052     0259  1283               	bcf	3,5	;RP0=0, select bank0
  4053     025A  1303               	bcf	3,6	;RP1=0, select bank0
  4054     025B  00A4               	movwf	mcp2515_init@canSpeed
  4055     025C                     l3351:
  4056                           
  4057                           ;mcp2515_can.c: 774:     unsigned char res;;mcp2515_can.c: 776:     mcp2515_reset();
  4058     025C  120A  158A  25F1  120A  118A  	fcall	_mcp2515_reset
  4059     0261                     l3353:
  4060                           
  4061                           ;mcp2515_can.c: 778:     res = mcp2515_setCANCTRL_Mode(0x80);
  4062     0261  3080               	movlw	128
  4063     0262  120A  118A  2104  120A  118A  	fcall	_mcp2515_setCANCTRL_Mode
  4064     0267  1283               	bcf	3,5	;RP0=0, select bank0
  4065     0268  1303               	bcf	3,6	;RP1=0, select bank0
  4066     0269  00A5               	movwf	mcp2515_init@res
  4067     026A                     l3355:
  4068                           
  4069                           ;mcp2515_can.c: 779:     if (res > 0) {
  4070     026A  0825               	movf	mcp2515_init@res,w
  4071     026B  1903               	btfsc	3,2
  4072     026C  2A6E               	goto	u1461
  4073     026D  2A6F               	goto	u1460
  4074     026E                     u1461:
  4075     026E  2A7E               	goto	l3361
  4076     026F                     u1460:
  4077     026F                     l3357:
  4078                           
  4079                           ;mcp2515_can.c: 783:         _delay((unsigned long)((10)*(20000000/4000.0)));
  4080     026F  3041               	movlw	65
  4081     0270  1283               	bcf	3,5	;RP0=0, select bank0
  4082     0271  1303               	bcf	3,6	;RP1=0, select bank0
  4083     0272  00A3               	movwf	??_mcp2515_init+1
  4084     0273  30ED               	movlw	237
  4085     0274  00A2               	movwf	??_mcp2515_init
  4086     0275                     u2177:
  4087     0275  0BA2               	decfsz	??_mcp2515_init,f
  4088     0276  2A75               	goto	u2177
  4089     0277  0BA3               	decfsz	??_mcp2515_init+1,f
  4090     0278  2A75               	goto	u2177
  4091     0279  2A7A               	nop2
  4092                           
  4093                           ;mcp2515_can.c: 785:         return res;
  4094     027A  1283               	bcf	3,5	;RP0=0, select bank0
  4095     027B  1303               	bcf	3,6	;RP1=0, select bank0
  4096     027C  0825               	movf	mcp2515_init@res,w
  4097     027D  2AE8               	goto	l246
  4098     027E                     l3361:
  4099                           
  4100                           ;mcp2515_can.c: 790:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4101     027E  3041               	movlw	65
  4102     027F  1283               	bcf	3,5	;RP0=0, select bank0
  4103     0280  1303               	bcf	3,6	;RP1=0, select bank0
  4104     0281  00A3               	movwf	??_mcp2515_init+1
  4105     0282  30ED               	movlw	237
  4106     0283  00A2               	movwf	??_mcp2515_init
  4107     0284                     u2187:
  4108     0284  0BA2               	decfsz	??_mcp2515_init,f
  4109     0285  2A84               	goto	u2187
  4110     0286  0BA3               	decfsz	??_mcp2515_init+1,f
  4111     0287  2A84               	goto	u2187
  4112     0288  2A89               	nop2
  4113     0289                     l3363:
  4114                           
  4115                           ;mcp2515_can.c: 794:     if (mcp2515_configRate(canSpeed, clock)) {
  4116     0289  1283               	bcf	3,5	;RP0=0, select bank0
  4117     028A  1303               	bcf	3,6	;RP1=0, select bank0
  4118     028B  0821               	movf	mcp2515_init@clock,w
  4119     028C  00F3               	movwf	mcp2515_configRate@clock
  4120     028D  0824               	movf	mcp2515_init@canSpeed,w
  4121     028E  120A  118A  25B9  120A  118A  	fcall	_mcp2515_configRate
  4122     0293  3A00               	xorlw	0
  4123     0294  1903               	skipnz
  4124     0295  2A97               	goto	u1471
  4125     0296  2A98               	goto	u1470
  4126     0297                     u1471:
  4127     0297  2A99               	goto	l3369
  4128     0298                     u1470:
  4129     0298  2A6F               	goto	l3357
  4130     0299                     l3369:
  4131                           
  4132                           ;mcp2515_can.c: 805:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4133     0299  3041               	movlw	65
  4134     029A  1283               	bcf	3,5	;RP0=0, select bank0
  4135     029B  1303               	bcf	3,6	;RP1=0, select bank0
  4136     029C  00A3               	movwf	??_mcp2515_init+1
  4137     029D  30ED               	movlw	237
  4138     029E  00A2               	movwf	??_mcp2515_init
  4139     029F                     u2197:
  4140     029F  0BA2               	decfsz	??_mcp2515_init,f
  4141     02A0  2A9F               	goto	u2197
  4142     02A1  0BA3               	decfsz	??_mcp2515_init+1,f
  4143     02A2  2A9F               	goto	u2197
  4144     02A3  2AA4               	nop2
  4145     02A4                     l3371:
  4146                           
  4147                           ;mcp2515_can.c: 808:     if (res == (0)) {
  4148     02A4  1283               	bcf	3,5	;RP0=0, select bank0
  4149     02A5  1303               	bcf	3,6	;RP1=0, select bank0
  4150     02A6  0825               	movf	mcp2515_init@res,w
  4151     02A7  1D03               	btfss	3,2
  4152     02A8  2AAA               	goto	u1481
  4153     02A9  2AAB               	goto	u1480
  4154     02AA                     u1481:
  4155     02AA  2AE5               	goto	l248
  4156     02AB                     u1480:
  4157     02AB                     l3373:
  4158                           
  4159                           ;mcp2515_can.c: 811:         mcp2515_initCANBuffers();
  4160     02AB  120A  158A  27BF  120A  118A  	fcall	_mcp2515_initCANBuffers
  4161     02B0                     l3375:
  4162                           
  4163                           ;mcp2515_can.c: 814:         mcp2515_setRegister(0x2B, 0x01 | 0x02);
  4164     02B0  3003               	movlw	3
  4165     02B1  00F1               	movwf	mcp2515_setRegister@value
  4166     02B2  302B               	movlw	43
  4167     02B3  120A  158A  2636  120A  118A  	fcall	_mcp2515_setRegister
  4168     02B8                     l3377:
  4169                           
  4170                           ;mcp2515_can.c: 825:         mcp2515_modifyRegister(0x60,
  4171     02B8  3064               	movlw	100
  4172     02B9  00F3               	movwf	mcp2515_modifyRegister@mask
  4173     02BA  3004               	movlw	4
  4174     02BB  00F4               	movwf	mcp2515_modifyRegister@data
  4175     02BC  3060               	movlw	96
  4176     02BD  120A  158A  2733  120A  118A  	fcall	_mcp2515_modifyRegister
  4177     02C2                     l3379:
  4178                           
  4179                           ;mcp2515_can.c: 828:         mcp2515_modifyRegister(0x70, 0x60,
  4180     02C2  3060               	movlw	96
  4181     02C3  00F3               	movwf	mcp2515_modifyRegister@mask
  4182     02C4  01F4               	clrf	mcp2515_modifyRegister@data
  4183     02C5  3070               	movlw	112
  4184     02C6  120A  158A  2733  120A  118A  	fcall	_mcp2515_modifyRegister
  4185     02CB                     l3381:
  4186                           
  4187                           ;mcp2515_can.c: 832:         res = setMode(0x00);
  4188     02CB  3000               	movlw	0
  4189     02CC  120A  158A  25A5  120A  118A  	fcall	_setMode
  4190     02D1  1283               	bcf	3,5	;RP0=0, select bank0
  4191     02D2  1303               	bcf	3,6	;RP1=0, select bank0
  4192     02D3  00A5               	movwf	mcp2515_init@res
  4193     02D4                     l3383:
  4194                           
  4195                           ;mcp2515_can.c: 833:         if (res) {
  4196     02D4  0825               	movf	mcp2515_init@res,w
  4197     02D5  1903               	btfsc	3,2
  4198     02D6  2AD8               	goto	u1491
  4199     02D7  2AD9               	goto	u1490
  4200     02D8                     u1491:
  4201     02D8  2ADA               	goto	l3389
  4202     02D9                     u1490:
  4203     02D9  2A6F               	goto	l3357
  4204     02DA                     l3389:
  4205                           
  4206                           ;mcp2515_can.c: 846:         _delay((unsigned long)((10)*(20000000/4000.0)));
  4207     02DA  3041               	movlw	65
  4208     02DB  1283               	bcf	3,5	;RP0=0, select bank0
  4209     02DC  1303               	bcf	3,6	;RP1=0, select bank0
  4210     02DD  00A3               	movwf	??_mcp2515_init+1
  4211     02DE  30ED               	movlw	237
  4212     02DF  00A2               	movwf	??_mcp2515_init
  4213     02E0                     u2207:
  4214     02E0  0BA2               	decfsz	??_mcp2515_init,f
  4215     02E1  2AE0               	goto	u2207
  4216     02E2  0BA3               	decfsz	??_mcp2515_init+1,f
  4217     02E3  2AE0               	goto	u2207
  4218     02E4  2AE5               	nop2
  4219     02E5                     l248:	
  4220                           ;mcp2515_can.c: 849:     }
  4221                           
  4222                           
  4223                           ;mcp2515_can.c: 850:     return res;
  4224     02E5  1283               	bcf	3,5	;RP0=0, select bank0
  4225     02E6  1303               	bcf	3,6	;RP1=0, select bank0
  4226     02E7  0825               	movf	mcp2515_init@res,w
  4227     02E8                     l246:
  4228     02E8  0008               	return
  4229     02E9                     __end_of_mcp2515_init:
  4230                           
  4231                           	psect	text22
  4232     0DA5                     __ptext22:	
  4233 ;; *************** function _setMode *****************
  4234 ;; Defined at:
  4235 ;;		line 328 in file "mcp2515_can.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  opMode          1    wreg     const unsigned char 
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;  opMode          1    0[BANK0 ] const unsigned char 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  1    wreg      unsigned char 
  4242 ;; Registers used:
  4243 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4249 ;;      Params:         0       0       0       0       0
  4250 ;;      Locals:         0       1       0       0       0
  4251 ;;      Temps:          0       0       0       0       0
  4252 ;;      Totals:         0       1       0       0       0
  4253 ;;Total ram usage:        1 bytes
  4254 ;; Hardware stack levels used: 1
  4255 ;; Hardware stack levels required when called: 4
  4256 ;; This function calls:
  4257 ;;		_mcp2515_setCANCTRL_Mode
  4258 ;; This function is called by:
  4259 ;;		_mcp2515_init
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263     0DA5                     _setMode:	
  4264                           ;psect for function _setMode
  4265                           
  4266                           
  4267                           ;incstack = 0
  4268                           ; Regs used in _setMode: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4269                           ;setMode@opMode stored from wreg
  4270     0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  4271     0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  4272     0DA7  00A0               	movwf	setMode@opMode
  4273     0DA8                     l2989:
  4274                           
  4275                           ;mcp2515_can.c: 329:     if (opMode != 0x20)
  4276     0DA8  3020               	movlw	32
  4277     0DA9  0620               	xorwf	setMode@opMode,w
  4278     0DAA  1903               	btfsc	3,2
  4279     0DAB  2DAD               	goto	u1211
  4280     0DAC  2DAE               	goto	u1210
  4281     0DAD                     u1211:
  4282     0DAD  2DB0               	goto	l2993
  4283     0DAE                     u1210:
  4284     0DAE                     l2991:
  4285                           
  4286                           ;mcp2515_can.c: 330:         mcpMode = opMode;
  4287     0DAE  0820               	movf	setMode@opMode,w
  4288     0DAF  00DE               	movwf	_mcpMode
  4289     0DB0                     l2993:
  4290                           
  4291                           ;mcp2515_can.c: 331:     return mcp2515_setCANCTRL_Mode(opMode);
  4292     0DB0  0820               	movf	setMode@opMode,w
  4293     0DB1  120A  118A  2104  120A  158A  	fcall	_mcp2515_setCANCTRL_Mode
  4294     0DB6                     l148:
  4295     0DB6  0008               	return
  4296     0DB7                     __end_of_setMode:
  4297                           
  4298                           	psect	text23
  4299     0104                     __ptext23:	
  4300 ;; *************** function _mcp2515_setCANCTRL_Mode *****************
  4301 ;; Defined at:
  4302 ;;		line 346 in file "mcp2515_can.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;  newmode         1    wreg     const unsigned char 
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;  newmode         1   12[COMMON] const unsigned char 
  4307 ;;  wakeIntEnabl    1   13[COMMON] unsigned char 
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  1    wreg      unsigned char 
  4310 ;; Registers used:
  4311 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4317 ;;      Params:         0       0       0       0       0
  4318 ;;      Locals:         2       0       0       0       0
  4319 ;;      Temps:          0       0       0       0       0
  4320 ;;      Totals:         2       0       0       0       0
  4321 ;;Total ram usage:        2 bytes
  4322 ;; Hardware stack levels used: 1
  4323 ;; Hardware stack levels required when called: 3
  4324 ;; This function calls:
  4325 ;;		_getMode
  4326 ;;		_mcp2515_modifyRegister
  4327 ;;		_mcp2515_readRegister
  4328 ;;		_mcp2515_requestNewMode
  4329 ;; This function is called by:
  4330 ;;		_setMode
  4331 ;;		_mcp2515_init
  4332 ;;		_sleep
  4333 ;;		_wake
  4334 ;;		_init_Mask
  4335 ;;		_init_Filt
  4336 ;;		_mcpPinMode
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340     0104                     _mcp2515_setCANCTRL_Mode:	
  4341                           ;psect for function _mcp2515_setCANCTRL_Mode
  4342                           
  4343                           
  4344                           ;incstack = 0
  4345                           ; Regs used in _mcp2515_setCANCTRL_Mode: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4346                           ;mcp2515_setCANCTRL_Mode@newmode stored from wreg
  4347     0104  00FC               	movwf	mcp2515_setCANCTRL_Mode@newmode
  4348     0105                     l2933:
  4349                           
  4350                           ;mcp2515_can.c: 350:     if ((getMode()) == 0x20 && newmode != 0x20) {
  4351     0105  120A  158A  256C  120A  118A  	fcall	_getMode
  4352     010A  3A20               	xorlw	32
  4353     010B  1D03               	skipz
  4354     010C  290E               	goto	u1111
  4355     010D  290F               	goto	u1110
  4356     010E                     u1111:
  4357     010E  2951               	goto	l154
  4358     010F                     u1110:
  4359     010F                     l2935:
  4360     010F  3020               	movlw	32
  4361     0110  067C               	xorwf	mcp2515_setCANCTRL_Mode@newmode,w
  4362     0111  1903               	btfsc	3,2
  4363     0112  2914               	goto	u1121
  4364     0113  2915               	goto	u1120
  4365     0114                     u1121:
  4366     0114  2951               	goto	l154
  4367     0115                     u1120:
  4368     0115                     l2937:
  4369                           
  4370                           ;mcp2515_can.c: 352:         unsigned char wakeIntEnabled = (mcp2515_readRegister(0x2B) 
      +                          & 0x40);
  4371     0115  302B               	movlw	43
  4372     0116  120A  158A  266A  120A  118A  	fcall	_mcp2515_readRegister
  4373     011B  3940               	andlw	64
  4374     011C  00FD               	movwf	mcp2515_setCANCTRL_Mode@wakeIntEnabled
  4375     011D                     l2939:
  4376                           
  4377                           ;mcp2515_can.c: 353:         if (!wakeIntEnabled) {
  4378     011D  087D               	movf	mcp2515_setCANCTRL_Mode@wakeIntEnabled,w
  4379     011E  1D03               	btfss	3,2
  4380     011F  2921               	goto	u1131
  4381     0120  2922               	goto	u1130
  4382     0121                     u1131:
  4383     0121  292C               	goto	l155
  4384     0122                     u1130:
  4385     0122                     l2941:
  4386                           
  4387                           ;mcp2515_can.c: 354:             mcp2515_modifyRegister(0x2B, 0x40, 0x40);
  4388     0122  3040               	movlw	64
  4389     0123  00F3               	movwf	mcp2515_modifyRegister@mask
  4390     0124  3040               	movlw	64
  4391     0125  00F4               	movwf	mcp2515_modifyRegister@data
  4392     0126  302B               	movlw	43
  4393     0127  120A  158A  2733  120A  118A  	fcall	_mcp2515_modifyRegister
  4394     012C                     l155:	
  4395                           ;mcp2515_can.c: 355:         }
  4396                           
  4397                           
  4398                           ;mcp2515_can.c: 358:         mcp2515_modifyRegister(0x2C, 0x40, 0x40);
  4399     012C  3040               	movlw	64
  4400     012D  00F3               	movwf	mcp2515_modifyRegister@mask
  4401     012E  3040               	movlw	64
  4402     012F  00F4               	movwf	mcp2515_modifyRegister@data
  4403     0130  302C               	movlw	44
  4404     0131  120A  158A  2733  120A  118A  	fcall	_mcp2515_modifyRegister
  4405     0136                     l2943:
  4406                           
  4407                           ;mcp2515_can.c: 366:         if (mcp2515_requestNewMode(0x60) != (0)) {
  4408     0136  3060               	movlw	96
  4409     0137  120A  158A  2783  120A  118A  	fcall	_mcp2515_requestNewMode
  4410     013C  3A00               	xorlw	0
  4411     013D  1903               	skipnz
  4412     013E  2940               	goto	u1141
  4413     013F  2941               	goto	u1140
  4414     0140                     u1141:
  4415     0140  2943               	goto	l2949
  4416     0141                     u1140:
  4417     0141                     l2945:
  4418                           
  4419                           ;mcp2515_can.c: 367:             return (1);
  4420     0141  3001               	movlw	1
  4421     0142  2960               	goto	l157
  4422     0143                     l2949:
  4423                           
  4424                           ;mcp2515_can.c: 371:         if (!wakeIntEnabled) {
  4425     0143  087D               	movf	mcp2515_setCANCTRL_Mode@wakeIntEnabled,w
  4426     0144  1D03               	btfss	3,2
  4427     0145  2947               	goto	u1151
  4428     0146  2948               	goto	u1150
  4429     0147                     u1151:
  4430     0147  2951               	goto	l154
  4431     0148                     u1150:
  4432     0148                     l2951:
  4433                           
  4434                           ;mcp2515_can.c: 372:             mcp2515_modifyRegister(0x2B, 0x40, 0);
  4435     0148  3040               	movlw	64
  4436     0149  00F3               	movwf	mcp2515_modifyRegister@mask
  4437     014A  01F4               	clrf	mcp2515_modifyRegister@data
  4438     014B  302B               	movlw	43
  4439     014C  120A  158A  2733  120A  118A  	fcall	_mcp2515_modifyRegister
  4440     0151                     l154:	
  4441                           ;mcp2515_can.c: 374:     }
  4442                           
  4443                           
  4444                           ;mcp2515_can.c: 377:     mcp2515_modifyRegister(0x2C, 0x40, 0);
  4445     0151  3040               	movlw	64
  4446     0152  00F3               	movwf	mcp2515_modifyRegister@mask
  4447     0153  01F4               	clrf	mcp2515_modifyRegister@data
  4448     0154  302C               	movlw	44
  4449     0155  120A  158A  2733  120A  118A  	fcall	_mcp2515_modifyRegister
  4450     015A                     l2953:
  4451                           
  4452                           ;mcp2515_can.c: 379:     return mcp2515_requestNewMode(newmode);
  4453     015A  087C               	movf	mcp2515_setCANCTRL_Mode@newmode,w
  4454     015B  120A  158A  2783  120A  118A  	fcall	_mcp2515_requestNewMode
  4455     0160                     l157:
  4456     0160  0008               	return
  4457     0161                     __end_of_mcp2515_setCANCTRL_Mode:
  4458                           
  4459                           	psect	text24
  4460     0F83                     __ptext24:	
  4461 ;; *************** function _mcp2515_requestNewMode *****************
  4462 ;; Defined at:
  4463 ;;		line 386 in file "mcp2515_can.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;  newmode         1    wreg     const unsigned char 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  newmode         1   11[COMMON] const unsigned char 
  4468 ;;  statReg         1   10[COMMON] unsigned char 
  4469 ;;  Count           2    8[COMMON] int 
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  1    wreg      unsigned char 
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4479 ;;      Params:         0       0       0       0       0
  4480 ;;      Locals:         4       0       0       0       0
  4481 ;;      Temps:          2       0       0       0       0
  4482 ;;      Totals:         6       0       0       0       0
  4483 ;;Total ram usage:        6 bytes
  4484 ;; Hardware stack levels used: 1
  4485 ;; Hardware stack levels required when called: 2
  4486 ;; This function calls:
  4487 ;;		_mcp2515_modifyRegister
  4488 ;;		_mcp2515_readRegister
  4489 ;; This function is called by:
  4490 ;;		_mcp2515_setCANCTRL_Mode
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494     0F83                     _mcp2515_requestNewMode:	
  4495                           ;psect for function _mcp2515_requestNewMode
  4496                           
  4497                           
  4498                           ;incstack = 0
  4499                           ; Regs used in _mcp2515_requestNewMode: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4500                           ;mcp2515_requestNewMode@newmode stored from wreg
  4501     0F83  00FB               	movwf	mcp2515_requestNewMode@newmode
  4502     0F84                     l2787:
  4503                           
  4504                           ;mcp2515_can.c: 387:     int Count = 0;
  4505     0F84  01F8               	clrf	mcp2515_requestNewMode@Count
  4506     0F85  01F9               	clrf	mcp2515_requestNewMode@Count+1
  4507     0F86                     l2789:
  4508                           
  4509                           ;mcp2515_can.c: 392:         mcp2515_modifyRegister(0x0F, 0xE0, newmode);
  4510     0F86  30E0               	movlw	224
  4511     0F87  00F3               	movwf	mcp2515_modifyRegister@mask
  4512     0F88  087B               	movf	mcp2515_requestNewMode@newmode,w
  4513     0F89  00F4               	movwf	mcp2515_modifyRegister@data
  4514     0F8A  300F               	movlw	15
  4515     0F8B  120A  158A  2733  120A  158A  	fcall	_mcp2515_modifyRegister
  4516     0F90                     l2791:
  4517                           
  4518                           ;mcp2515_can.c: 394:         unsigned char statReg = mcp2515_readRegister(0x0E);
  4519     0F90  300E               	movlw	14
  4520     0F91  120A  158A  266A  120A  158A  	fcall	_mcp2515_readRegister
  4521     0F96  00FA               	movwf	mcp2515_requestNewMode@statReg
  4522     0F97                     l2793:
  4523                           
  4524                           ;mcp2515_can.c: 395:         if ((statReg & 0xE0) == newmode) {
  4525     0F97  087A               	movf	mcp2515_requestNewMode@statReg,w
  4526     0F98  39E0               	andlw	224
  4527     0F99  067B               	xorwf	mcp2515_requestNewMode@newmode,w
  4528     0F9A  1D03               	skipz
  4529     0F9B  2F9D               	goto	u1091
  4530     0F9C  2F9E               	goto	u1090
  4531     0F9D                     u1091:
  4532     0F9D  2FA0               	goto	l2801
  4533     0F9E                     u1090:
  4534     0F9E                     l2795:
  4535                           
  4536                           ;mcp2515_can.c: 396:             return (0);
  4537     0F9E  3000               	movlw	0
  4538     0F9F  2FBE               	goto	l163
  4539     0FA0                     l2801:
  4540     0FA0  0879               	movf	mcp2515_requestNewMode@Count+1,w
  4541     0FA1  3A80               	xorlw	128
  4542     0FA2  00FF               	movwf	btemp+1
  4543     0FA3  3080               	movlw	128
  4544     0FA4  027F               	subwf	btemp+1,w
  4545     0FA5  1D03               	skipz
  4546     0FA6  2FA9               	goto	u1105
  4547     0FA7  30C9               	movlw	201
  4548     0FA8  0278               	subwf	mcp2515_requestNewMode@Count,w
  4549     0FA9                     u1105:
  4550     0FA9  1C03               	skipc
  4551     0FAA  2FAC               	goto	u1101
  4552     0FAB  2FAD               	goto	u1100
  4553     0FAC                     u1101:
  4554     0FAC  2FAF               	goto	l2809
  4555     0FAD                     u1100:
  4556     0FAD                     l2803:
  4557                           
  4558                           ;mcp2515_can.c: 398:             return (1);
  4559     0FAD  3001               	movlw	1
  4560     0FAE  2FBE               	goto	l163
  4561     0FAF                     l2809:
  4562                           
  4563                           ;mcp2515_can.c: 400:             _delay((unsigned long)((1)*(20000000/4000.0)));
  4564     0FAF  3007               	movlw	7
  4565     0FB0  00F7               	movwf	??_mcp2515_requestNewMode+1
  4566     0FB1  307D               	movlw	125
  4567     0FB2  00F6               	movwf	??_mcp2515_requestNewMode
  4568     0FB3                     u2217:
  4569     0FB3  0BF6               	decfsz	??_mcp2515_requestNewMode,f
  4570     0FB4  2FB3               	goto	u2217
  4571     0FB5  0BF7               	decfsz	??_mcp2515_requestNewMode+1,f
  4572     0FB6  2FB3               	goto	u2217
  4573                           
  4574                           ;mcp2515_can.c: 401:             Count++;
  4575     0FB7  3001               	movlw	1
  4576     0FB8  07F8               	addwf	mcp2515_requestNewMode@Count,f
  4577     0FB9  1803               	skipnc
  4578     0FBA  0AF9               	incf	mcp2515_requestNewMode@Count+1,f
  4579     0FBB  3000               	movlw	0
  4580     0FBC  07F9               	addwf	mcp2515_requestNewMode@Count+1,f
  4581     0FBD  2F86               	goto	l2789
  4582     0FBE                     l163:
  4583     0FBE  0008               	return
  4584     0FBF                     __end_of_mcp2515_requestNewMode:
  4585                           
  4586                           	psect	text25
  4587     0F33                     __ptext25:	
  4588 ;; *************** function _mcp2515_modifyRegister *****************
  4589 ;; Defined at:
  4590 ;;		line 256 in file "mcp2515_can.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  address         1    wreg     const unsigned char 
  4593 ;;  mask            1    3[COMMON] const unsigned char 
  4594 ;;  data            1    4[COMMON] const unsigned char 
  4595 ;; Auto vars:     Size  Location     Type
  4596 ;;  address         1    5[COMMON] const unsigned char 
  4597 ;; Return value:  Size  Location     Type
  4598 ;;                  1    wreg      void 
  4599 ;; Registers used:
  4600 ;;		wreg, status,2, status,0, pclath, cstack
  4601 ;; Tracked objects:
  4602 ;;		On entry : 0/0
  4603 ;;		On exit  : 0/0
  4604 ;;		Unchanged: 0/0
  4605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4606 ;;      Params:         2       0       0       0       0
  4607 ;;      Locals:         1       0       0       0       0
  4608 ;;      Temps:          0       0       0       0       0
  4609 ;;      Totals:         3       0       0       0       0
  4610 ;;Total ram usage:        3 bytes
  4611 ;; Hardware stack levels used: 1
  4612 ;; Hardware stack levels required when called: 1
  4613 ;; This function calls:
  4614 ;;		_WriteSPI
  4615 ;; This function is called by:
  4616 ;;		_mcp2515_setCANCTRL_Mode
  4617 ;;		_mcp2515_requestNewMode
  4618 ;;		_mcp2515_init
  4619 ;;		_mcp2515_getNextFreeTXBuf
  4620 ;;		_setSleepWakeup
  4621 ;;		_mcp2515_isTXBufFree
  4622 ;;		_sendMsgBuf1
  4623 ;;		_clearBufferTransmitIfFlags
  4624 ;;		_mcpPinMode
  4625 ;;		_mcpDigitalWrite
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629     0F33                     _mcp2515_modifyRegister:	
  4630                           ;psect for function _mcp2515_modifyRegister
  4631                           
  4632                           
  4633                           ;incstack = 0
  4634                           ; Regs used in _mcp2515_modifyRegister: [wreg+status,2+status,0+pclath+cstack]
  4635                           ;mcp2515_modifyRegister@address stored from wreg
  4636     0F33  00F5               	movwf	mcp2515_modifyRegister@address
  4637     0F34                     l2751:
  4638                           
  4639                           ;mcp2515_can.c: 260:     RD0 = 0;;
  4640     0F34  1283               	bcf	3,5	;RP0=0, select bank0
  4641     0F35  1303               	bcf	3,6	;RP1=0, select bank0
  4642     0F36  1008               	bcf	8,0	;volatile
  4643     0F37                     l2753:
  4644                           
  4645                           ;mcp2515_can.c: 261:     WriteSPI(0x05);
  4646     0F37  3005               	movlw	5
  4647     0F38  120A  158A  2594  120A  158A  	fcall	_WriteSPI
  4648                           
  4649                           ;mcp2515_can.c: 262:     WriteSPI(address);
  4650     0F3D  0875               	movf	mcp2515_modifyRegister@address,w
  4651     0F3E  120A  158A  2594  120A  158A  	fcall	_WriteSPI
  4652                           
  4653                           ;mcp2515_can.c: 263:     WriteSPI(mask);
  4654     0F43  0873               	movf	mcp2515_modifyRegister@mask,w
  4655     0F44  120A  158A  2594  120A  158A  	fcall	_WriteSPI
  4656                           
  4657                           ;mcp2515_can.c: 264:     WriteSPI(data);
  4658     0F49  0874               	movf	mcp2515_modifyRegister@data,w
  4659     0F4A  120A  158A  2594  120A  158A  	fcall	_WriteSPI
  4660     0F4F                     l2755:
  4661                           
  4662                           ;mcp2515_can.c: 265:     RD0 = 1;;
  4663     0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  4664     0F50  1303               	bcf	3,6	;RP1=0, select bank0
  4665     0F51  1408               	bsf	8,0	;volatile
  4666     0F52                     l124:
  4667     0F52  0008               	return
  4668     0F53                     __end_of_mcp2515_modifyRegister:
  4669                           
  4670                           	psect	text26
  4671     0D6C                     __ptext26:	
  4672 ;; *************** function _getMode *****************
  4673 ;; Defined at:
  4674 ;;		line 338 in file "mcp2515_can.c"
  4675 ;; Parameters:    Size  Location     Type
  4676 ;;		None
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;		None
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  1    wreg      unsigned char 
  4681 ;; Registers used:
  4682 ;;		wreg, status,2, status,0, pclath, cstack
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4688 ;;      Params:         0       0       0       0       0
  4689 ;;      Locals:         0       0       0       0       0
  4690 ;;      Temps:          0       0       0       0       0
  4691 ;;      Totals:         0       0       0       0       0
  4692 ;;Total ram usage:        0 bytes
  4693 ;; Hardware stack levels used: 1
  4694 ;; Hardware stack levels required when called: 2
  4695 ;; This function calls:
  4696 ;;		_mcp2515_readRegister
  4697 ;; This function is called by:
  4698 ;;		_mcp2515_setCANCTRL_Mode
  4699 ;;		_sleep
  4700 ;;		_wake
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704     0D6C                     _getMode:	
  4705                           ;psect for function _getMode
  4706                           
  4707     0D6C                     l2783:	
  4708                           ;incstack = 0
  4709                           ; Regs used in _getMode: [wreg+status,2+status,0+pclath+cstack]
  4710                           
  4711                           
  4712                           ;mcp2515_can.c: 339:     return (mcp2515_readRegister(0x0E) & 0xE0);
  4713     0D6C  300E               	movlw	14
  4714     0D6D  120A  158A  266A  120A  158A  	fcall	_mcp2515_readRegister
  4715     0D72  39E0               	andlw	224
  4716     0D73                     l151:
  4717     0D73  0008               	return
  4718     0D74                     __end_of_getMode:
  4719                           
  4720                           	psect	text27
  4721     0E6A                     __ptext27:	
  4722 ;; *************** function _mcp2515_readRegister *****************
  4723 ;; Defined at:
  4724 ;;		line 172 in file "mcp2515_can.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;  address         1    wreg     const unsigned char 
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;  address         1    1[COMMON] const unsigned char 
  4729 ;;  ret             1    2[COMMON] unsigned char 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      unsigned char 
  4732 ;; Registers used:
  4733 ;;		wreg, status,2, status,0, pclath, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4739 ;;      Params:         0       0       0       0       0
  4740 ;;      Locals:         2       0       0       0       0
  4741 ;;      Temps:          0       0       0       0       0
  4742 ;;      Totals:         2       0       0       0       0
  4743 ;;Total ram usage:        2 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; Hardware stack levels required when called: 1
  4746 ;; This function calls:
  4747 ;;		_ReadSPI
  4748 ;;		_WriteSPI
  4749 ;; This function is called by:
  4750 ;;		_getMode
  4751 ;;		_mcp2515_setCANCTRL_Mode
  4752 ;;		_mcp2515_requestNewMode
  4753 ;;		_sendMsg
  4754 ;;		_enableTxInterrupt
  4755 ;;		_checkError
  4756 ;;		_mcpDigitalRead
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760     0E6A                     _mcp2515_readRegister:	
  4761                           ;psect for function _mcp2515_readRegister
  4762                           
  4763                           
  4764                           ;incstack = 0
  4765                           ; Regs used in _mcp2515_readRegister: [wreg+status,2+status,0+pclath+cstack]
  4766                           ;mcp2515_readRegister@address stored from wreg
  4767     0E6A  00F1               	movwf	mcp2515_readRegister@address
  4768     0E6B                     l2739:
  4769                           
  4770                           ;mcp2515_can.c: 173:     unsigned char ret;;mcp2515_can.c: 178:     RD0 = 0;;
  4771     0E6B  1283               	bcf	3,5	;RP0=0, select bank0
  4772     0E6C  1303               	bcf	3,6	;RP1=0, select bank0
  4773     0E6D  1008               	bcf	8,0	;volatile
  4774     0E6E                     l2741:
  4775                           
  4776                           ;mcp2515_can.c: 179:     WriteSPI(0x03);
  4777     0E6E  3003               	movlw	3
  4778     0E6F  120A  158A  2594  120A  158A  	fcall	_WriteSPI
  4779                           
  4780                           ;mcp2515_can.c: 180:     WriteSPI(address);
  4781     0E74  0871               	movf	mcp2515_readRegister@address,w
  4782     0E75  120A  158A  2594  120A  158A  	fcall	_WriteSPI
  4783     0E7A                     l2743:
  4784                           
  4785                           ;mcp2515_can.c: 181:     ret = ReadSPI();
  4786     0E7A  120A  158A  2587  120A  158A  	fcall	_ReadSPI
  4787     0E7F  00F2               	movwf	mcp2515_readRegister@ret
  4788     0E80                     l2745:
  4789                           
  4790                           ;mcp2515_can.c: 182:     RD0 = 1;;
  4791     0E80  1283               	bcf	3,5	;RP0=0, select bank0
  4792     0E81  1303               	bcf	3,6	;RP1=0, select bank0
  4793     0E82  1408               	bsf	8,0	;volatile
  4794     0E83                     l2747:
  4795                           
  4796                           ;mcp2515_can.c: 187:     return ret;
  4797     0E83  0872               	movf	mcp2515_readRegister@ret,w
  4798     0E84                     l105:
  4799     0E84  0008               	return
  4800     0E85                     __end_of_mcp2515_readRegister:
  4801                           
  4802                           	psect	text28
  4803     0D87                     __ptext28:	
  4804 ;; *************** function _ReadSPI *****************
  4805 ;; Defined at:
  4806 ;;		line 176 in file "spi16.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;		None
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;		None
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  1    wreg      unsigned char 
  4813 ;; Registers used:
  4814 ;;		wreg, status,2
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4820 ;;      Params:         0       0       0       0       0
  4821 ;;      Locals:         0       0       0       0       0
  4822 ;;      Temps:          0       0       0       0       0
  4823 ;;      Totals:         0       0       0       0       0
  4824 ;;Total ram usage:        0 bytes
  4825 ;; Hardware stack levels used: 1
  4826 ;; This function calls:
  4827 ;;		Nothing
  4828 ;; This function is called by:
  4829 ;;		_mcp2515_readRegister
  4830 ;;		_mcp2515_readStatus
  4831 ;;		_mcp2515_read_canMsg
  4832 ;;		_mcp2515_readRegisterS
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836     0D87                     _ReadSPI:	
  4837                           ;psect for function _ReadSPI
  4838                           
  4839     0D87                     l2733:	
  4840                           ;incstack = 0
  4841                           ; Regs used in _ReadSPI: [wreg+status,2]
  4842                           
  4843                           
  4844                           ;spi16.c: 178:     SSPBUF = 0x00;
  4845     0D87  1283               	bcf	3,5	;RP0=0, select bank0
  4846     0D88  1303               	bcf	3,6	;RP1=0, select bank0
  4847     0D89  0193               	clrf	19	;volatile
  4848     0D8A                     l546:	
  4849                           ;spi16.c: 179:     while ( !BF );
  4850                           
  4851     0D8A  1683               	bsf	3,5	;RP0=1, select bank1
  4852     0D8B  1303               	bcf	3,6	;RP1=0, select bank1
  4853     0D8C  1C14               	btfss	20,0	;volatile
  4854     0D8D  2D8F               	goto	u1081
  4855     0D8E  2D90               	goto	u1080
  4856     0D8F                     u1081:
  4857     0D8F  2D8A               	goto	l546
  4858     0D90                     u1080:
  4859     0D90                     l2735:
  4860                           
  4861                           ;spi16.c: 180:     return ( SSPBUF );
  4862     0D90  1283               	bcf	3,5	;RP0=0, select bank0
  4863     0D91  1303               	bcf	3,6	;RP1=0, select bank0
  4864     0D92  0813               	movf	19,w	;volatile
  4865     0D93                     l549:
  4866     0D93  0008               	return
  4867     0D94                     __end_of_ReadSPI:
  4868                           
  4869                           	psect	text29
  4870     0DF1                     __ptext29:	
  4871 ;; *************** function _mcp2515_reset *****************
  4872 ;; Defined at:
  4873 ;;		line 155 in file "mcp2515_can.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;		None
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;		None
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  1    wreg      void 
  4880 ;; Registers used:
  4881 ;;		wreg, status,2, status,0, pclath, cstack
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4887 ;;      Params:         0       0       0       0       0
  4888 ;;      Locals:         0       0       0       0       0
  4889 ;;      Temps:          2       0       0       0       0
  4890 ;;      Totals:         2       0       0       0       0
  4891 ;;Total ram usage:        2 bytes
  4892 ;; Hardware stack levels used: 1
  4893 ;; Hardware stack levels required when called: 1
  4894 ;; This function calls:
  4895 ;;		_WriteSPI
  4896 ;; This function is called by:
  4897 ;;		_mcp2515_init
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901     0DF1                     _mcp2515_reset:	
  4902                           ;psect for function _mcp2515_reset
  4903                           
  4904     0DF1                     l2981:	
  4905                           ;incstack = 0
  4906                           ; Regs used in _mcp2515_reset: [wreg+status,2+status,0+pclath+cstack]
  4907                           
  4908                           
  4909                           ;mcp2515_can.c: 159:     RD0 = 0;;
  4910     0DF1  1283               	bcf	3,5	;RP0=0, select bank0
  4911     0DF2  1303               	bcf	3,6	;RP1=0, select bank0
  4912     0DF3  1008               	bcf	8,0	;volatile
  4913     0DF4                     l2983:
  4914                           
  4915                           ;mcp2515_can.c: 160:     WriteSPI(0xC0);
  4916     0DF4  30C0               	movlw	192
  4917     0DF5  120A  158A  2594  120A  158A  	fcall	_WriteSPI
  4918     0DFA                     l2985:
  4919                           
  4920                           ;mcp2515_can.c: 161:     RD0 = 1;;
  4921     0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  4922     0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  4923     0DFC  1408               	bsf	8,0	;volatile
  4924     0DFD                     l2987:
  4925                           
  4926                           ;mcp2515_can.c: 165:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4927     0DFD  3041               	movlw	65
  4928     0DFE  00F2               	movwf	??_mcp2515_reset+1
  4929     0DFF  30EE               	movlw	238
  4930     0E00  00F1               	movwf	??_mcp2515_reset
  4931     0E01                     u2227:
  4932     0E01  0BF1               	decfsz	??_mcp2515_reset,f
  4933     0E02  2E01               	goto	u2227
  4934     0E03  0BF2               	decfsz	??_mcp2515_reset+1,f
  4935     0E04  2E01               	goto	u2227
  4936     0E05  0000               	nop
  4937     0E06                     l102:
  4938     0E06  0008               	return
  4939     0E07                     __end_of_mcp2515_reset:
  4940                           
  4941                           	psect	text30
  4942     0FBF                     __ptext30:	
  4943 ;; *************** function _mcp2515_initCANBuffers *****************
  4944 ;; Defined at:
  4945 ;;		line 750 in file "mcp2515_can.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;		None
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;  i               1    6[COMMON] unsigned char 
  4950 ;;  a3              1    5[COMMON] unsigned char 
  4951 ;;  a2              1    4[COMMON] unsigned char 
  4952 ;;  a1              1    3[COMMON] unsigned char 
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  1    wreg      void 
  4955 ;; Registers used:
  4956 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4962 ;;      Params:         0       0       0       0       0
  4963 ;;      Locals:         4       0       0       0       0
  4964 ;;      Temps:          0       0       0       0       0
  4965 ;;      Totals:         4       0       0       0       0
  4966 ;;Total ram usage:        4 bytes
  4967 ;; Hardware stack levels used: 1
  4968 ;; Hardware stack levels required when called: 2
  4969 ;; This function calls:
  4970 ;;		_mcp2515_setRegister
  4971 ;; This function is called by:
  4972 ;;		_mcp2515_init
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976     0FBF                     _mcp2515_initCANBuffers:	
  4977                           ;psect for function _mcp2515_initCANBuffers
  4978                           
  4979     0FBF                     l3199:	
  4980                           ;incstack = 0
  4981                           ; Regs used in _mcp2515_initCANBuffers: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4982                           
  4983                           
  4984                           ;mcp2515_can.c: 751:     unsigned char i, a1, a2, a3;;mcp2515_can.c: 753:     a1 = 0x30;
  4985     0FBF  3030               	movlw	48
  4986     0FC0  00F3               	movwf	mcp2515_initCANBuffers@a1
  4987                           
  4988                           ;mcp2515_can.c: 754:     a2 = 0x40;
  4989     0FC1  3040               	movlw	64
  4990     0FC2  00F4               	movwf	mcp2515_initCANBuffers@a2
  4991                           
  4992                           ;mcp2515_can.c: 755:     a3 = 0x50;
  4993     0FC3  3050               	movlw	80
  4994     0FC4  00F5               	movwf	mcp2515_initCANBuffers@a3
  4995     0FC5                     l3201:
  4996                           
  4997                           ;mcp2515_can.c: 756:     for (i = 0; i < 14; i++) {
  4998     0FC5  01F6               	clrf	mcp2515_initCANBuffers@i
  4999     0FC6                     l3207:
  5000                           
  5001                           ;mcp2515_can.c: 757:         mcp2515_setRegister(a1, 0);
  5002     0FC6  01F1               	clrf	mcp2515_setRegister@value
  5003     0FC7  0873               	movf	mcp2515_initCANBuffers@a1,w
  5004     0FC8  120A  158A  2636  120A  158A  	fcall	_mcp2515_setRegister
  5005                           
  5006                           ;mcp2515_can.c: 758:         mcp2515_setRegister(a2, 0);
  5007     0FCD  01F1               	clrf	mcp2515_setRegister@value
  5008     0FCE  0874               	movf	mcp2515_initCANBuffers@a2,w
  5009     0FCF  120A  158A  2636  120A  158A  	fcall	_mcp2515_setRegister
  5010                           
  5011                           ;mcp2515_can.c: 759:         mcp2515_setRegister(a3, 0);
  5012     0FD4  01F1               	clrf	mcp2515_setRegister@value
  5013     0FD5  0875               	movf	mcp2515_initCANBuffers@a3,w
  5014     0FD6  120A  158A  2636  120A  158A  	fcall	_mcp2515_setRegister
  5015     0FDB                     l3209:
  5016                           
  5017                           ;mcp2515_can.c: 760:         a1++;
  5018     0FDB  3001               	movlw	1
  5019     0FDC  00FF               	movwf	btemp+1
  5020     0FDD  087F               	movf	btemp+1,w
  5021     0FDE  07F3               	addwf	mcp2515_initCANBuffers@a1,f
  5022     0FDF                     l3211:
  5023                           
  5024                           ;mcp2515_can.c: 761:         a2++;
  5025     0FDF  3001               	movlw	1
  5026     0FE0  00FF               	movwf	btemp+1
  5027     0FE1  087F               	movf	btemp+1,w
  5028     0FE2  07F4               	addwf	mcp2515_initCANBuffers@a2,f
  5029     0FE3                     l3213:
  5030                           
  5031                           ;mcp2515_can.c: 762:         a3++;
  5032     0FE3  3001               	movlw	1
  5033     0FE4  00FF               	movwf	btemp+1
  5034     0FE5  087F               	movf	btemp+1,w
  5035     0FE6  07F5               	addwf	mcp2515_initCANBuffers@a3,f
  5036     0FE7                     l3215:
  5037                           
  5038                           ;mcp2515_can.c: 763:     }
  5039     0FE7  3001               	movlw	1
  5040     0FE8  00FF               	movwf	btemp+1
  5041     0FE9  087F               	movf	btemp+1,w
  5042     0FEA  07F6               	addwf	mcp2515_initCANBuffers@i,f
  5043     0FEB                     l3217:
  5044     0FEB  300E               	movlw	14
  5045     0FEC  0276               	subwf	mcp2515_initCANBuffers@i,w
  5046     0FED  1C03               	skipc
  5047     0FEE  2FF0               	goto	u1231
  5048     0FEF  2FF1               	goto	u1230
  5049     0FF0                     u1231:
  5050     0FF0  2FC6               	goto	l3207
  5051     0FF1                     u1230:
  5052     0FF1                     l3219:
  5053                           
  5054                           ;mcp2515_can.c: 764:     mcp2515_setRegister(0x60, 0);
  5055     0FF1  01F1               	clrf	mcp2515_setRegister@value
  5056     0FF2  3060               	movlw	96
  5057     0FF3  120A  158A  2636  120A  158A  	fcall	_mcp2515_setRegister
  5058                           
  5059                           ;mcp2515_can.c: 765:     mcp2515_setRegister(0x70, 0);
  5060     0FF8  01F1               	clrf	mcp2515_setRegister@value
  5061     0FF9  3070               	movlw	112
  5062     0FFA  120A  158A  2636  120A  158A  	fcall	_mcp2515_setRegister
  5063     0FFF                     l242:
  5064     0FFF  0008               	return
  5065     1000                     __end_of_mcp2515_initCANBuffers:
  5066                           
  5067                           	psect	text31
  5068     05B9                     __ptext31:	
  5069 ;; *************** function _mcp2515_configRate *****************
  5070 ;; Defined at:
  5071 ;;		line 410 in file "mcp2515_can.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  canSpeed        1    wreg     const unsigned char 
  5074 ;;  clock           1    3[COMMON] const unsigned char 
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;  canSpeed        1    7[COMMON] const unsigned char 
  5077 ;;  cfg3            1   10[COMMON] unsigned char 
  5078 ;;  cfg2            1    9[COMMON] unsigned char 
  5079 ;;  cfg1            1    8[COMMON] unsigned char 
  5080 ;;  set             1    6[COMMON] unsigned char 
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  1    wreg      unsigned char 
  5083 ;; Registers used:
  5084 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5090 ;;      Params:         1       0       0       0       0
  5091 ;;      Locals:         5       0       0       0       0
  5092 ;;      Temps:          2       0       0       0       0
  5093 ;;      Totals:         8       0       0       0       0
  5094 ;;Total ram usage:        8 bytes
  5095 ;; Hardware stack levels used: 1
  5096 ;; Hardware stack levels required when called: 2
  5097 ;; This function calls:
  5098 ;;		_mcp2515_setRegister
  5099 ;; This function is called by:
  5100 ;;		_mcp2515_init
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104     05B9                     _mcp2515_configRate:	
  5105                           ;psect for function _mcp2515_configRate
  5106                           
  5107                           
  5108                           ;incstack = 0
  5109                           ; Regs used in _mcp2515_configRate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5110                           ;mcp2515_configRate@canSpeed stored from wreg
  5111     05B9  00F7               	movwf	mcp2515_configRate@canSpeed
  5112     05BA                     l2997:
  5113                           
  5114                           ;mcp2515_can.c: 411:     unsigned char set, cfg1, cfg2, cfg3;;mcp2515_can.c: 412:     se
      +                          t = 1;
  5115     05BA  01F6               	clrf	mcp2515_configRate@set
  5116     05BB  0AF6               	incf	mcp2515_configRate@set,f
  5117                           
  5118                           ;mcp2515_can.c: 413:     switch (clock) {
  5119     05BC  2FB2               	goto	l3167
  5120     05BD                     l2999:
  5121                           
  5122                           ;mcp2515_can.c: 417:                     cfg1 = (0x3F);
  5123     05BD  303F               	movlw	63
  5124     05BE  00F8               	movwf	mcp2515_configRate@cfg1
  5125                           
  5126                           ;mcp2515_can.c: 418:                     cfg2 = (0xFF);
  5127     05BF  30FF               	movlw	255
  5128     05C0  00F9               	movwf	mcp2515_configRate@cfg2
  5129                           
  5130                           ;mcp2515_can.c: 419:                     cfg3 = (0x87);
  5131     05C1  3087               	movlw	135
  5132     05C2  00FA               	movwf	mcp2515_configRate@cfg3
  5133                           
  5134                           ;mcp2515_can.c: 420:                     break;
  5135     05C3  2FC5               	goto	l3169
  5136     05C4                     l3001:
  5137                           
  5138                           ;mcp2515_can.c: 423:                     cfg1 = (0x1F);
  5139     05C4  301F               	movlw	31
  5140     05C5  00F8               	movwf	mcp2515_configRate@cfg1
  5141                           
  5142                           ;mcp2515_can.c: 424:                     cfg2 = (0xFF);
  5143     05C6  30FF               	movlw	255
  5144     05C7  00F9               	movwf	mcp2515_configRate@cfg2
  5145                           
  5146                           ;mcp2515_can.c: 425:                     cfg3 = (0x87);
  5147     05C8  3087               	movlw	135
  5148     05C9  00FA               	movwf	mcp2515_configRate@cfg3
  5149                           
  5150                           ;mcp2515_can.c: 426:                     break;
  5151     05CA  2FC5               	goto	l3169
  5152     05CB                     l3003:
  5153                           
  5154                           ;mcp2515_can.c: 429:                     cfg1 = (0x0F);
  5155     05CB  300F               	movlw	15
  5156     05CC  00F8               	movwf	mcp2515_configRate@cfg1
  5157                           
  5158                           ;mcp2515_can.c: 430:                     cfg2 = (0xFF);
  5159     05CD  30FF               	movlw	255
  5160     05CE  00F9               	movwf	mcp2515_configRate@cfg2
  5161                           
  5162                           ;mcp2515_can.c: 431:                     cfg3 = (0x87);
  5163     05CF  3087               	movlw	135
  5164     05D0  00FA               	movwf	mcp2515_configRate@cfg3
  5165                           
  5166                           ;mcp2515_can.c: 432:                     break;
  5167     05D1  2FC5               	goto	l3169
  5168     05D2                     l3005:
  5169                           
  5170                           ;mcp2515_can.c: 435:                     cfg1 = (0X0F);
  5171     05D2  300F               	movlw	15
  5172     05D3  00F8               	movwf	mcp2515_configRate@cfg1
  5173                           
  5174                           ;mcp2515_can.c: 436:                     cfg2 = (0XBA);
  5175     05D4  30BA               	movlw	186
  5176     05D5  00F9               	movwf	mcp2515_configRate@cfg2
  5177                           
  5178                           ;mcp2515_can.c: 437:                     cfg3 = (0X07);
  5179     05D6  3007               	movlw	7
  5180     05D7  00FA               	movwf	mcp2515_configRate@cfg3
  5181                           
  5182                           ;mcp2515_can.c: 438:                     break;
  5183     05D8  2FC5               	goto	l3169
  5184     05D9                     l3007:
  5185                           
  5186                           ;mcp2515_can.c: 441:                     cfg1 = (0x0F);
  5187     05D9  300F               	movlw	15
  5188     05DA  00F8               	movwf	mcp2515_configRate@cfg1
  5189                           
  5190                           ;mcp2515_can.c: 442:                     cfg2 = (0xF1);
  5191     05DB  30F1               	movlw	241
  5192     05DC  00F9               	movwf	mcp2515_configRate@cfg2
  5193                           
  5194                           ;mcp2515_can.c: 443:                     cfg3 = (0x85);
  5195     05DD  3085               	movlw	133
  5196     05DE  00FA               	movwf	mcp2515_configRate@cfg3
  5197                           
  5198                           ;mcp2515_can.c: 444:                     break;
  5199     05DF  2FC5               	goto	l3169
  5200     05E0                     l3009:
  5201                           
  5202                           ;mcp2515_can.c: 447:                     cfg1 = (0x09);
  5203     05E0  3009               	movlw	9
  5204     05E1  00F8               	movwf	mcp2515_configRate@cfg1
  5205                           
  5206                           ;mcp2515_can.c: 448:                     cfg2 = (0xBE);
  5207     05E2  30BE               	movlw	190
  5208     05E3  00F9               	movwf	mcp2515_configRate@cfg2
  5209                           
  5210                           ;mcp2515_can.c: 449:                     cfg3 = (0x07);
  5211     05E4  3007               	movlw	7
  5212     05E5  00FA               	movwf	mcp2515_configRate@cfg3
  5213                           
  5214                           ;mcp2515_can.c: 450:                     break;
  5215     05E6  2FC5               	goto	l3169
  5216     05E7                     l3011:
  5217                           
  5218                           ;mcp2515_can.c: 453:                     cfg1 = (0x07);
  5219     05E7  3007               	movlw	7
  5220     05E8  00F8               	movwf	mcp2515_configRate@cfg1
  5221                           
  5222                           ;mcp2515_can.c: 454:                     cfg2 = (0xFF);
  5223     05E9  30FF               	movlw	255
  5224     05EA  00F9               	movwf	mcp2515_configRate@cfg2
  5225                           
  5226                           ;mcp2515_can.c: 455:                     cfg3 = (0x87);
  5227     05EB  3087               	movlw	135
  5228     05EC  00FA               	movwf	mcp2515_configRate@cfg3
  5229                           
  5230                           ;mcp2515_can.c: 456:                     break;
  5231     05ED  2FC5               	goto	l3169
  5232     05EE                     l3013:
  5233                           
  5234                           ;mcp2515_can.c: 459:                     cfg1 = (0x07);
  5235     05EE  3007               	movlw	7
  5236     05EF  00F8               	movwf	mcp2515_configRate@cfg1
  5237                           
  5238                           ;mcp2515_can.c: 460:                     cfg2 = (0xFA);
  5239     05F0  30FA               	movlw	250
  5240     05F1  00F9               	movwf	mcp2515_configRate@cfg2
  5241                           
  5242                           ;mcp2515_can.c: 461:                     cfg3 = (0x87);
  5243     05F2  3087               	movlw	135
  5244     05F3  00FA               	movwf	mcp2515_configRate@cfg3
  5245                           
  5246                           ;mcp2515_can.c: 462:                     break;
  5247     05F4  2FC5               	goto	l3169
  5248     05F5                     l3015:
  5249                           
  5250                           ;mcp2515_can.c: 465:                     cfg1 = (0x03);
  5251     05F5  3003               	movlw	3
  5252     05F6  00F8               	movwf	mcp2515_configRate@cfg1
  5253                           
  5254                           ;mcp2515_can.c: 466:                     cfg2 = (0xFF);
  5255     05F7  30FF               	movlw	255
  5256     05F8  00F9               	movwf	mcp2515_configRate@cfg2
  5257                           
  5258                           ;mcp2515_can.c: 467:                     cfg3 = (0x87);
  5259     05F9  3087               	movlw	135
  5260     05FA  00FA               	movwf	mcp2515_configRate@cfg3
  5261                           
  5262                           ;mcp2515_can.c: 468:                     break;
  5263     05FB  2FC5               	goto	l3169
  5264     05FC                     l3017:
  5265                           
  5266                           ;mcp2515_can.c: 471:                     cfg1 = (0x03);
  5267     05FC  3003               	movlw	3
  5268     05FD  00F8               	movwf	mcp2515_configRate@cfg1
  5269                           
  5270                           ;mcp2515_can.c: 472:                     cfg2 = (0xBE);
  5271     05FE  30BE               	movlw	190
  5272     05FF  00F9               	movwf	mcp2515_configRate@cfg2
  5273                           
  5274                           ;mcp2515_can.c: 473:                     cfg3 = (0x07);
  5275     0600  3007               	movlw	7
  5276     0601  00FA               	movwf	mcp2515_configRate@cfg3
  5277                           
  5278                           ;mcp2515_can.c: 474:                     break;
  5279     0602  2FC5               	goto	l3169
  5280     0603                     l3019:
  5281                           
  5282                           ;mcp2515_can.c: 477:                     cfg1 = (0x03);
  5283     0603  3003               	movlw	3
  5284     0604  00F8               	movwf	mcp2515_configRate@cfg1
  5285                           
  5286                           ;mcp2515_can.c: 478:                     cfg2 = (0xAD);
  5287     0605  30AD               	movlw	173
  5288     0606  00F9               	movwf	mcp2515_configRate@cfg2
  5289                           
  5290                           ;mcp2515_can.c: 479:                     cfg3 = (0x07);
  5291     0607  3007               	movlw	7
  5292     0608  00FA               	movwf	mcp2515_configRate@cfg3
  5293                           
  5294                           ;mcp2515_can.c: 480:                     break;
  5295     0609  2FC5               	goto	l3169
  5296     060A                     l3021:
  5297                           
  5298                           ;mcp2515_can.c: 483:                     cfg1 = (0x03);
  5299     060A  3003               	movlw	3
  5300     060B  00F8               	movwf	mcp2515_configRate@cfg1
  5301                           
  5302                           ;mcp2515_can.c: 484:                     cfg2 = (0xFA);
  5303     060C  30FA               	movlw	250
  5304     060D  00F9               	movwf	mcp2515_configRate@cfg2
  5305                           
  5306                           ;mcp2515_can.c: 485:                     cfg3 = (0x87);
  5307     060E  3087               	movlw	135
  5308     060F  00FA               	movwf	mcp2515_configRate@cfg3
  5309                           
  5310                           ;mcp2515_can.c: 486:                     break;
  5311     0610  2FC5               	goto	l3169
  5312     0611                     l3023:
  5313                           
  5314                           ;mcp2515_can.c: 489:                     cfg1 = (0x03);
  5315     0611  3003               	movlw	3
  5316     0612  00F8               	movwf	mcp2515_configRate@cfg1
  5317                           
  5318                           ;mcp2515_can.c: 490:                     cfg2 = (0xF0);
  5319     0613  30F0               	movlw	240
  5320     0614  00F9               	movwf	mcp2515_configRate@cfg2
  5321                           
  5322                           ;mcp2515_can.c: 491:                     cfg3 = (0x86);
  5323     0615  3086               	movlw	134
  5324     0616  00FA               	movwf	mcp2515_configRate@cfg3
  5325                           
  5326                           ;mcp2515_can.c: 492:                     break;
  5327     0617  2FC5               	goto	l3169
  5328     0618                     l188:	
  5329                           ;mcp2515_can.c: 494:                 case (CAN_200KBPS):
  5330                           
  5331                           
  5332                           ;mcp2515_can.c: 495:                     cfg1 = (0x01);
  5333     0618  01F8               	clrf	mcp2515_configRate@cfg1
  5334     0619  0AF8               	incf	mcp2515_configRate@cfg1,f
  5335     061A                     l3025:
  5336                           
  5337                           ;mcp2515_can.c: 496:                     cfg2 = (0xFA);
  5338     061A  30FA               	movlw	250
  5339     061B  00F9               	movwf	mcp2515_configRate@cfg2
  5340                           
  5341                           ;mcp2515_can.c: 497:                     cfg3 = (0x87);
  5342     061C  3087               	movlw	135
  5343     061D  00FA               	movwf	mcp2515_configRate@cfg3
  5344                           
  5345                           ;mcp2515_can.c: 498:                     break;
  5346     061E  2FC5               	goto	l3169
  5347     061F                     l3027:
  5348                           
  5349                           ;mcp2515_can.c: 501:                     cfg1 = (0x41);
  5350     061F  3041               	movlw	65
  5351     0620  00F8               	movwf	mcp2515_configRate@cfg1
  5352                           
  5353                           ;mcp2515_can.c: 502:                     cfg2 = (0xF1);
  5354     0621  30F1               	movlw	241
  5355     0622  00F9               	movwf	mcp2515_configRate@cfg2
  5356                           
  5357                           ;mcp2515_can.c: 503:                     cfg3 = (0x85);
  5358     0623  3085               	movlw	133
  5359     0624  00FA               	movwf	mcp2515_configRate@cfg3
  5360                           
  5361                           ;mcp2515_can.c: 504:                     break;
  5362     0625  2FC5               	goto	l3169
  5363     0626                     l3029:
  5364                           
  5365                           ;mcp2515_can.c: 507:                     cfg1 = (0x00);
  5366     0626  01F8               	clrf	mcp2515_configRate@cfg1
  5367     0627                     l3031:
  5368                           
  5369                           ;mcp2515_can.c: 508:                     cfg2 = (0xF0);
  5370     0627  30F0               	movlw	240
  5371     0628  00F9               	movwf	mcp2515_configRate@cfg2
  5372     0629                     l3033:
  5373                           
  5374                           ;mcp2515_can.c: 509:                     cfg3 = (0x86);
  5375     0629  3086               	movlw	134
  5376     062A  00FA               	movwf	mcp2515_configRate@cfg3
  5377                           
  5378                           ;mcp2515_can.c: 510:                     break;
  5379     062B  2FC5               	goto	l3169
  5380     062C                     l3035:
  5381                           
  5382                           ;mcp2515_can.c: 513:                     cfg1 = (0x00);
  5383     062C  01F8               	clrf	mcp2515_configRate@cfg1
  5384     062D                     l3037:
  5385                           
  5386                           ;mcp2515_can.c: 514:                     cfg2 = (0xA0);
  5387     062D  30A0               	movlw	160
  5388     062E  00F9               	movwf	mcp2515_configRate@cfg2
  5389     062F                     l3039:
  5390                           
  5391                           ;mcp2515_can.c: 515:                     cfg3 = (0x04);
  5392     062F  3004               	movlw	4
  5393     0630  00FA               	movwf	mcp2515_configRate@cfg3
  5394                           
  5395                           ;mcp2515_can.c: 516:                     break;
  5396     0631  2FC5               	goto	l3169
  5397     0632                     l3041:
  5398                           
  5399                           ;mcp2515_can.c: 519:                     cfg1 = (0x40);
  5400     0632  3040               	movlw	64
  5401     0633  00F8               	movwf	mcp2515_configRate@cfg1
  5402                           
  5403                           ;mcp2515_can.c: 520:                     cfg2 = (0x92);
  5404     0634  3092               	movlw	146
  5405     0635  00F9               	movwf	mcp2515_configRate@cfg2
  5406                           
  5407                           ;mcp2515_can.c: 521:                     cfg3 = (0x02);
  5408     0636  3002               	movlw	2
  5409     0637  00FA               	movwf	mcp2515_configRate@cfg3
  5410                           
  5411                           ;mcp2515_can.c: 522:                     break;
  5412     0638  2FC5               	goto	l3169
  5413     0639                     l3043:
  5414                           
  5415                           ;mcp2515_can.c: 525:                     cfg1 = (0x00);
  5416     0639  01F8               	clrf	mcp2515_configRate@cfg1
  5417     063A                     l3045:
  5418                           
  5419                           ;mcp2515_can.c: 526:                     cfg2 = (0xD0);
  5420     063A  30D0               	movlw	208
  5421     063B  00F9               	movwf	mcp2515_configRate@cfg2
  5422     063C                     l3047:
  5423                           
  5424                           ;mcp2515_can.c: 527:                     cfg3 = (0x82);
  5425     063C  3082               	movlw	130
  5426     063D  00FA               	movwf	mcp2515_configRate@cfg3
  5427                           
  5428                           ;mcp2515_can.c: 528:                     break;
  5429     063E  2FC5               	goto	l3169
  5430     063F                     l3049:
  5431                           
  5432                           ;mcp2515_can.c: 531:                     set = 0;
  5433     063F  01F6               	clrf	mcp2515_configRate@set
  5434                           
  5435                           ;mcp2515_can.c: 532:                     break;
  5436     0640  2FC5               	goto	l3169
  5437     0641                     l3053:
  5438     0641  0877               	movf	mcp2515_configRate@canSpeed,w
  5439     0642  00F4               	movwf	??_mcp2515_configRate
  5440     0643  01F5               	clrf	??_mcp2515_configRate+1
  5441                           
  5442                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5443                           ; Switch size 1, requested type "simple"
  5444                           ; Number of cases is 1, Range of values is 0 to 0
  5445                           ; switch strategies available:
  5446                           ; Name         Instructions Cycles
  5447                           ; simple_byte            4     3 (average)
  5448                           ; direct_byte           11     8 (fixed)
  5449                           ; jumptable            260     6 (fixed)
  5450                           ;	Chosen strategy is simple_byte
  5451     0644  0875               	movf	??_mcp2515_configRate+1,w
  5452     0645  3A00               	xorlw	0	; case 0
  5453     0646  1903               	skipnz
  5454     0647  2E49               	goto	l4257
  5455     0648  2E3F               	goto	l3049
  5456     0649                     l4257:
  5457                           
  5458                           ; Switch size 1, requested type "simple"
  5459                           ; Number of cases is 19, Range of values is 1 to 19
  5460                           ; switch strategies available:
  5461                           ; Name         Instructions Cycles
  5462                           ; simple_byte           58    30 (average)
  5463                           ; direct_byte           68    11 (fixed)
  5464                           ; jumptable            263     9 (fixed)
  5465                           ;	Chosen strategy is simple_byte
  5466     0649  0874               	movf	??_mcp2515_configRate,w
  5467     064A  3A01               	xorlw	1	; case 1
  5468     064B  1903               	skipnz
  5469     064C  2DBD               	goto	l2999
  5470     064D  3A03               	xorlw	3	; case 2
  5471     064E  1903               	skipnz
  5472     064F  2DC4               	goto	l3001
  5473     0650  3A01               	xorlw	1	; case 3
  5474     0651  1903               	skipnz
  5475     0652  2DCB               	goto	l3003
  5476     0653  3A07               	xorlw	7	; case 4
  5477     0654  1903               	skipnz
  5478     0655  2DD2               	goto	l3005
  5479     0656  3A01               	xorlw	1	; case 5
  5480     0657  1903               	skipnz
  5481     0658  2DD9               	goto	l3007
  5482     0659  3A03               	xorlw	3	; case 6
  5483     065A  1903               	skipnz
  5484     065B  2DE0               	goto	l3009
  5485     065C  3A01               	xorlw	1	; case 7
  5486     065D  1903               	skipnz
  5487     065E  2DE7               	goto	l3011
  5488     065F  3A0F               	xorlw	15	; case 8
  5489     0660  1903               	skipnz
  5490     0661  2DEE               	goto	l3013
  5491     0662  3A01               	xorlw	1	; case 9
  5492     0663  1903               	skipnz
  5493     0664  2DF5               	goto	l3015
  5494     0665  3A03               	xorlw	3	; case 10
  5495     0666  1903               	skipnz
  5496     0667  2DFC               	goto	l3017
  5497     0668  3A01               	xorlw	1	; case 11
  5498     0669  1903               	skipnz
  5499     066A  2E03               	goto	l3019
  5500     066B  3A07               	xorlw	7	; case 12
  5501     066C  1903               	skipnz
  5502     066D  2E0A               	goto	l3021
  5503     066E  3A01               	xorlw	1	; case 13
  5504     066F  1903               	skipnz
  5505     0670  2E11               	goto	l3023
  5506     0671  3A03               	xorlw	3	; case 14
  5507     0672  1903               	skipnz
  5508     0673  2E18               	goto	l188
  5509     0674  3A01               	xorlw	1	; case 15
  5510     0675  1903               	skipnz
  5511     0676  2E1F               	goto	l3027
  5512     0677  3A1F               	xorlw	31	; case 16
  5513     0678  1903               	skipnz
  5514     0679  2E26               	goto	l3029
  5515     067A  3A01               	xorlw	1	; case 17
  5516     067B  1903               	skipnz
  5517     067C  2E2C               	goto	l3035
  5518     067D  3A03               	xorlw	3	; case 18
  5519     067E  1903               	skipnz
  5520     067F  2E32               	goto	l3041
  5521     0680  3A01               	xorlw	1	; case 19
  5522     0681  1903               	skipnz
  5523     0682  2E39               	goto	l3043
  5524     0683  2E3F               	goto	l3049
  5525     0684                     l3055:
  5526                           
  5527                           ;mcp2515_can.c: 539:                     cfg1 = (0x0C);
  5528     0684  300C               	movlw	12
  5529     0685  00F8               	movwf	mcp2515_configRate@cfg1
  5530                           
  5531                           ;mcp2515_can.c: 540:                     cfg2 = (0xBF);
  5532     0686  30BF               	movlw	191
  5533     0687  00F9               	movwf	mcp2515_configRate@cfg2
  5534                           
  5535                           ;mcp2515_can.c: 541:                     cfg3 = (0x05);
  5536     0688  3005               	movlw	5
  5537     0689  00FA               	movwf	mcp2515_configRate@cfg3
  5538                           
  5539                           ;mcp2515_can.c: 542:                     break;
  5540     068A  2FC5               	goto	l3169
  5541     068B                     l3057:
  5542                           
  5543                           ;mcp2515_can.c: 545:                     cfg1 = (0X0B);
  5544     068B  300B               	movlw	11
  5545     068C  00F8               	movwf	mcp2515_configRate@cfg1
  5546                           
  5547                           ;mcp2515_can.c: 546:                     cfg2 = (0XB6);
  5548     068D  30B6               	movlw	182
  5549     068E  00F9               	movwf	mcp2515_configRate@cfg2
  5550                           
  5551                           ;mcp2515_can.c: 547:                     cfg3 = (0X04);
  5552     068F  3004               	movlw	4
  5553     0690  00FA               	movwf	mcp2515_configRate@cfg3
  5554                           
  5555                           ;mcp2515_can.c: 548:                     break;
  5556     0691  2FC5               	goto	l3169
  5557     0692                     l3059:
  5558                           
  5559                           ;mcp2515_can.c: 551:                     cfg1 = (0x0B);
  5560     0692  300B               	movlw	11
  5561     0693  00F8               	movwf	mcp2515_configRate@cfg1
  5562                           
  5563                           ;mcp2515_can.c: 552:                     cfg2 = (0xAC);
  5564     0694  30AC               	movlw	172
  5565     0695  00F9               	movwf	mcp2515_configRate@cfg2
  5566                           
  5567                           ;mcp2515_can.c: 553:                     cfg3 = (0x03);
  5568     0696  3003               	movlw	3
  5569     0697  00FA               	movwf	mcp2515_configRate@cfg3
  5570                           
  5571                           ;mcp2515_can.c: 554:                     break;
  5572     0698  2FC5               	goto	l3169
  5573     0699                     l3061:
  5574                           
  5575                           ;mcp2515_can.c: 557:                     cfg1 = (0x0C);
  5576     0699  300C               	movlw	12
  5577     069A  00F8               	movwf	mcp2515_configRate@cfg1
  5578                           
  5579                           ;mcp2515_can.c: 558:                     cfg2 = (0xA4);
  5580     069B  30A4               	movlw	164
  5581     069C  00F9               	movwf	mcp2515_configRate@cfg2
  5582                           
  5583                           ;mcp2515_can.c: 559:                     cfg3 = (0x02);
  5584     069D  3002               	movlw	2
  5585     069E  00FA               	movwf	mcp2515_configRate@cfg3
  5586                           
  5587                           ;mcp2515_can.c: 560:                     break;
  5588     069F  2FC5               	goto	l3169
  5589     06A0                     l3063:
  5590                           
  5591                           ;mcp2515_can.c: 563:                     cfg1 = (0x09);
  5592     06A0  3009               	movlw	9
  5593     06A1  00F8               	movwf	mcp2515_configRate@cfg1
  5594                           
  5595                           ;mcp2515_can.c: 564:                     cfg2 = (0xA4);
  5596     06A2  30A4               	movlw	164
  5597     06A3  00F9               	movwf	mcp2515_configRate@cfg2
  5598                           
  5599                           ;mcp2515_can.c: 565:                     cfg3 = (0x03);
  5600     06A4  3003               	movlw	3
  5601     06A5  00FA               	movwf	mcp2515_configRate@cfg3
  5602                           
  5603                           ;mcp2515_can.c: 566:                     break;
  5604     06A6  2FC5               	goto	l3169
  5605     06A7                     l3065:
  5606                           
  5607                           ;mcp2515_can.c: 569:                     cfg1 = (0x05);
  5608     06A7  3005               	movlw	5
  5609     06A8  00F8               	movwf	mcp2515_configRate@cfg1
  5610                           
  5611                           ;mcp2515_can.c: 570:                     cfg2 = (0xB6);
  5612     06A9  30B6               	movlw	182
  5613     06AA  00F9               	movwf	mcp2515_configRate@cfg2
  5614                           
  5615                           ;mcp2515_can.c: 571:                     cfg3 = (0x04);
  5616     06AB  3004               	movlw	4
  5617     06AC  00FA               	movwf	mcp2515_configRate@cfg3
  5618                           
  5619                           ;mcp2515_can.c: 572:                     break;
  5620     06AD  2FC5               	goto	l3169
  5621     06AE                     l3067:
  5622                           
  5623                           ;mcp2515_can.c: 575:                     cfg1 = (0x04);
  5624     06AE  3004               	movlw	4
  5625     06AF  00F8               	movwf	mcp2515_configRate@cfg1
  5626                           
  5627                           ;mcp2515_can.c: 576:                     cfg2 = (0xA4);
  5628     06B0  30A4               	movlw	164
  5629     06B1  00F9               	movwf	mcp2515_configRate@cfg2
  5630                           
  5631                           ;mcp2515_can.c: 577:                     cfg3 = (0x03);
  5632     06B2  3003               	movlw	3
  5633     06B3  00FA               	movwf	mcp2515_configRate@cfg3
  5634                           
  5635                           ;mcp2515_can.c: 578:                     break;
  5636     06B4  2FC5               	goto	l3169
  5637     06B5                     l3069:
  5638                           
  5639                           ;mcp2515_can.c: 581:                     cfg1 = (0x03);
  5640     06B5  3003               	movlw	3
  5641     06B6  00F8               	movwf	mcp2515_configRate@cfg1
  5642                           
  5643                           ;mcp2515_can.c: 582:                     cfg2 = (0xB5);
  5644     06B7  30B5               	movlw	181
  5645     06B8  00F9               	movwf	mcp2515_configRate@cfg2
  5646                           
  5647                           ;mcp2515_can.c: 583:                     cfg3 = (0x03);
  5648     06B9  3003               	movlw	3
  5649     06BA  00FA               	movwf	mcp2515_configRate@cfg3
  5650                           
  5651                           ;mcp2515_can.c: 584:                     break;
  5652     06BB  2FC5               	goto	l3169
  5653     06BC                     l3071:
  5654                           
  5655                           ;mcp2515_can.c: 587:                     cfg1 = (0x02);
  5656     06BC  3002               	movlw	2
  5657     06BD  00F8               	movwf	mcp2515_configRate@cfg1
  5658                           
  5659                           ;mcp2515_can.c: 588:                     cfg2 = (0xBE);
  5660     06BE  30BE               	movlw	190
  5661     06BF  00F9               	movwf	mcp2515_configRate@cfg2
  5662                           
  5663                           ;mcp2515_can.c: 589:                     cfg3 = (0x04);
  5664     06C0  3004               	movlw	4
  5665     06C1  00FA               	movwf	mcp2515_configRate@cfg3
  5666                           
  5667                           ;mcp2515_can.c: 590:                     break;
  5668     06C2  2FC5               	goto	l3169
  5669     06C3                     l3073:
  5670                           
  5671                           ;mcp2515_can.c: 593:                     cfg1 = (0x02);
  5672     06C3  3002               	movlw	2
  5673     06C4  00F8               	movwf	mcp2515_configRate@cfg1
  5674                           
  5675                           ;mcp2515_can.c: 594:                     cfg2 = (0xB6);
  5676     06C5  30B6               	movlw	182
  5677     06C6  00F9               	movwf	mcp2515_configRate@cfg2
  5678                           
  5679                           ;mcp2515_can.c: 595:                     cfg3 = (0x04);
  5680     06C7  3004               	movlw	4
  5681     06C8  00FA               	movwf	mcp2515_configRate@cfg3
  5682                           
  5683                           ;mcp2515_can.c: 596:                     break;
  5684     06C9  2FC5               	goto	l3169
  5685     06CA                     l209:	
  5686                           ;mcp2515_can.c: 598:                 case (CAN_125KBPS) :
  5687                           
  5688                           
  5689                           ;mcp2515_can.c: 599:                     cfg1 = (0x01);
  5690     06CA  01F8               	clrf	mcp2515_configRate@cfg1
  5691     06CB  0AF8               	incf	mcp2515_configRate@cfg1,f
  5692     06CC                     l3075:
  5693                           
  5694                           ;mcp2515_can.c: 600:                     cfg2 = (0xBF);
  5695     06CC  30BF               	movlw	191
  5696     06CD  00F9               	movwf	mcp2515_configRate@cfg2
  5697                           
  5698                           ;mcp2515_can.c: 601:                     cfg3 = (0x06);
  5699     06CE  3006               	movlw	6
  5700     06CF  00FA               	movwf	mcp2515_configRate@cfg3
  5701                           
  5702                           ;mcp2515_can.c: 602:                     break;
  5703     06D0  2FC5               	goto	l3169
  5704     06D1                     l210:	
  5705                           ;mcp2515_can.c: 604:                 case (CAN_200KBPS) :
  5706                           
  5707                           
  5708                           ;mcp2515_can.c: 605:                     cfg1 = (0x01);
  5709     06D1  01F8               	clrf	mcp2515_configRate@cfg1
  5710     06D2  0AF8               	incf	mcp2515_configRate@cfg1,f
  5711     06D3                     l3077:
  5712                           
  5713                           ;mcp2515_can.c: 606:                     cfg2 = (0xA4);
  5714     06D3  30A4               	movlw	164
  5715     06D4  00F9               	movwf	mcp2515_configRate@cfg2
  5716                           
  5717                           ;mcp2515_can.c: 607:                     cfg3 = (0x03);
  5718     06D5  3003               	movlw	3
  5719     06D6  00FA               	movwf	mcp2515_configRate@cfg3
  5720                           
  5721                           ;mcp2515_can.c: 608:                     break;
  5722     06D7  2FC5               	goto	l3169
  5723     06D8                     l3079:
  5724                           
  5725                           ;mcp2515_can.c: 611:                     cfg1 = (0x00);
  5726     06D8  01F8               	clrf	mcp2515_configRate@cfg1
  5727     06D9                     l3081:
  5728                           
  5729                           ;mcp2515_can.c: 612:                     cfg2 = (0xBF);
  5730     06D9  30BF               	movlw	191
  5731     06DA  00F9               	movwf	mcp2515_configRate@cfg2
  5732     06DB                     l3083:
  5733                           
  5734                           ;mcp2515_can.c: 613:                     cfg3 = (0x06);
  5735     06DB  3006               	movlw	6
  5736     06DC  00FA               	movwf	mcp2515_configRate@cfg3
  5737                           
  5738                           ;mcp2515_can.c: 614:                     break;
  5739     06DD  2FC5               	goto	l3169
  5740     06DE                     l3085:
  5741                           
  5742                           ;mcp2515_can.c: 617:                     cfg1 = (0x00);
  5743     06DE  01F8               	clrf	mcp2515_configRate@cfg1
  5744     06DF                     l3087:
  5745                           
  5746                           ;mcp2515_can.c: 618:                     cfg2 = (0x9B);
  5747     06DF  309B               	movlw	155
  5748     06E0  00F9               	movwf	mcp2515_configRate@cfg2
  5749     06E1                     l3089:
  5750                           
  5751                           ;mcp2515_can.c: 619:                     cfg3 = (0x02);
  5752     06E1  3002               	movlw	2
  5753     06E2  00FA               	movwf	mcp2515_configRate@cfg3
  5754                           
  5755                           ;mcp2515_can.c: 620:                     break;
  5756     06E3  2FC5               	goto	l3169
  5757     06E4                     l3091:
  5758                           
  5759                           ;mcp2515_can.c: 623:                     cfg1 = (0x00);
  5760     06E4  01F8               	clrf	mcp2515_configRate@cfg1
  5761     06E5                     l3093:
  5762                           
  5763                           ;mcp2515_can.c: 624:                     cfg2 = (0x92);
  5764     06E5  3092               	movlw	146
  5765     06E6  00F9               	movwf	mcp2515_configRate@cfg2
  5766     06E7                     l3095:
  5767                           
  5768                           ;mcp2515_can.c: 625:                     cfg3 = (0x01);
  5769     06E7  01FA               	clrf	mcp2515_configRate@cfg3
  5770     06E8  0AFA               	incf	mcp2515_configRate@cfg3,f
  5771                           
  5772                           ;mcp2515_can.c: 626:                     break;
  5773     06E9  2FC5               	goto	l3169
  5774     06EA                     l3097:
  5775                           
  5776                           ;mcp2515_can.c: 629:                     cfg1 = (0x00);
  5777     06EA  01F8               	clrf	mcp2515_configRate@cfg1
  5778     06EB                     l3099:
  5779                           
  5780                           ;mcp2515_can.c: 630:                     cfg2 = (0x88);
  5781     06EB  3088               	movlw	136
  5782     06EC  00F9               	movwf	mcp2515_configRate@cfg2
  5783     06ED  2EE7               	goto	l3095
  5784     06EE                     l3107:
  5785     06EE  0877               	movf	mcp2515_configRate@canSpeed,w
  5786     06EF  00F4               	movwf	??_mcp2515_configRate
  5787     06F0  01F5               	clrf	??_mcp2515_configRate+1
  5788                           
  5789                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5790                           ; Switch size 1, requested type "simple"
  5791                           ; Number of cases is 1, Range of values is 0 to 0
  5792                           ; switch strategies available:
  5793                           ; Name         Instructions Cycles
  5794                           ; simple_byte            4     3 (average)
  5795                           ; direct_byte           11     8 (fixed)
  5796                           ; jumptable            260     6 (fixed)
  5797                           ;	Chosen strategy is simple_byte
  5798     06F1  0875               	movf	??_mcp2515_configRate+1,w
  5799     06F2  3A00               	xorlw	0	; case 0
  5800     06F3  1903               	skipnz
  5801     06F4  2EF6               	goto	l4259
  5802     06F5  2E3F               	goto	l3049
  5803     06F6                     l4259:
  5804                           
  5805                           ; Switch size 1, requested type "simple"
  5806                           ; Number of cases is 16, Range of values is 3 to 19
  5807                           ; switch strategies available:
  5808                           ; Name         Instructions Cycles
  5809                           ; simple_byte           49    25 (average)
  5810                           ; direct_byte           62    11 (fixed)
  5811                           ; jumptable            263     9 (fixed)
  5812                           ;	Chosen strategy is simple_byte
  5813     06F6  0874               	movf	??_mcp2515_configRate,w
  5814     06F7  3A03               	xorlw	3	; case 3
  5815     06F8  1903               	skipnz
  5816     06F9  2E84               	goto	l3055
  5817     06FA  3A07               	xorlw	7	; case 4
  5818     06FB  1903               	skipnz
  5819     06FC  2E8B               	goto	l3057
  5820     06FD  3A01               	xorlw	1	; case 5
  5821     06FE  1903               	skipnz
  5822     06FF  2E92               	goto	l3059
  5823     0700  3A03               	xorlw	3	; case 6
  5824     0701  1903               	skipnz
  5825     0702  2E99               	goto	l3061
  5826     0703  3A01               	xorlw	1	; case 7
  5827     0704  1903               	skipnz
  5828     0705  2EA0               	goto	l3063
  5829     0706  3A0F               	xorlw	15	; case 8
  5830     0707  1903               	skipnz
  5831     0708  2EA7               	goto	l3065
  5832     0709  3A01               	xorlw	1	; case 9
  5833     070A  1903               	skipnz
  5834     070B  2EAE               	goto	l3067
  5835     070C  3A03               	xorlw	3	; case 10
  5836     070D  1903               	skipnz
  5837     070E  2EB5               	goto	l3069
  5838     070F  3A01               	xorlw	1	; case 11
  5839     0710  1903               	skipnz
  5840     0711  2EBC               	goto	l3071
  5841     0712  3A07               	xorlw	7	; case 12
  5842     0713  1903               	skipnz
  5843     0714  2EC3               	goto	l3073
  5844     0715  3A01               	xorlw	1	; case 13
  5845     0716  1903               	skipnz
  5846     0717  2ECA               	goto	l209
  5847     0718  3A03               	xorlw	3	; case 14
  5848     0719  1903               	skipnz
  5849     071A  2ED1               	goto	l210
  5850     071B  3A01               	xorlw	1	; case 15
  5851     071C  1903               	skipnz
  5852     071D  2ED8               	goto	l3079
  5853     071E  3A1F               	xorlw	31	; case 16
  5854     071F  1903               	skipnz
  5855     0720  2EDE               	goto	l3085
  5856     0721  3A01               	xorlw	1	; case 17
  5857     0722  1903               	skipnz
  5858     0723  2EE4               	goto	l3091
  5859     0724  3A02               	xorlw	2	; case 19
  5860     0725  1903               	skipnz
  5861     0726  2EEA               	goto	l3097
  5862     0727  2E3F               	goto	l3049
  5863     0728                     l3109:
  5864                           
  5865                           ;mcp2515_can.c: 642:                     cfg1 = (0x1f);
  5866     0728  301F               	movlw	31
  5867     0729  00F8               	movwf	mcp2515_configRate@cfg1
  5868                           
  5869                           ;mcp2515_can.c: 643:                     cfg2 = (0xbf);
  5870     072A  30BF               	movlw	191
  5871     072B  00F9               	movwf	mcp2515_configRate@cfg2
  5872                           
  5873                           ;mcp2515_can.c: 644:                     cfg3 = (0x07);
  5874     072C  3007               	movlw	7
  5875     072D  00FA               	movwf	mcp2515_configRate@cfg3
  5876                           
  5877                           ;mcp2515_can.c: 645:                     break;
  5878     072E  2FC5               	goto	l3169
  5879     072F                     l3111:
  5880                           
  5881                           ;mcp2515_can.c: 648:                     cfg1 = (0x0f);
  5882     072F  300F               	movlw	15
  5883     0730  00F8               	movwf	mcp2515_configRate@cfg1
  5884                           
  5885                           ;mcp2515_can.c: 649:                     cfg2 = (0xbf);
  5886     0731  30BF               	movlw	191
  5887     0732  00F9               	movwf	mcp2515_configRate@cfg2
  5888                           
  5889                           ;mcp2515_can.c: 650:                     cfg3 = (0x07);
  5890     0733  3007               	movlw	7
  5891     0734  00FA               	movwf	mcp2515_configRate@cfg3
  5892                           
  5893                           ;mcp2515_can.c: 651:                     break;
  5894     0735  2FC5               	goto	l3169
  5895     0736                     l3113:
  5896                           
  5897                           ;mcp2515_can.c: 654:                     cfg1 = (0x07);
  5898     0736  3007               	movlw	7
  5899     0737  00F8               	movwf	mcp2515_configRate@cfg1
  5900                           
  5901                           ;mcp2515_can.c: 655:                     cfg2 = (0xbf);
  5902     0738  30BF               	movlw	191
  5903     0739  00F9               	movwf	mcp2515_configRate@cfg2
  5904                           
  5905                           ;mcp2515_can.c: 656:                     cfg3 = (0x07);
  5906     073A  3007               	movlw	7
  5907     073B  00FA               	movwf	mcp2515_configRate@cfg3
  5908                           
  5909                           ;mcp2515_can.c: 657:                     break;
  5910     073C  2FC5               	goto	l3169
  5911     073D                     l3115:
  5912                           
  5913                           ;mcp2515_can.c: 660:                     cfg1 = (0x07);
  5914     073D  3007               	movlw	7
  5915     073E  00F8               	movwf	mcp2515_configRate@cfg1
  5916                           
  5917                           ;mcp2515_can.c: 661:                     cfg2 = (0xa4);
  5918     073F  30A4               	movlw	164
  5919     0740  00F9               	movwf	mcp2515_configRate@cfg2
  5920                           
  5921                           ;mcp2515_can.c: 662:                     cfg3 = (0x04);
  5922     0741  3004               	movlw	4
  5923     0742  00FA               	movwf	mcp2515_configRate@cfg3
  5924                           
  5925                           ;mcp2515_can.c: 663:                     break;
  5926     0743  2FC5               	goto	l3169
  5927     0744                     l3117:
  5928                           
  5929                           ;mcp2515_can.c: 666:                     cfg1 = (0x03);
  5930     0744  3003               	movlw	3
  5931     0745  00F8               	movwf	mcp2515_configRate@cfg1
  5932                           
  5933                           ;mcp2515_can.c: 667:                     cfg2 = (0xbf);
  5934     0746  30BF               	movlw	191
  5935     0747  00F9               	movwf	mcp2515_configRate@cfg2
  5936                           
  5937                           ;mcp2515_can.c: 668:                     cfg3 = (0x07);
  5938     0748  3007               	movlw	7
  5939     0749  00FA               	movwf	mcp2515_configRate@cfg3
  5940                           
  5941                           ;mcp2515_can.c: 669:                     break;
  5942     074A  2FC5               	goto	l3169
  5943     074B                     l3119:
  5944                           
  5945                           ;mcp2515_can.c: 672:                     cfg1 = (0x03);
  5946     074B  3003               	movlw	3
  5947     074C  00F8               	movwf	mcp2515_configRate@cfg1
  5948                           
  5949                           ;mcp2515_can.c: 673:                     cfg2 = (0xb4);
  5950     074D  30B4               	movlw	180
  5951     074E  00F9               	movwf	mcp2515_configRate@cfg2
  5952                           
  5953                           ;mcp2515_can.c: 674:                     cfg3 = (0x06);
  5954     074F  3006               	movlw	6
  5955     0750  00FA               	movwf	mcp2515_configRate@cfg3
  5956                           
  5957                           ;mcp2515_can.c: 675:                     break;
  5958     0751  2FC5               	goto	l3169
  5959     0752                     l225:	
  5960                           ;mcp2515_can.c: 677:                 case (CAN_80KBPS) :
  5961                           
  5962                           
  5963                           ;mcp2515_can.c: 678:                     cfg1 = (0x01);
  5964     0752  01F8               	clrf	mcp2515_configRate@cfg1
  5965     0753  0AF8               	incf	mcp2515_configRate@cfg1,f
  5966     0754                     l3121:
  5967                           
  5968                           ;mcp2515_can.c: 679:                     cfg2 = (0xbf);
  5969     0754  30BF               	movlw	191
  5970     0755  00F9               	movwf	mcp2515_configRate@cfg2
  5971                           
  5972                           ;mcp2515_can.c: 680:                     cfg3 = (0x07);
  5973     0756  3007               	movlw	7
  5974     0757  00FA               	movwf	mcp2515_configRate@cfg3
  5975                           
  5976                           ;mcp2515_can.c: 681:                     break;
  5977     0758  2FC5               	goto	l3169
  5978     0759                     l226:	
  5979                           ;mcp2515_can.c: 683:                 case (CAN_100KBPS) :
  5980                           
  5981                           
  5982                           ;mcp2515_can.c: 684:                     cfg1 = (0x01);
  5983     0759  01F8               	clrf	mcp2515_configRate@cfg1
  5984     075A  0AF8               	incf	mcp2515_configRate@cfg1,f
  5985     075B                     l3123:
  5986                           
  5987                           ;mcp2515_can.c: 685:                     cfg2 = (0xb4);
  5988     075B  30B4               	movlw	180
  5989     075C  00F9               	movwf	mcp2515_configRate@cfg2
  5990                           
  5991                           ;mcp2515_can.c: 686:                     cfg3 = (0x06);
  5992     075D  3006               	movlw	6
  5993     075E  00FA               	movwf	mcp2515_configRate@cfg3
  5994                           
  5995                           ;mcp2515_can.c: 687:                     break;
  5996     075F  2FC5               	goto	l3169
  5997     0760                     l227:	
  5998                           ;mcp2515_can.c: 689:                 case (CAN_125KBPS) :
  5999                           
  6000                           
  6001                           ;mcp2515_can.c: 690:                     cfg1 = (0x01);
  6002     0760  01F8               	clrf	mcp2515_configRate@cfg1
  6003     0761  0AF8               	incf	mcp2515_configRate@cfg1,f
  6004     0762                     l3125:
  6005                           
  6006                           ;mcp2515_can.c: 691:                     cfg2 = (0xb1);
  6007     0762  30B1               	movlw	177
  6008     0763  00F9               	movwf	mcp2515_configRate@cfg2
  6009                           
  6010                           ;mcp2515_can.c: 692:                     cfg3 = (0x05);
  6011     0764  3005               	movlw	5
  6012     0765  00FA               	movwf	mcp2515_configRate@cfg3
  6013                           
  6014                           ;mcp2515_can.c: 693:                     break;
  6015     0766  2FC5               	goto	l3169
  6016     0767                     l3127:
  6017                           
  6018                           ;mcp2515_can.c: 696:                     cfg1 = (0x00);
  6019     0767  01F8               	clrf	mcp2515_configRate@cfg1
  6020     0768                     l3129:
  6021                           
  6022                           ;mcp2515_can.c: 697:                     cfg2 = (0xb4);
  6023     0768  30B4               	movlw	180
  6024     0769  00F9               	movwf	mcp2515_configRate@cfg2
  6025     076A  2EDB               	goto	l3083
  6026     076B                     l3133:
  6027                           
  6028                           ;mcp2515_can.c: 702:                     cfg1 = (0x00);
  6029     076B  01F8               	clrf	mcp2515_configRate@cfg1
  6030     076C                     l3135:
  6031                           
  6032                           ;mcp2515_can.c: 703:                     cfg2 = (0xb1);
  6033     076C  30B1               	movlw	177
  6034     076D  00F9               	movwf	mcp2515_configRate@cfg2
  6035     076E                     l3137:
  6036                           
  6037                           ;mcp2515_can.c: 704:                     cfg3 = (0x05);
  6038     076E  3005               	movlw	5
  6039     076F  00FA               	movwf	mcp2515_configRate@cfg3
  6040                           
  6041                           ;mcp2515_can.c: 705:                     break;
  6042     0770  2FC5               	goto	l3169
  6043     0771                     l3139:
  6044                           
  6045                           ;mcp2515_can.c: 708:                     cfg1 = (0x00);
  6046     0771  01F8               	clrf	mcp2515_configRate@cfg1
  6047     0772                     l3141:
  6048                           
  6049                           ;mcp2515_can.c: 709:                     cfg2 = (0x90);
  6050     0772  3090               	movlw	144
  6051     0773  00F9               	movwf	mcp2515_configRate@cfg2
  6052     0774  2EE1               	goto	l3089
  6053     0775                     l3145:
  6054                           
  6055                           ;mcp2515_can.c: 714:                     cfg1 = (0x00);
  6056     0775  01F8               	clrf	mcp2515_configRate@cfg1
  6057     0776                     l3147:
  6058                           
  6059                           ;mcp2515_can.c: 715:                     cfg2 = (0x80);
  6060     0776  3080               	movlw	128
  6061     0777  00F9               	movwf	mcp2515_configRate@cfg2
  6062     0778  2EE7               	goto	l3095
  6063     0779                     l3151:
  6064                           
  6065                           ;mcp2515_can.c: 720:                     cfg1 = (0x00);
  6066     0779  01F8               	clrf	mcp2515_configRate@cfg1
  6067     077A                     l3153:
  6068                           
  6069                           ;mcp2515_can.c: 721:                     cfg2 = (0x80);
  6070     077A  3080               	movlw	128
  6071     077B  00F9               	movwf	mcp2515_configRate@cfg2
  6072     077C                     l3155:
  6073                           
  6074                           ;mcp2515_can.c: 722:                     cfg3 = (0x00);
  6075     077C  01FA               	clrf	mcp2515_configRate@cfg3
  6076                           
  6077                           ;mcp2515_can.c: 723:                     break;
  6078     077D  2FC5               	goto	l3169
  6079     077E                     l3161:
  6080     077E  0877               	movf	mcp2515_configRate@canSpeed,w
  6081     077F  00F4               	movwf	??_mcp2515_configRate
  6082     0780  01F5               	clrf	??_mcp2515_configRate+1
  6083                           
  6084                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6085                           ; Switch size 1, requested type "simple"
  6086                           ; Number of cases is 1, Range of values is 0 to 0
  6087                           ; switch strategies available:
  6088                           ; Name         Instructions Cycles
  6089                           ; simple_byte            4     3 (average)
  6090                           ; direct_byte           11     8 (fixed)
  6091                           ; jumptable            260     6 (fixed)
  6092                           ;	Chosen strategy is simple_byte
  6093     0781  0875               	movf	??_mcp2515_configRate+1,w
  6094     0782  3A00               	xorlw	0	; case 0
  6095     0783  1903               	skipnz
  6096     0784  2F86               	goto	l4261
  6097     0785  2E3F               	goto	l3049
  6098     0786                     l4261:
  6099                           
  6100                           ; Switch size 1, requested type "simple"
  6101                           ; Number of cases is 14, Range of values is 1 to 19
  6102                           ; switch strategies available:
  6103                           ; Name         Instructions Cycles
  6104                           ; simple_byte           43    22 (average)
  6105                           ; direct_byte           68    11 (fixed)
  6106                           ; jumptable            263     9 (fixed)
  6107                           ;	Chosen strategy is simple_byte
  6108     0786  0874               	movf	??_mcp2515_configRate,w
  6109     0787  3A01               	xorlw	1	; case 1
  6110     0788  1903               	skipnz
  6111     0789  2F28               	goto	l3109
  6112     078A  3A03               	xorlw	3	; case 2
  6113     078B  1903               	skipnz
  6114     078C  2F2F               	goto	l3111
  6115     078D  3A01               	xorlw	1	; case 3
  6116     078E  1903               	skipnz
  6117     078F  2F36               	goto	l3113
  6118     0790  3A06               	xorlw	6	; case 5
  6119     0791  1903               	skipnz
  6120     0792  2F3D               	goto	l3115
  6121     0793  3A02               	xorlw	2	; case 7
  6122     0794  1903               	skipnz
  6123     0795  2F44               	goto	l3117
  6124     0796  3A0F               	xorlw	15	; case 8
  6125     0797  1903               	skipnz
  6126     0798  2F4B               	goto	l3119
  6127     0799  3A01               	xorlw	1	; case 9
  6128     079A  1903               	skipnz
  6129     079B  2F52               	goto	l225
  6130     079C  3A05               	xorlw	5	; case 12
  6131     079D  1903               	skipnz
  6132     079E  2F59               	goto	l226
  6133     079F  3A01               	xorlw	1	; case 13
  6134     07A0  1903               	skipnz
  6135     07A1  2F60               	goto	l227
  6136     07A2  3A03               	xorlw	3	; case 14
  6137     07A3  1903               	skipnz
  6138     07A4  2F67               	goto	l3127
  6139     07A5  3A01               	xorlw	1	; case 15
  6140     07A6  1903               	skipnz
  6141     07A7  2F6B               	goto	l3133
  6142     07A8  3A1F               	xorlw	31	; case 16
  6143     07A9  1903               	skipnz
  6144     07AA  2F71               	goto	l3139
  6145     07AB  3A02               	xorlw	2	; case 18
  6146     07AC  1903               	skipnz
  6147     07AD  2F75               	goto	l3145
  6148     07AE  3A01               	xorlw	1	; case 19
  6149     07AF  1903               	skipnz
  6150     07B0  2F79               	goto	l3151
  6151     07B1  2E3F               	goto	l3049
  6152     07B2                     l3167:
  6153     07B2  0873               	movf	mcp2515_configRate@clock,w
  6154     07B3  00F4               	movwf	??_mcp2515_configRate
  6155     07B4  01F5               	clrf	??_mcp2515_configRate+1
  6156                           
  6157                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6158                           ; Switch size 1, requested type "simple"
  6159                           ; Number of cases is 1, Range of values is 0 to 0
  6160                           ; switch strategies available:
  6161                           ; Name         Instructions Cycles
  6162                           ; simple_byte            4     3 (average)
  6163                           ; direct_byte           11     8 (fixed)
  6164                           ; jumptable            260     6 (fixed)
  6165                           ;	Chosen strategy is simple_byte
  6166     07B5  0875               	movf	??_mcp2515_configRate+1,w
  6167     07B6  3A00               	xorlw	0	; case 0
  6168     07B7  1903               	skipnz
  6169     07B8  2FBA               	goto	l4263
  6170     07B9  2E3F               	goto	l3049
  6171     07BA                     l4263:
  6172                           
  6173                           ; Switch size 1, requested type "simple"
  6174                           ; Number of cases is 3, Range of values is 1 to 3
  6175                           ; switch strategies available:
  6176                           ; Name         Instructions Cycles
  6177                           ; simple_byte           10     6 (average)
  6178                           ; direct_byte           20    11 (fixed)
  6179                           ; jumptable            263     9 (fixed)
  6180                           ;	Chosen strategy is simple_byte
  6181     07BA  0874               	movf	??_mcp2515_configRate,w
  6182     07BB  3A01               	xorlw	1	; case 1
  6183     07BC  1903               	skipnz
  6184     07BD  2E41               	goto	l3053
  6185     07BE  3A03               	xorlw	3	; case 2
  6186     07BF  1903               	skipnz
  6187     07C0  2EEE               	goto	l3107
  6188     07C1  3A01               	xorlw	1	; case 3
  6189     07C2  1903               	skipnz
  6190     07C3  2F7E               	goto	l3161
  6191     07C4  2E3F               	goto	l3049
  6192     07C5                     l3169:
  6193                           
  6194                           ;mcp2515_can.c: 736:     if (set) {
  6195     07C5  0876               	movf	mcp2515_configRate@set,w
  6196     07C6  1903               	btfsc	3,2
  6197     07C7  2FC9               	goto	u1221
  6198     07C8  2FCA               	goto	u1220
  6199     07C9                     u1221:
  6200     07C9  2FE4               	goto	l3179
  6201     07CA                     u1220:
  6202     07CA                     l3171:
  6203                           
  6204                           ;mcp2515_can.c: 737:         mcp2515_setRegister(0x2A, cfg1);
  6205     07CA  0878               	movf	mcp2515_configRate@cfg1,w
  6206     07CB  00F1               	movwf	mcp2515_setRegister@value
  6207     07CC  302A               	movlw	42
  6208     07CD  120A  158A  2636  120A  118A  	fcall	_mcp2515_setRegister
  6209                           
  6210                           ;mcp2515_can.c: 738:         mcp2515_setRegister(0x29, cfg2);
  6211     07D2  0879               	movf	mcp2515_configRate@cfg2,w
  6212     07D3  00F1               	movwf	mcp2515_setRegister@value
  6213     07D4  3029               	movlw	41
  6214     07D5  120A  158A  2636  120A  118A  	fcall	_mcp2515_setRegister
  6215                           
  6216                           ;mcp2515_can.c: 739:         mcp2515_setRegister(0x28, cfg3);
  6217     07DA  087A               	movf	mcp2515_configRate@cfg3,w
  6218     07DB  00F1               	movwf	mcp2515_setRegister@value
  6219     07DC  3028               	movlw	40
  6220     07DD  120A  158A  2636  120A  118A  	fcall	_mcp2515_setRegister
  6221     07E2                     l3173:
  6222                           
  6223                           ;mcp2515_can.c: 740:         return (0);
  6224     07E2  3000               	movlw	0
  6225     07E3  2FE5               	goto	l236
  6226     07E4                     l3179:
  6227                           
  6228                           ;mcp2515_can.c: 742:         return (1);
  6229     07E4  3001               	movlw	1
  6230     07E5                     l236:
  6231     07E5  0008               	return
  6232     07E6                     __end_of_mcp2515_configRate:
  6233                           
  6234                           	psect	text32
  6235     0E36                     __ptext32:	
  6236 ;; *************** function _mcp2515_setRegister *****************
  6237 ;; Defined at:
  6238 ;;		line 216 in file "mcp2515_can.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  address         1    wreg     const unsigned char 
  6241 ;;  value           1    1[COMMON] const unsigned char 
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;  address         1    2[COMMON] const unsigned char 
  6244 ;; Return value:  Size  Location     Type
  6245 ;;                  1    wreg      void 
  6246 ;; Registers used:
  6247 ;;		wreg, status,2, status,0, pclath, cstack
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6253 ;;      Params:         1       0       0       0       0
  6254 ;;      Locals:         1       0       0       0       0
  6255 ;;      Temps:          0       0       0       0       0
  6256 ;;      Totals:         2       0       0       0       0
  6257 ;;Total ram usage:        2 bytes
  6258 ;; Hardware stack levels used: 1
  6259 ;; Hardware stack levels required when called: 1
  6260 ;; This function calls:
  6261 ;;		_WriteSPI
  6262 ;; This function is called by:
  6263 ;;		_mcp2515_configRate
  6264 ;;		_mcp2515_initCANBuffers
  6265 ;;		_mcp2515_init
  6266 ;;		_enableTxInterrupt
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270     0E36                     _mcp2515_setRegister:	
  6271                           ;psect for function _mcp2515_setRegister
  6272                           
  6273                           
  6274                           ;incstack = 0
  6275                           ; Regs used in _mcp2515_setRegister: [wreg+status,2+status,0+pclath+cstack]
  6276                           ;mcp2515_setRegister@address stored from wreg
  6277     0E36  00F2               	movwf	mcp2515_setRegister@address
  6278     0E37                     l2915:
  6279                           
  6280                           ;mcp2515_can.c: 220:     RD0 = 0;;
  6281     0E37  1283               	bcf	3,5	;RP0=0, select bank0
  6282     0E38  1303               	bcf	3,6	;RP1=0, select bank0
  6283     0E39  1008               	bcf	8,0	;volatile
  6284     0E3A                     l2917:
  6285                           
  6286                           ;mcp2515_can.c: 221:     WriteSPI(0x02);
  6287     0E3A  3002               	movlw	2
  6288     0E3B  120A  158A  2594  120A  158A  	fcall	_WriteSPI
  6289                           
  6290                           ;mcp2515_can.c: 222:     WriteSPI(address);
  6291     0E40  0872               	movf	mcp2515_setRegister@address,w
  6292     0E41  120A  158A  2594  120A  158A  	fcall	_WriteSPI
  6293                           
  6294                           ;mcp2515_can.c: 223:     WriteSPI(value);
  6295     0E46  0871               	movf	mcp2515_setRegister@value,w
  6296     0E47  120A  158A  2594  120A  158A  	fcall	_WriteSPI
  6297     0E4C                     l2919:
  6298                           
  6299                           ;mcp2515_can.c: 224:     RD0 = 1;;
  6300     0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  6301     0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  6302     0E4E  1408               	bsf	8,0	;volatile
  6303     0E4F                     l116:
  6304     0E4F  0008               	return
  6305     0E50                     __end_of_mcp2515_setRegister:
  6306                           
  6307                           	psect	text33
  6308     0D94                     __ptext33:	
  6309 ;; *************** function _WriteSPI *****************
  6310 ;; Defined at:
  6311 ;;		line 192 in file "spi16.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;  data_out        1    wreg     unsigned char 
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;  data_out        1    0[COMMON] unsigned char 
  6316 ;; Return value:  Size  Location     Type
  6317 ;;                  1    wreg      unsigned char 
  6318 ;; Registers used:
  6319 ;;		wreg
  6320 ;; Tracked objects:
  6321 ;;		On entry : 0/0
  6322 ;;		On exit  : 0/0
  6323 ;;		Unchanged: 0/0
  6324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6325 ;;      Params:         0       0       0       0       0
  6326 ;;      Locals:         1       0       0       0       0
  6327 ;;      Temps:          0       0       0       0       0
  6328 ;;      Totals:         1       0       0       0       0
  6329 ;;Total ram usage:        1 bytes
  6330 ;; Hardware stack levels used: 1
  6331 ;; This function calls:
  6332 ;;		Nothing
  6333 ;; This function is called by:
  6334 ;;		_mcp2515_reset
  6335 ;;		_mcp2515_readRegister
  6336 ;;		_mcp2515_setRegister
  6337 ;;		_mcp2515_modifyRegister
  6338 ;;		_mcp2515_readStatus
  6339 ;;		_mcp2515_write_canMsg
  6340 ;;		_mcp2515_read_canMsg
  6341 ;;		_mcp2515_start_transmit
  6342 ;;		_mcp2515_readRegisterS
  6343 ;;		_mcp2515_setRegisterS
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347     0D94                     _WriteSPI:	
  6348                           ;psect for function _WriteSPI
  6349                           
  6350                           
  6351                           ;incstack = 0
  6352                           ; Regs used in _WriteSPI: [wreg]
  6353                           ;WriteSPI@data_out stored from wreg
  6354     0D94  00F0               	movwf	WriteSPI@data_out
  6355     0D95                     l2725:
  6356                           
  6357                           ;spi16.c: 192: unsigned char WriteSPI( unsigned char data_out );spi16.c: 193: {;spi16.c:
      +                           194:     SSPBUF = data_out;
  6358     0D95  0870               	movf	WriteSPI@data_out,w
  6359     0D96  1283               	bcf	3,5	;RP0=0, select bank0
  6360     0D97  1303               	bcf	3,6	;RP1=0, select bank0
  6361     0D98  0093               	movwf	19	;volatile
  6362     0D99                     l2727:
  6363                           
  6364                           ;spi16.c: 195:     if ( WCOL )
  6365     0D99  1F94               	btfss	20,7	;volatile
  6366     0D9A  2D9C               	goto	u1061
  6367     0D9B  2D9D               	goto	u1060
  6368     0D9C                     u1061:
  6369     0D9C  2D9E               	goto	l555
  6370     0D9D                     u1060:
  6371     0D9D  2DA4               	goto	l553
  6372     0D9E                     l555:
  6373     0D9E  1683               	bsf	3,5	;RP0=1, select bank1
  6374     0D9F  1303               	bcf	3,6	;RP1=0, select bank1
  6375     0DA0  1C14               	btfss	20,0	;volatile
  6376     0DA1  2DA3               	goto	u1071
  6377     0DA2  2DA4               	goto	u1070
  6378     0DA3                     u1071:
  6379     0DA3  2D9E               	goto	l555
  6380     0DA4                     u1070:
  6381     0DA4                     l553:
  6382     0DA4  0008               	return
  6383     0DA5                     __end_of_WriteSPI:
  6384                           
  6385                           	psect	text34
  6386     00A8                     __ptext34:	
  6387 ;; *************** function _OpenSPI *****************
  6388 ;; Defined at:
  6389 ;;		line 106 in file "spi16.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;  sync_mode       1    wreg     unsigned char 
  6392 ;;  bus_mode        1    0[COMMON] unsigned char 
  6393 ;;  smp_phase       1    1[COMMON] unsigned char 
  6394 ;; Auto vars:     Size  Location     Type
  6395 ;;  sync_mode       1    4[COMMON] unsigned char 
  6396 ;; Return value:  Size  Location     Type
  6397 ;;                  1    wreg      void 
  6398 ;; Registers used:
  6399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6400 ;; Tracked objects:
  6401 ;;		On entry : 0/0
  6402 ;;		On exit  : 0/0
  6403 ;;		Unchanged: 0/0
  6404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6405 ;;      Params:         2       0       0       0       0
  6406 ;;      Locals:         1       0       0       0       0
  6407 ;;      Temps:          2       0       0       0       0
  6408 ;;      Totals:         5       0       0       0       0
  6409 ;;Total ram usage:        5 bytes
  6410 ;; Hardware stack levels used: 1
  6411 ;; This function calls:
  6412 ;;		Nothing
  6413 ;; This function is called by:
  6414 ;;		_begin
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418     00A8                     _OpenSPI:	
  6419                           ;psect for function _OpenSPI
  6420                           
  6421                           
  6422                           ;incstack = 0
  6423                           ; Regs used in _OpenSPI: [wreg-fsr0h+status,2+status,0+btemp+1]
  6424                           ;OpenSPI@sync_mode stored from wreg
  6425     00A8  00F4               	movwf	OpenSPI@sync_mode
  6426     00A9                     l3393:
  6427     00A9  1683               	bsf	3,5	;RP0=1, select bank1
  6428     00AA  1303               	bcf	3,6	;RP1=0, select bank1
  6429     00AB  0194               	clrf	20	;volatile
  6430     00AC  1283               	bcf	3,5	;RP0=0, select bank0
  6431     00AD  1303               	bcf	3,6	;RP1=0, select bank0
  6432     00AE  0194               	clrf	20	;volatile
  6433     00AF                     l3395:
  6434     00AF  0874               	movf	OpenSPI@sync_mode,w	;volatile
  6435     00B0  00FF               	movwf	btemp+1
  6436     00B1  087F               	movf	btemp+1,w
  6437     00B2  0494               	iorwf	20,f	;volatile
  6438     00B3                     l3397:
  6439     00B3  1871               	btfsc	OpenSPI@smp_phase,0
  6440     00B4  28B6               	goto	u1501
  6441     00B5  28B9               	goto	u1500
  6442     00B6                     u1501:
  6443     00B6  1683               	bsf	3,5	;RP0=1, select bank1
  6444     00B7  1303               	bcf	3,6	;RP1=0, select bank1
  6445     00B8  1794               	bsf	20,7	;volatile
  6446     00B9                     u1500:
  6447     00B9  28CF               	goto	l3401
  6448     00BA                     l533:
  6449     00BA  1683               	bsf	3,5	;RP0=1, select bank1
  6450     00BB  1303               	bcf	3,6	;RP1=0, select bank1
  6451     00BC  1714               	bsf	20,6	;volatile
  6452     00BD  1283               	bcf	3,5	;RP0=0, select bank0
  6453     00BE  1303               	bcf	3,6	;RP1=0, select bank0
  6454     00BF  1214               	bcf	20,4	;volatile
  6455     00C0  28EE               	goto	l3405
  6456     00C1                     l535:
  6457     00C1  1683               	bsf	3,5	;RP0=1, select bank1
  6458     00C2  1303               	bcf	3,6	;RP1=0, select bank1
  6459     00C3  1714               	bsf	20,6	;volatile
  6460     00C4  1283               	bcf	3,5	;RP0=0, select bank0
  6461     00C5  1303               	bcf	3,6	;RP1=0, select bank0
  6462     00C6  1614               	bsf	20,4	;volatile
  6463     00C7  28EE               	goto	l3405
  6464     00C8                     l536:
  6465     00C8  1683               	bsf	3,5	;RP0=1, select bank1
  6466     00C9  1303               	bcf	3,6	;RP1=0, select bank1
  6467     00CA  1314               	bcf	20,6	;volatile
  6468     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  6469     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  6470     00CD  1614               	bsf	20,4	;volatile
  6471     00CE  28EE               	goto	l3405
  6472     00CF                     l3401:
  6473     00CF  0870               	movf	OpenSPI@bus_mode,w
  6474     00D0  00F2               	movwf	??_OpenSPI
  6475     00D1  01F3               	clrf	??_OpenSPI+1
  6476                           
  6477                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6478                           ; Switch size 1, requested type "simple"
  6479                           ; Number of cases is 1, Range of values is 0 to 0
  6480                           ; switch strategies available:
  6481                           ; Name         Instructions Cycles
  6482                           ; simple_byte            4     3 (average)
  6483                           ; direct_byte           11     8 (fixed)
  6484                           ; jumptable            260     6 (fixed)
  6485                           ;	Chosen strategy is simple_byte
  6486     00D2  0873               	movf	??_OpenSPI+1,w
  6487     00D3  3A00               	xorlw	0	; case 0
  6488     00D4  1903               	skipnz
  6489     00D5  28D7               	goto	l4265
  6490     00D6  28EE               	goto	l3405
  6491     00D7                     l4265:
  6492                           
  6493                           ; Switch size 1, requested type "simple"
  6494                           ; Number of cases is 3, Range of values is 0 to 3
  6495                           ; switch strategies available:
  6496                           ; Name         Instructions Cycles
  6497                           ; simple_byte           10     6 (average)
  6498                           ; direct_byte           20     8 (fixed)
  6499                           ; jumptable            260     6 (fixed)
  6500                           ;	Chosen strategy is simple_byte
  6501     00D7  0872               	movf	??_OpenSPI,w
  6502     00D8  3A00               	xorlw	0	; case 0
  6503     00D9  1903               	skipnz
  6504     00DA  28BA               	goto	l533
  6505     00DB  3A02               	xorlw	2	; case 2
  6506     00DC  1903               	skipnz
  6507     00DD  28C1               	goto	l535
  6508     00DE  3A01               	xorlw	1	; case 3
  6509     00DF  1903               	skipnz
  6510     00E0  28C8               	goto	l536
  6511     00E1  28EE               	goto	l3405
  6512     00E2                     l539:
  6513     00E2  1683               	bsf	3,5	;RP0=1, select bank1
  6514     00E3  1303               	bcf	3,6	;RP1=0, select bank1
  6515     00E4  1685               	bsf	5,5	;volatile
  6516     00E5                     l540:
  6517     00E5  1683               	bsf	3,5	;RP0=1, select bank1
  6518     00E6  1303               	bcf	3,6	;RP1=0, select bank1
  6519     00E7  1587               	bsf	7,3	;volatile
  6520     00E8  1394               	bcf	20,7	;volatile
  6521     00E9  28FE               	goto	l541
  6522     00EA                     l542:
  6523     00EA  1683               	bsf	3,5	;RP0=1, select bank1
  6524     00EB  1303               	bcf	3,6	;RP1=0, select bank1
  6525     00EC  1187               	bcf	7,3	;volatile
  6526     00ED  28FE               	goto	l541
  6527     00EE                     l3405:
  6528     00EE  0874               	movf	OpenSPI@sync_mode,w
  6529     00EF  00F2               	movwf	??_OpenSPI
  6530     00F0  01F3               	clrf	??_OpenSPI+1
  6531                           
  6532                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6533                           ; Switch size 1, requested type "simple"
  6534                           ; Number of cases is 1, Range of values is 0 to 0
  6535                           ; switch strategies available:
  6536                           ; Name         Instructions Cycles
  6537                           ; simple_byte            4     3 (average)
  6538                           ; direct_byte           11     8 (fixed)
  6539                           ; jumptable            260     6 (fixed)
  6540                           ;	Chosen strategy is simple_byte
  6541     00F1  0873               	movf	??_OpenSPI+1,w
  6542     00F2  3A00               	xorlw	0	; case 0
  6543     00F3  1903               	skipnz
  6544     00F4  28F6               	goto	l4267
  6545     00F5  28EA               	goto	l542
  6546     00F6                     l4267:
  6547                           
  6548                           ; Switch size 1, requested type "simple"
  6549                           ; Number of cases is 2, Range of values is 4 to 5
  6550                           ; switch strategies available:
  6551                           ; Name         Instructions Cycles
  6552                           ; simple_byte            7     4 (average)
  6553                           ; direct_byte           17    11 (fixed)
  6554                           ; jumptable            263     9 (fixed)
  6555                           ;	Chosen strategy is simple_byte
  6556     00F6  0872               	movf	??_OpenSPI,w
  6557     00F7  3A04               	xorlw	4	; case 4
  6558     00F8  1903               	skipnz
  6559     00F9  28E2               	goto	l539
  6560     00FA  3A01               	xorlw	1	; case 5
  6561     00FB  1903               	skipnz
  6562     00FC  28E5               	goto	l540
  6563     00FD  28EA               	goto	l542
  6564     00FE                     l541:
  6565     00FE  1287               	bcf	7,5	;volatile
  6566     00FF  1607               	bsf	7,4	;volatile
  6567     0100  1283               	bcf	3,5	;RP0=0, select bank0
  6568     0101  1303               	bcf	3,6	;RP1=0, select bank0
  6569     0102  1694               	bsf	20,5	;volatile
  6570     0103                     l543:
  6571     0103  0008               	return
  6572     0104                     __end_of_OpenSPI:
  6573     007E                     btemp	set	126	;btemp
  6574     007E                     wtemp0	set	126
  6575                           
  6576                           	psect	config
  6577                           
  6578                           ;Config register CONFIG @ 0x2007
  6579                           ;	Oscillator Selection bits
  6580                           ;	FOSC = HS, HS oscillator
  6581                           ;	Watchdog Timer Enable bit
  6582                           ;	WDTE = OFF, WDT disabled
  6583                           ;	Power-up Timer Enable bit
  6584                           ;	PWRTE = OFF, PWRT disabled
  6585                           ;	Brown-out Reset Enable bit
  6586                           ;	BOREN = ON, BOR enabled
  6587                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  6588                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  6589                           ;	Data EEPROM Memory Code Protection bit
  6590                           ;	CPD = OFF, Data EEPROM code protection off
  6591                           ;	Flash Program Memory Write Enable bits
  6592                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  6593                           ;	In-Circuit Debugger Mode bit
  6594                           ;	DEBUG = 0x1, unprogrammed default
  6595                           ;	Flash Program Memory Code Protection bit
  6596                           ;	CP = OFF, Code protection off
  6597     2007                     	org	8199
  6598     2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     61      77
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    mcp2515_getNextFreeTXBuf@txbuf_n	PTR unsigned char  size(1) Largest target is 1
		 -> sendMsg@txbuf_n(BANK0[1]), trySendMsgBuf@txbuf_n(COMMON[1]), 

    mcp2515_id_to_buf@tbufdata	PTR unsigned char  size(1) Largest target is 4
		 -> mcp2515_write_canMsg@tbufdata(BANK0[4]), mcp2515_write_id@tbufdata(COMMON[4]), 

    mcp2515_read_canMsg@buf	PTR volatile unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    mcp2515_read_canMsg@ext	PTR volatile unsigned char  size(1) Largest target is 1
		 -> ext_flg(BANK0[1]), 

    mcp2515_read_canMsg@id	PTR volatile unsigned long  size(1) Largest target is 4
		 -> can_id(BANK0[4]), 

    mcp2515_read_canMsg@len	PTR volatile unsigned char  size(1) Largest target is 1
		 -> main@len(BANK0[1]), 

    mcp2515_read_canMsg@rtrBit	PTR volatile unsigned char  size(1) Largest target is 1
		 -> rtr(BANK0[1]), 

    mcp2515_write_canMsg@buf	PTR  unsigned char  size(1) Largest target is 8
		 -> stmp(BANK0[8]), 

    readMsgBuf@buf	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    readMsgBuf@len	PTR unsigned char  size(1) Largest target is 1
		 -> main@len(BANK0[1]), 

    readMsgBufID@buf	PTR volatile unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    readMsgBufID@ext	PTR volatile unsigned char  size(1) Largest target is 1
		 -> ext_flg(BANK0[1]), 

    readMsgBufID@id	PTR volatile unsigned long  size(1) Largest target is 4
		 -> can_id(BANK0[4]), 

    readMsgBufID@len	PTR volatile unsigned char  size(1) Largest target is 1
		 -> main@len(BANK0[1]), 

    readMsgBufID@rtrBit	PTR volatile unsigned char  size(1) Largest target is 1
		 -> rtr(BANK0[1]), 

    sendMsg@buf	PTR const unsigned char  size(1) Largest target is 8
		 -> stmp(BANK0[8]), 

    sendMsgBuf@buf	PTR const unsigned char  size(1) Largest target is 8
		 -> stmp(BANK0[8]), 


Critical Paths under _main in COMMON

    _main->_readMsgBuf
    _sendMsg->_mcp2515_write_canMsg
    _mcp2515_write_canMsg->_mcp2515_id_to_buf
    _mcp2515_start_transmit->_txSidhToRTS
    _mcp2515_getNextFreeTXBuf->_mcp2515_modifyRegister
    _readRxTxStatus->_mcp2515_readStatus
    _readMsgBufID->_mcp2515_read_canMsg
    _mcp2515_read_canMsg->_WriteSPI
    _checkReceive->_mcp2515_readStatus
    _mcp2515_readStatus->_WriteSPI
    _mcp2515_init->_mcp2515_setCANCTRL_Mode
    _setMode->_mcp2515_setCANCTRL_Mode
    _mcp2515_setCANCTRL_Mode->_mcp2515_requestNewMode
    _mcp2515_requestNewMode->_mcp2515_modifyRegister
    _mcp2515_modifyRegister->_txIfFlag
    _getMode->_mcp2515_readRegister
    _mcp2515_readRegister->_WriteSPI
    _mcp2515_reset->_WriteSPI
    _mcp2515_initCANBuffers->_mcp2515_setRegister
    _mcp2515_configRate->_mcp2515_setRegister
    _mcp2515_setRegister->_WriteSPI

Critical Paths under _main in BANK0

    _main->_sendMsgBuf
    _sendMsgBuf->_sendMsg
    _sendMsg->_mcp2515_write_canMsg
    _readMsgBuf->_readMsgBufID
    _readMsgBufID->_mcp2515_read_canMsg
    _begin->_mcp2515_init
    _mcp2515_init->_setMode

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   37883
                                             43 BANK0     18    18      0
                              _begin
                       _checkReceive
                           _getCanId
                            _init_CS
                         _readMsgBuf
                         _sendMsgBuf
 ---------------------------------------------------------------------------------
 (1) _sendMsgBuf                                           9     0      9    8727
                                             34 BANK0      9     0      9
                            _sendMsg
 ---------------------------------------------------------------------------------
 (2) _sendMsg                                             16     7      9    8139
                                             18 BANK0     16     7      9
           _mcp2515_getNextFreeTXBuf
               _mcp2515_readRegister
               _mcp2515_write_canMsg
 ---------------------------------------------------------------------------------
 (3) _mcp2515_write_canMsg                                19    11      8    2443
                                             12 COMMON     1     1      0
                                              0 BANK0     18    10      8
                           _WriteSPI
                  _mcp2515_id_to_buf
             _mcp2515_start_transmit
                     _txSidhToTxLoad
 ---------------------------------------------------------------------------------
 (4) _txSidhToTxLoad                                       3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _mcp2515_start_transmit                               1     1      0      66
                                              3 COMMON     1     1      0
                           _WriteSPI
                        _txSidhToRTS
 ---------------------------------------------------------------------------------
 (5) _txSidhToRTS                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _mcp2515_id_to_buf                                   12     7      5     746
                                              0 COMMON    12     7      5
 ---------------------------------------------------------------------------------
 (3) _mcp2515_getNextFreeTXBuf                             3     3      0    4700
                                              6 COMMON     3     3      0
             _mcp2515_modifyRegister
                 _mcp2515_readStatus
                          _txCtrlReg
                           _txIfFlag
                _txStatusPendingFlag
 ---------------------------------------------------------------------------------
 (4) _txStatusPendingFlag                                  3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _txIfFlag                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _txCtrlReg                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _readMsgBuf                                           2     1      1    2593
                                             13 COMMON     1     0      1
                                             16 BANK0      1     1      0
                       _readMsgBufID
                     _readRxTxStatus
 ---------------------------------------------------------------------------------
 (2) _readRxTxStatus                                       7     7      0     229
                                              2 COMMON     7     7      0
                 _mcp2515_readStatus
 ---------------------------------------------------------------------------------
 (2) _readMsgBufID                                         7     2      5    2211
                                              9 BANK0      7     2      5
                _mcp2515_read_canMsg
                     _readRxTxStatus (ARG)
 ---------------------------------------------------------------------------------
 (3) _mcp2515_read_canMsg                                 21    16      5    1432
                                              1 COMMON    12     7      5
                                              0 BANK0      9     9      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (1) _init_CS                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getCanId                                             4     0      4       0
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _checkReceive                                         3     3      0      92
                                              2 COMMON     3     3      0
                 _mcp2515_readStatus
 ---------------------------------------------------------------------------------
 (4) _mcp2515_readStatus                                   1     1      0      45
                                              1 COMMON     1     1      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (1) _begin                                                6     1      5   26305
                                              6 BANK0      6     1      5
                            _OpenSPI
                       _mcp2515_init
 ---------------------------------------------------------------------------------
 (2) _mcp2515_init                                         5     4      1   25846
                                              1 BANK0      5     4      1
                 _mcp2515_configRate
             _mcp2515_initCANBuffers
             _mcp2515_modifyRegister
                      _mcp2515_reset
            _mcp2515_setCANCTRL_Mode
                _mcp2515_setRegister
                            _setMode
 ---------------------------------------------------------------------------------
 (3) _setMode                                              1     1      0    9135
                                              0 BANK0      1     1      0
            _mcp2515_setCANCTRL_Mode
 ---------------------------------------------------------------------------------
 (4) _mcp2515_setCANCTRL_Mode                              2     2      0    9069
                                             12 COMMON     2     2      0
                            _getMode
             _mcp2515_modifyRegister
               _mcp2515_readRegister
             _mcp2515_requestNewMode
 ---------------------------------------------------------------------------------
 (5) _mcp2515_requestNewMode                               6     6      0    4502
                                              6 COMMON     6     6      0
             _mcp2515_modifyRegister
               _mcp2515_readRegister
 ---------------------------------------------------------------------------------
 (4) _mcp2515_modifyRegister                               3     1      2    4344
                                              3 COMMON     3     1      2
                           _WriteSPI
                           _txIfFlag (ARG)
 ---------------------------------------------------------------------------------
 (5) _getMode                                              0     0      0      67
               _mcp2515_readRegister
 ---------------------------------------------------------------------------------
 (3) _mcp2515_readRegister                                 2     2      0      67
                                              1 COMMON     2     2      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _mcp2515_reset                                        2     2      0      22
                                              1 COMMON     2     2      0
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _mcp2515_initCANBuffers                               4     4      0     944
                                              3 COMMON     4     4      0
                _mcp2515_setRegister
 ---------------------------------------------------------------------------------
 (3) _mcp2515_configRate                                   8     7      1    1230
                                              3 COMMON     8     7      1
                _mcp2515_setRegister
 ---------------------------------------------------------------------------------
 (3) _mcp2515_setRegister                                  2     1      1     826
                                              1 COMMON     2     1      1
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (5) _WriteSPI                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenSPI                                              5     3      2     240
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _begin
     _OpenSPI
     _mcp2515_init
       _mcp2515_configRate
         _mcp2515_setRegister
           _WriteSPI
       _mcp2515_initCANBuffers
         _mcp2515_setRegister
       _mcp2515_modifyRegister
         _WriteSPI
         _txIfFlag (ARG)
       _mcp2515_reset
         _WriteSPI
       _mcp2515_setCANCTRL_Mode
         _getMode
           _mcp2515_readRegister
             _ReadSPI
             _WriteSPI
         _mcp2515_modifyRegister
         _mcp2515_readRegister
         _mcp2515_requestNewMode
           _mcp2515_modifyRegister
           _mcp2515_readRegister
       _mcp2515_setRegister
       _setMode
         _mcp2515_setCANCTRL_Mode
   _checkReceive
     _mcp2515_readStatus
       _ReadSPI
       _WriteSPI
   _getCanId
   _init_CS
   _readMsgBuf
     _readMsgBufID
       _mcp2515_read_canMsg
         _ReadSPI
         _WriteSPI
       _readRxTxStatus (ARG)
         _mcp2515_readStatus
     _readRxTxStatus
   _sendMsgBuf
     _sendMsg
       _mcp2515_getNextFreeTXBuf
         _mcp2515_modifyRegister
         _mcp2515_readStatus
         _txCtrlReg
         _txIfFlag
         _txStatusPendingFlag
       _mcp2515_readRegister
       _mcp2515_write_canMsg
         _WriteSPI
         _mcp2515_id_to_buf
         _mcp2515_start_transmit
           _WriteSPI
           _txSidhToRTS
         _txSidhToTxLoad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3D      4D       5       96.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5B      12        0.0%
ABS                  0      0      5B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Jan 21 05:41:06 2024

                 __end_of_checkReceive 0E1E                                      pc 0002  
                                   _BF 04A0                                     l15 0009  
                                   l48 0EA0                                     l72 0EF7  
                                   l80 0F14                                     l88 0EBD  
                                   l96 0EDA                          begin@clockset 002A  
                                   fsr 0004                   ??_mcp2515_configRate 0074  
                   _mcp2515_readStatus 0DDD                                    l102 0E06  
                                  l105 0E84                                    l210 06D1  
                                  l116 0E4F                                    l124 0F52  
                                  l151 0D73                                    l127 0DF0  
                                  l225 0752                                    l209 06CA  
                                  l226 0759                                    l242 0FFF  
                                  l154 0151                                    l306 0F32  
                                  l410 0E1C                                    l227 0760  
                                  l163 0FBE                                    l155 012C  
                                  l411 0E1D                                    l236 07E5  
                                  l148 0DB6                                    l157 0160  
                                  l246 02E8                                    l254 01DB  
                                  l248 02E5                                    l600 03BF  
                                  l274 0251                                    l354 038E  
                                  l275 0258                                    l603 0460  
                                  l540 00E5                                    l188 0618  
                                  l372 00A7                                    l364 0E69  
                                  l541 00FE                                    l533 00BA  
                                  l285 05B5                                    l357 0361  
                                  l605 0458                                    l542 00EA  
                                  l286 05B8                                    l543 0103  
                                  l535 00C1                                    l367 0071  
                                  l536 00C8                                    l553 0DA4  
                                  l289 0DC9                                    l546 0D8A  
                                  l539 00E2                                    l555 0D9E  
                                  l387 0F82                                    l299 0053  
                                  l549 0D93                                    l590 0E35  
                                  l593 0D86                                    _CKE 04A6  
                                  _CKP 00A4                                    _RD0 0040  
                                  _SMP 04A7                                    fsr0 0004  
                                  _rtr 0063                                    indf 0000  
                  ?_mcp2515_readStatus 0070                    _mcp2515_read_canMsg 0471  
                                 l3001 05C4                                   l3011 05E7  
                                 l3003 05CB                                   l3021 060A  
                                 l3013 05EE                                   l3005 05D2  
                                 l3111 072F                                   l3031 0627  
                                 l3023 0611                                   l3015 05F5  
                                 l3007 05D9                                   l3121 0754  
                                 l3113 0736                                   l3041 0632  
                                 l3033 0629                                   l3025 061A  
                                 l3017 05FC                                   l3009 05E0  
                                 l3201 0FC5                                   l4001 03D1  
                                 l3123 075B                                   l3115 073D  
                                 l3107 06EE                                   l3043 0639  
                                 l3035 062C                                   l3027 061F  
                                 l3019 0603                                   l3211 0FDF  
                                 l4011 0407                                   l4003 03D4  
                                 l3141 0772                                   l3133 076B  
                                 l3125 0762                                   l3117 0744  
                                 l3109 0728                                   l3061 0699  
                                 l3053 0641                                   l3045 063A  
                                 l3037 062D                                   l3029 0626  
                                 l3213 0FE3                                   l3301 05A7  
                                 l3221 01DF                                   l4021 0438  
                                 l4013 040F                                   l4005 03EB  
                                 l3151 0779                                   l3135 076C  
                                 l3127 0767                                   l3119 074B  
                                 l3071 06BC                                   l3063 06A0  
                                 l3055 0684                                   l3047 063C  
                                 l3039 062F                                   l3215 0FE7  
                                 l3207 0FC6                                   l3303 05AF  
                                 l3311 001C                                   l3231 01F7  
                                 l3223 01E8                                   l4023 0439  
                                 l4015 041E                                   l4007 03FA  
                                 l3401 00CF                                   l3161 077E  
                                 l3153 077A                                   l3145 0775  
                                 l3137 076E                                   l3129 0768  
                                 l3081 06D9                                   l3073 06C3  
                                 l3065 06A7                                   l3057 068B  
                                 l3049 063F                                   l3217 0FEB  
                                 l3209 0FDB                                   l3321 0038  
                                 l3305 000B                                   l3233 0207  
                                 l3225 01ED                                   l4025 0447  
                                 l4017 0421                                   l4009 03FD  
                                 l3171 07CA                                   l3155 077C  
                                 l3147 0776                                   l3139 0771  
                                 l3091 06E4                                   l3083 06DB  
                                 l3075 06CC                                   l3067 06AE  
                                 l3059 0692                                   l3219 0FF1  
                                 l3323 0046                                   l3315 001E  
                                 l3307 0012                                   l3251 022F  
                                 l3243 0213                                   l3235 020A  
                                 l3227 01F0                                   l4019 042C  
                                 l3405 00EE                                   l3173 07E2  
                                 l3093 06E5                                   l3085 06DE  
                                 l3077 06D3                                   l3069 06B5  
                                 l3501 0F69                                   l3317 0020  
                                 l3309 0016                                   l3261 0252  
                                 l3253 0233                                   l3245 021D  
                                 l3237 0210                                   l3229 01F4  
                                 l3421 02F7                                   l3095 06E7  
                                 l3087 06DF                                   l3079 06D8  
                                 l3167 07B2                                   l3351 025C  
                                 l3263 0472                                   l3511 0F7B  
                                 l3503 0F6C                                   l3319 002B  
                                 l3327 0048                                   l3255 023F  
                                 l3247 0223                                   l3431 0319  
                                 l3423 02F9                                   l3415 02E9  
                                 l3097 06EA                                   l3089 06E1  
                                 l3169 07C5                                   l2801 0FA0  
                                 l3361 027E                                   l3353 0261  
                                 l3281 04C4                                   l3273 047C  
                                 l3265 0475                                   l3513 0F81  
                                 l3505 0F70                                   l3329 004C  
                                 l3257 0245                                   l3249 0229  
                                 l3441 0331                                   l3433 031F  
                                 l3425 02FF                                   l3417 02ED  
                                 l3179 07E4                                   l3099 06EB  
                                 l2803 0FAD                                   l3371 02A4  
                                 l3363 0289                                   l3355 026A  
                                 l3291 0584                                   l3283 04C7  
                                 l3275 0485                                   l3267 047B  
                                 l3507 0F74                                   l2811 0E86  
                                 l4251 0ECE                                   l3259 024B  
                                 l3451 0369                                   l3443 0347  
                                 l3435 0328                                   l3427 030A  
                                 l3419 02F5                                   l2725 0D95  
                                 l4261 0786                                   l2733 0D87  
                                 l2741 0E6E                                   l3381 02CB  
                                 l3373 02AB                                   l3357 026F  
                                 l3517 0003                                   l3293 058A  
                                 l3285 04CB                                   l3277 0489  
                                 l3509 0F77                                   l2821 0E8B  
                                 l2813 0E87                                   l4253 0EB1  
                                 l3461 038B                                   l3453 0373  
                                 l3445 034E                                   l3437 032F  
                                 l3429 0313                                   l2727 0D99  
                                 l4263 07BA                                   l3199 0FBF  
                                 l2735 0D90                                   l2743 0E7A  
                                 l2751 0F34                                   l3383 02D4  
                                 l3375 02B0                                   l3295 0593  
                                 l3287 057A                                   l3279 048F  
                                 l3471 0059                                   l4255 0E95  
                                 l4247 0F08                                   l3455 0376  
                                 l3447 0350                                   l4265 00D7  
                                 l3393 00A9                                   l4257 0649  
                                 l2745 0E80                                   l2753 0F37  
                                 l2809 0FAF                                   l3377 02B8  
                                 l3369 0299                                   l3553 0F15  
                                 l2921 0DDD                                   l3297 0595  
                                 l3289 057E                                   l3481 0086  
                                 l3473 005D                                   l2817 0E89  
                                 l2905 0EC6                                   l4249 0EEB  
                                 l3457 037B                                   l3449 0356  
                                 l3465 038D                                   l4267 00F6  
                                 l3395 00AF                                   l2915 0E37  
                                 l4259 06F6                                   l2747 0E83  
                                 l2739 0E6B                                   l2755 0F4F  
                                 l3379 02C2                                   l3555 0F2B  
                                 l2923 0DE0                                   l3563 0E07  
                                 l3299 05A3                                   l3483 008B  
                                 l3475 006D                                   l3491 0F53  
                                 l2827 0E8D                                   l2907 0ED9  
                                 l2763 0EDF                                   l2843 0EFC  
                                 l3459 0384                                   l3397 00B3  
                                 l2917 0E3A                                   l2941 0122  
                                 l2933 0105                                   l3389 02DA  
                                 l2925 0DE6                                   l3565 0E0D  
                                 l3485 00A2                                   l3477 0075  
                                 l3469 0057                                   l3493 0F5A  
                                 l3573 0E21                                   l2773 0EE3  
                                 l2757 0EDC                                   l2853 0F00  
                                 l2837 0EF9                                   l2919 0E4C  
                                 l2783 0D6C                                   l2791 0F90  
                                 l2951 0148                                   l2943 0136  
                                 l2935 010F                                   l2927 0DEC  
                                 l3567 0E13                                   l3487 00A6  
                                 l3495 0F5E                                   l2863 0EA2  
                                 l2775 0EF6                                   l2767 0EE1  
                                 l2759 0EDD                                   l2855 0F13  
                                 l2847 0EFE                                   l2839 0EFA  
                                 l3559 0E50                                   l2793 0F97  
                                 l2953 015A                                   l2945 0141  
                                 l2937 0115                                   l2929 0DEF  
                                 l3569 0E18                                   l3577 0D7C  
                                 l3497 0F61                                   l2881 0EBC  
                                 l2873 0EA7                                   l2865 0EA3  
                                 l2961 016B                                   l2795 0F9E  
                                 l2787 0F84                                   l2939 011D  
                                 l3499 0F65                                   l2891 0EC0  
                                 l2971 01A3                                   l2963 0176  
                                 l2981 0DF1                                   l2789 0F86  
                                 l2949 0143                                   l2869 0EA5  
                                 l2965 018B                                   l2973 01B3  
                                 l2957 0162                                   l2983 0DF4  
                                 l2991 0DAE                                   l2879 0EA9  
                                 l2895 0EC2                                   l2967 0190  
                                 l2959 0166                                   l2975 0DB8  
             ??_mcp2515_requestNewMode 0076                                   l2985 0DFA  
                                 l2993 0DB0                                   l2889 0EBF  
                                 l2969 01A0                                   l2977 0DBB  
                                 l2987 0DFD                                   l2899 0EC4  
                                 l2979 0DC6                                   l2997 05BA  
                                 l2989 0DA8                                   l2999 05BD  
                                 l3991 038F                                   l3993 0395  
                                 l3995 039B                                   l3997 03A9  
                                 l3999 03C2                                   u1100 0FAD  
                                 u1101 0FAC                                   u1110 010F  
                                 u1111 010E                                   u1120 0115  
                                 u1105 0FA9                                   u1121 0114  
                                 u1130 0122                                   u1210 0DAE  
                                 u1131 0121                                   u1211 0DAD  
                                 u1060 0D9D                                   u1220 07CA  
                                 u1140 0141                                   u1300 04CB  
                                 u1061 0D9C                                   u1221 07C9  
                                 u1141 0140                                   u1301 04CA  
                                 u1205 01CB                                   u1070 0DA4  
                                 u1230 0FF1                                   u1150 0148  
                                 u1310 04E4                                   u1071 0DA3  
                                 u1231 0FF0                                   u1151 0147  
                                 u1080 0D90                                   u1400 05B5  
                                 u1320 04EE                                   u1160 016B  
                                 u1240 01ED                                   u1081 0D8F  
                                 u1401 05B4                                   u1321 04EF  
                                 u1161 016A                                   u1241 01EC  
                                 u1090 0F9E                                   u1330 051E  
                                 u1322 04F4                                   u1410 001C  
                                 u1170 0184                                   u1250 0229  
                                 u2050 03BF                                   u1091 0F9D  
                                 u1323 04F5                                   u1315 04DF  
                                 u1411 001B                                   u1251 0228  
                                 u2051 03BE                                   u2107 03A3  
                                 u1500 00B9                                   u1340 0528  
                                 u1420 002B                                   u1260 024B  
                                 u2060 0407                                   u1501 00B6  
                                 u1341 0529                                   u1421 002A  
                                 u1261 024A                                   u2061 0406  
                                 u2117 03CA                                   u1350 0558  
                                 u1342 052E                                   u1430 0052  
                                 u1270 0251                                   u1510 02FF  
                                 u2070 042C                                   u2207 02E0  
                                 u1343 052F                                   u1335 0519  
                                 u1431 0051                                   u1175 017F  
                                 u1271 0250                                   u1511 02FE  
                                 u2071 042B                                   u2127 03F3  
                                 u1360 0562                                   u1280 048F  
                                 u1600 005D                                   u1520 031F  
                                 u2080 0438                                   u2217 0FB3  
                                 u1361 0563                                   u1281 048E  
                                 u1601 005C                                   u1185 0194  
                                 u1521 031E                                   u2137 0441  
                                 u2081 0437                                   u1370 0591  
                                 u1362 0568                                   u1610 0075  
                                 u1530 0328                                   u2090 046D  
                                 u2227 0E01                                   u1371 058F  
                                 u1363 0569                                   u1355 0553  
                                 u1611 0074                                   u1195 01AA  
                                 u1531 0327                                   u2091 046C  
                                 u2147 0452                                   u1460 026F  
                                 u1700 0F31                                   u1380 0592  
                                 u1620 008B                                   u1540 032F  
                                 u1461 026E                                   u1701 0F2F  
                                 u1621 008A                                   u1541 032E  
                                 u2157 0305                                   u1470 0298  
                                 u1710 0F32                                   u1390 05AF  
                                 u1630 0F5E                                   u1550 034E  
                                 u1471 0297                                   u1391 05AE  
                                 u1295 0494                                   u1631 0F5D  
                                 u2167 035C                                   u1551 034D  
                                 u2095 0469                                   u1480 02AB  
                                 u1720 0E13                                   u1640 0F69  
                                 u1560 0356                                   u1481 02AA  
                                 u2177 0275                                   u1721 0E12  
                                 u1641 0F68                                   u1561 0355  
                                 u1490 02D9                                   u1650 0F74  
                                 u1570 037B                                   u1491 02D8  
                                 u2187 0284                                   u1651 0F73  
                                 u1571 037A                                   u1580 0384  
                                 u2197 029F                                   u1581 0383  
                                 u1590 038B                                   u1591 038A  
                        begin@speedset 0026                                   _WCOL 00A7  
              ?_mcp2515_initCANBuffers 0070                                   _main 038F  
                                 btemp 007E                                   _stmp 0065  
                                 start 0000                   _mcp2515_readRegister 0E6A  
                 ??_mcp2515_readStatus 0071                   ?_mcp2515_read_canMsg 0071  
                      __end_of_ReadSPI 0D94                        __end_of_OpenSPI 0104  
                                ?_main 0070                                  _SSPEN 00A5  
                      __end_of_getMode 0D74                                  _begin 0F15  
                      __end_of_init_CS 000A                                  main@i 005A  
       __end_of_mcp2515_initCANBuffers 1000                        __end_of_sendMsg 038F  
                      __end_of_setMode 0DB7                    _mcp2515_setRegister 0E36  
                                pclath 000A            __end_of_txStatusPendingFlag 0EDB  
                                status 0003          mcp2515_modifyRegister@address 0075  
                                wtemp0 007E                  ?_mcp2515_readRegister 0070  
                  mcp2515_id_to_buf@id 0070                        __initialization 07E6  
                ??_mcp2515_read_canMsg 0020                           __end_of_main 0471  
                 ?_mcp2515_setRegister 0071                        readMsgBufID@buf 002D  
                      readMsgBufID@len 002C                                 ??_main 004B  
                      readMsgBufID@ext 002A                          ?_readMsgBufID 0029  
               mcp2515_write_canMsg@id 0020                                 ?_begin 0026  
              ?_mcp2515_start_transmit 0070                _mcp2515_setCANCTRL_Mode 0104  
                     __end_of_WriteSPI 0DA5          mcp2515_write_canMsg@load_addr 002A  
                               _TRISA5 042D                                 _TRISD0 0440  
                               _TRISC3 043B                                 _TRISC4 043C  
                               _TRISC5 043D                                 _TRISD3 0443  
                               _SSPCON 0014                                 _SSPBUF 0013  
                            ??_ReadSPI 0070             mcp2515_modifyRegister@data 0074  
                     __end_of_getCanId 0D87             mcp2515_modifyRegister@mask 0073  
                            ??_OpenSPI 0072                           _mcp2515_init 0259  
                               _can_id 005F                  ??_mcp2515_setRegister 0072  
                     ??_txSidhToTxLoad 0070                              ??_getMode 0073  
           ??_mcp2515_getNextFreeTXBuf 0076                       __end_of_txIfFlag 0EBE  
                       ??_readMsgBufID 007D                              ??_init_CS 0070  
                   readMsgBufID@rtrBit 002B                     readMsgBufID@status 002E  
                            ??_sendMsg 003B                              ??_setMode 007E  
       __end_of_mcp2515_start_transmit 0DCA            mcp2515_requestNewMode@Count 0078  
      mcp2515_getNextFreeTXBuf@txbuf_n 0077                           _checkReceive 0E07  
           mcp2515_configRate@canSpeed 0077                           ?_txSidhToRTS 0070  
                 mcp2515_id_to_buf@ext 0079                __end_of__initialization 07FC  
               ??_mcp2515_readRegister 0071               mcp2515_setRegister@value 0071  
                       __pcstackCOMMON 0070                           __pidataBANK0 0D74  
                        __end_of_begin 0F33                 _mcp2515_requestNewMode 0F83  
               mcp2515_configRate@cfg1 0078                 mcp2515_configRate@cfg2 0079  
               mcp2515_configRate@cfg3 007A                     txSidhToTxLoad@sidh 0072  
            ??_mcp2515_setCANCTRL_Mode 007C                                ??_begin 007E  
                           __pbssBANK0 005D                      mcp2515_init@clock 0021  
                      mcp2515_init@res 0025                             __pmaintext 038F  
              mcp2515_write_canMsg@dlc 002B            mcp2515_read_canMsg@pMsgSize 007B  
              mcp2515_write_canMsg@buf 0027                mcp2515_write_canMsg@len 0026  
              mcp2515_write_canMsg@ext 0024                            sendMsg@res1 003E  
                            ?_WriteSPI 0070                    mcp2515_readStatus@i 0071  
                      txSidhToRTS@sidh 0072                              ?_getCanId 0070  
                        sendMsgBuf@buf 0049                          sendMsgBuf@len 0048  
                        sendMsgBuf@ext 0046            mcp2515_read_canMsg@tbufdata 0077  
                        sendMsg@rtrBit 0037                                _SSPSTAT 0094  
                 txStatusPendingFlag@i 0072               ??_mcp2515_modifyRegister 0075  
                              _ReadSPI 0D87                   __end_of_readMsgBufID 00A8  
                              _OpenSPI 00A8                              ?_txIfFlag 0070  
      __end_of_mcp2515_setCANCTRL_Mode 0161                          setMode@opMode 0020  
                           _readMsgBuf 0E1E                          _mcp2515_reset 0DF1  
                           ??_WriteSPI 0070                                _getMode 0D6C  
     __end_of_mcp2515_getNextFreeTXBuf 0054                                __ptext1 0E50  
                              __ptext2 02E9                                __ptext3 01DC  
                              __ptext4 0EF8                                __ptext5 0DB7  
                              __ptext6 0EDB                                __ptext7 0161  
                              __ptext8 000A                                __ptext9 0EBE  
                              _mcpMode 005E                                _init_CS 0003  
                              _ext_flg 0064                                _sendMsg 02E9  
                              _setMode 0DA5                             ??_getCanId 0074  
         __end_of_mcp2515_write_canMsg 0259                                main@buf 004E  
                              main@len 005C                   end_of_initialization 07FC  
                           _sendMsgBuf 0E50                  mcp2515_read_canMsg@id 0071  
          __end_of_mcp2515_read_canMsg 05B9             mcp2515_write_canMsg@rtrBit 0025  
                    __end_of_txCtrlReg 0EA1                             ??_txIfFlag 0070  
                   _readRxTxStatus$305 0072                     _readRxTxStatus$306 0074  
                   _readRxTxStatus$307 0076                         ?_mcp2515_reset 0070  
                     WriteSPI@data_out 0070               mcp2515_initCANBuffers@a1 0073  
             mcp2515_initCANBuffers@a2 0074               mcp2515_initCANBuffers@a3 0075  
                    _mcp2515_id_to_buf 0161                              _PORTDbits 0008  
                   ?_mcp2515_id_to_buf 0070                    sendMsgBuf@wait_sent 004A  
                  ??_mcp2515_id_to_buf 0075                mcp2515_readRegister@ret 0072  
          __end_of_mcp2515_setRegister 0E50                ?_mcp2515_requestNewMode 0070  
            __end_of_mcp2515_id_to_buf 01DC                            ?_readMsgBuf 007D  
                     OpenSPI@smp_phase 0071  mcp2515_setCANCTRL_Mode@wakeIntEnabled 007D  
              mcp2515_configRate@clock 0073               ??_mcp2515_initCANBuffers 0073  
                 mcp2515_init@canSpeed 0024                    start_initialization 07E6  
            mcp2515_id_to_buf@tbufdata 0074          mcp2515_requestNewMode@newmode 007B  
                       readMsgBufID@id 0029                       OpenSPI@sync_mode 0074  
                       readMsgBufID@rc 002F                            ?_sendMsgBuf 0042  
        mcp2515_requestNewMode@statReg 007A                  mcp2515_write_canMsg@i 0031  
            ?_mcp2515_getNextFreeTXBuf 0070         __end_of_mcp2515_requestNewMode 0FBF  
                       _readRxTxStatus 0F53                        ??_mcp2515_reset 0071  
                           init_fetch0 0DCA                            __pdataBANK0 0065  
                 _mcp2515_write_canMsg 01DC                 _mcp2515_modifyRegister 0F33  
                         _readMsgBufID 0054                              ___latbits 0002  
                        __pcstackBANK0 0020                  mcp2515_configRate@set 0076  
               __end_of_readRxTxStatus 0F83                               ?_ReadSPI 0070  
                             ?_OpenSPI 0070                            _nReservedTx 005D  
                           sendMsg@buf 0039                             sendMsg@len 0038  
                           sendMsg@ext 0036                             sendMsg@res 003D  
                ?_mcp2515_write_canMsg 0020             __end_of_mcp2515_configRate 07E6  
                         sendMsgBuf@id 0042               ??_mcp2515_start_transmit 0073  
                             ?_getMode 0070               ?_mcp2515_setCANCTRL_Mode 0070  
                             ?_init_CS 0070   mcp2515_write_canMsg@buffer_sidh_addr 0030  
                             ?_sendMsg 0032                               ?_setMode 0070  
                  _txStatusPendingFlag 0EBE                        ?_readRxTxStatus 0070  
          mcp2515_readRegister@address 0071                   mcp2515_read_canMsg@i 007C  
       mcp2515_start_transmit@mcp_addr 0073             __end_of_mcp2515_readStatus 0DF1  
                           txCtrlReg@i 0072                   ?_txStatusPendingFlag 0070  
                        ?_mcp2515_init 0021                              _txCtrlReg 0E85  
              mcp2515_initCANBuffers@i 0076              mcp2515_getNextFreeTXBuf@i 0078  
  mcp2515_read_canMsg@buffer_load_addr 0076                         sendMsg@txbuf_n 003F  
                      OpenSPI@bus_mode 0070                              main@canId 0056  
             _mcp2515_write_canMsg$210 0028                          ?_checkReceive 0070  
                        ??_txSidhToRTS 0070                          readMsgBuf@buf 007D  
                        readMsgBuf@len 0030                 _mcp2515_initCANBuffers 0FBF  
           mcp2515_setRegister@address 0072                      readRxTxStatus@ret 0078  
                       ??_mcp2515_init 0022              mcp2515_read_canMsg@rtrBit 0073  
                ??_txStatusPendingFlag 0070                 ??_mcp2515_write_canMsg 007C  
                           ?_txCtrlReg 0070                       _checkReceive$320 0072  
                         ??_readMsgBuf 007E           mcp2515_write_canMsg@tbufdata 002C  
                             _WriteSPI 0D94         mcp2515_getNextFreeTXBuf@status 0076  
                             _getCanId 0D7C                         _txSidhToTxLoad 0EF8  
                       ??_checkReceive 0072                              sendMsg@id 0032  
                             __ptext10 0EA1                               __ptext11 0E85  
                             __ptext20 0F15                               __ptext12 0E1E  
                             __ptext21 0259                               __ptext13 0F53  
                             __ptext30 0FBF                               __ptext22 0DA5  
                             __ptext14 0054                               __ptext31 05B9  
                             __ptext23 0104                               __ptext15 0471  
                             __ptext32 0E36                               __ptext24 0F83  
                             __ptext16 0003                               __ptext33 0D94  
                             __ptext25 0F33                               __ptext17 0D7C  
                             __ptext34 00A8                               __ptext26 0D6C  
                             __ptext18 0E07                               __ptext27 0E6A  
                             __ptext19 0DDD                               __ptext28 0D87  
                             __ptext29 0DF1                           ??_sendMsgBuf 007D  
                            txIfFlag@i 0072                               begin@res 002B  
                   __end_of_readMsgBuf 0E36                    __end_of_txSidhToRTS 0EF8  
                             _txIfFlag 0EA1                ?_mcp2515_modifyRegister 0073  
       mcp2515_setCANCTRL_Mode@newmode 007C                     __end_of_sendMsgBuf 0E6A  
         __end_of_mcp2515_readRegister 0E85                 __end_of_txSidhToTxLoad 0F15  
                      checkReceive@res 0074                 mcp2515_read_canMsg@buf 0075  
               mcp2515_read_canMsg@len 0074                 mcp2515_read_canMsg@ext 0072  
                             init_ram0 0DCE                 _mcp2515_start_transmit 0DB7  
                     sendMsgBuf@rtrBit 0047                            ??_txCtrlReg 0070  
                __end_of_mcp2515_reset 0E07         __end_of_mcp2515_modifyRegister 0F53  
                     sendMsg@uiTimeOut 0040                        ?_txSidhToTxLoad 0070  
                     sendMsg@wait_sent 003A                   __end_of_mcp2515_init 02E9  
                   _mcp2515_configRate 05B9                       ??_readRxTxStatus 0072  
             _mcp2515_getNextFreeTXBuf 000A                            _txSidhToRTS 0EDB  
                  ?_mcp2515_configRate 0073                 mcp2515_id_to_buf@canid 007A  
