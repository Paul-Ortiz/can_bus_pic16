

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Jan 01 01:10:27 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48     0000                     
    49                           ; Generated 22/03/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F877A Definitions
    81                           ; 
    82                           ; SFR Addresses
    83     0000                     	;# 
    84     0001                     	;# 
    85     0002                     	;# 
    86     0003                     	;# 
    87     0004                     	;# 
    88     0005                     	;# 
    89     0006                     	;# 
    90     0007                     	;# 
    91     0008                     	;# 
    92     0009                     	;# 
    93     000A                     	;# 
    94     000B                     	;# 
    95     000C                     	;# 
    96     000D                     	;# 
    97     000E                     	;# 
    98     000E                     	;# 
    99     000F                     	;# 
   100     0010                     	;# 
   101     0011                     	;# 
   102     0012                     	;# 
   103     0013                     	;# 
   104     0014                     	;# 
   105     0015                     	;# 
   106     0015                     	;# 
   107     0016                     	;# 
   108     0017                     	;# 
   109     0018                     	;# 
   110     0019                     	;# 
   111     001A                     	;# 
   112     001B                     	;# 
   113     001B                     	;# 
   114     001C                     	;# 
   115     001D                     	;# 
   116     001E                     	;# 
   117     001F                     	;# 
   118     0081                     	;# 
   119     0085                     	;# 
   120     0086                     	;# 
   121     0087                     	;# 
   122     0088                     	;# 
   123     0089                     	;# 
   124     008C                     	;# 
   125     008D                     	;# 
   126     008E                     	;# 
   127     0091                     	;# 
   128     0092                     	;# 
   129     0093                     	;# 
   130     0094                     	;# 
   131     0098                     	;# 
   132     0099                     	;# 
   133     009C                     	;# 
   134     009D                     	;# 
   135     009E                     	;# 
   136     009F                     	;# 
   137     010C                     	;# 
   138     010D                     	;# 
   139     010E                     	;# 
   140     010F                     	;# 
   141     018C                     	;# 
   142     018D                     	;# 
   143     0000                     	;# 
   144     0001                     	;# 
   145     0002                     	;# 
   146     0003                     	;# 
   147     0004                     	;# 
   148     0005                     	;# 
   149     0006                     	;# 
   150     0007                     	;# 
   151     0008                     	;# 
   152     0009                     	;# 
   153     000A                     	;# 
   154     000B                     	;# 
   155     000C                     	;# 
   156     000D                     	;# 
   157     000E                     	;# 
   158     000E                     	;# 
   159     000F                     	;# 
   160     0010                     	;# 
   161     0011                     	;# 
   162     0012                     	;# 
   163     0013                     	;# 
   164     0014                     	;# 
   165     0015                     	;# 
   166     0015                     	;# 
   167     0016                     	;# 
   168     0017                     	;# 
   169     0018                     	;# 
   170     0019                     	;# 
   171     001A                     	;# 
   172     001B                     	;# 
   173     001B                     	;# 
   174     001C                     	;# 
   175     001D                     	;# 
   176     001E                     	;# 
   177     001F                     	;# 
   178     0081                     	;# 
   179     0085                     	;# 
   180     0086                     	;# 
   181     0087                     	;# 
   182     0088                     	;# 
   183     0089                     	;# 
   184     008C                     	;# 
   185     008D                     	;# 
   186     008E                     	;# 
   187     0091                     	;# 
   188     0092                     	;# 
   189     0093                     	;# 
   190     0094                     	;# 
   191     0098                     	;# 
   192     0099                     	;# 
   193     009C                     	;# 
   194     009D                     	;# 
   195     009E                     	;# 
   196     009F                     	;# 
   197     010C                     	;# 
   198     010D                     	;# 
   199     010E                     	;# 
   200     010F                     	;# 
   201     018C                     	;# 
   202     018D                     	;# 
   203     0000                     	;# 
   204     0001                     	;# 
   205     0002                     	;# 
   206     0003                     	;# 
   207     0004                     	;# 
   208     0005                     	;# 
   209     0006                     	;# 
   210     0007                     	;# 
   211     0008                     	;# 
   212     0009                     	;# 
   213     000A                     	;# 
   214     000B                     	;# 
   215     000C                     	;# 
   216     000D                     	;# 
   217     000E                     	;# 
   218     000E                     	;# 
   219     000F                     	;# 
   220     0010                     	;# 
   221     0011                     	;# 
   222     0012                     	;# 
   223     0013                     	;# 
   224     0014                     	;# 
   225     0015                     	;# 
   226     0015                     	;# 
   227     0016                     	;# 
   228     0017                     	;# 
   229     0018                     	;# 
   230     0019                     	;# 
   231     001A                     	;# 
   232     001B                     	;# 
   233     001B                     	;# 
   234     001C                     	;# 
   235     001D                     	;# 
   236     001E                     	;# 
   237     001F                     	;# 
   238     0081                     	;# 
   239     0085                     	;# 
   240     0086                     	;# 
   241     0087                     	;# 
   242     0088                     	;# 
   243     0089                     	;# 
   244     008C                     	;# 
   245     008D                     	;# 
   246     008E                     	;# 
   247     0091                     	;# 
   248     0092                     	;# 
   249     0093                     	;# 
   250     0094                     	;# 
   251     0098                     	;# 
   252     0099                     	;# 
   253     009C                     	;# 
   254     009D                     	;# 
   255     009E                     	;# 
   256     009F                     	;# 
   257     010C                     	;# 
   258     010D                     	;# 
   259     010E                     	;# 
   260     010F                     	;# 
   261     018C                     	;# 
   262     018D                     	;# 
   263     0000                     	;# 
   264     0001                     	;# 
   265     0002                     	;# 
   266     0003                     	;# 
   267     0004                     	;# 
   268     0005                     	;# 
   269     0006                     	;# 
   270     0007                     	;# 
   271     0008                     	;# 
   272     0009                     	;# 
   273     000A                     	;# 
   274     000B                     	;# 
   275     000C                     	;# 
   276     000D                     	;# 
   277     000E                     	;# 
   278     000E                     	;# 
   279     000F                     	;# 
   280     0010                     	;# 
   281     0011                     	;# 
   282     0012                     	;# 
   283     0013                     	;# 
   284     0014                     	;# 
   285     0015                     	;# 
   286     0015                     	;# 
   287     0016                     	;# 
   288     0017                     	;# 
   289     0018                     	;# 
   290     0019                     	;# 
   291     001A                     	;# 
   292     001B                     	;# 
   293     001B                     	;# 
   294     001C                     	;# 
   295     001D                     	;# 
   296     001E                     	;# 
   297     001F                     	;# 
   298     0081                     	;# 
   299     0085                     	;# 
   300     0086                     	;# 
   301     0087                     	;# 
   302     0088                     	;# 
   303     0089                     	;# 
   304     008C                     	;# 
   305     008D                     	;# 
   306     008E                     	;# 
   307     0091                     	;# 
   308     0092                     	;# 
   309     0093                     	;# 
   310     0094                     	;# 
   311     0098                     	;# 
   312     0099                     	;# 
   313     009C                     	;# 
   314     009D                     	;# 
   315     009E                     	;# 
   316     009F                     	;# 
   317     010C                     	;# 
   318     010D                     	;# 
   319     010E                     	;# 
   320     010F                     	;# 
   321     018C                     	;# 
   322     018D                     	;# 
   323     0000                     	;# 
   324     0001                     	;# 
   325     0002                     	;# 
   326     0003                     	;# 
   327     0004                     	;# 
   328     0005                     	;# 
   329     0006                     	;# 
   330     0007                     	;# 
   331     0008                     	;# 
   332     0009                     	;# 
   333     000A                     	;# 
   334     000B                     	;# 
   335     000C                     	;# 
   336     000D                     	;# 
   337     000E                     	;# 
   338     000E                     	;# 
   339     000F                     	;# 
   340     0010                     	;# 
   341     0011                     	;# 
   342     0012                     	;# 
   343     0013                     	;# 
   344     0014                     	;# 
   345     0015                     	;# 
   346     0015                     	;# 
   347     0016                     	;# 
   348     0017                     	;# 
   349     0018                     	;# 
   350     0019                     	;# 
   351     001A                     	;# 
   352     001B                     	;# 
   353     001B                     	;# 
   354     001C                     	;# 
   355     001D                     	;# 
   356     001E                     	;# 
   357     001F                     	;# 
   358     0081                     	;# 
   359     0085                     	;# 
   360     0086                     	;# 
   361     0087                     	;# 
   362     0088                     	;# 
   363     0089                     	;# 
   364     008C                     	;# 
   365     008D                     	;# 
   366     008E                     	;# 
   367     0091                     	;# 
   368     0092                     	;# 
   369     0093                     	;# 
   370     0094                     	;# 
   371     0098                     	;# 
   372     0099                     	;# 
   373     009C                     	;# 
   374     009D                     	;# 
   375     009E                     	;# 
   376     009F                     	;# 
   377     010C                     	;# 
   378     010D                     	;# 
   379     010E                     	;# 
   380     010F                     	;# 
   381     018C                     	;# 
   382     018D                     	;# 
   383                           
   384                           	psect	idataBANK0
   385     0DA2                     __pidataBANK0:
   386                           
   387                           ;initializer for _stmp
   388     0DA2  3401               	retlw	1
   389     0DA3  3401               	retlw	1
   390     0DA4  3402               	retlw	2
   391     0DA5  3403               	retlw	3
   392     0DA6  3400               	retlw	0
   393     0DA7  3405               	retlw	5
   394     0DA8  3406               	retlw	6
   395     0DA9  3407               	retlw	7
   396     0013                     _SSPBUF	set	19
   397     0014                     _SSPCON	set	20
   398     00A7                     _WCOL	set	167
   399     00A4                     _CKP	set	164
   400     00A5                     _SSPEN	set	165
   401     0043                     _RD3	set	67
   402     0040                     _RD0	set	64
   403     0094                     _SSPSTAT	set	148
   404     0088                     _TRISDbits	set	136
   405     04A0                     _BF	set	1184
   406     043C                     _TRISC4	set	1084
   407     043D                     _TRISC5	set	1085
   408     043B                     _TRISC3	set	1083
   409     042D                     _TRISA5	set	1069
   410     04A6                     _CKE	set	1190
   411     04A7                     _SMP	set	1191
   412     0440                     _TRISD0	set	1088
   413                           
   414                           	psect	cinit
   415     07E6                     start_initialization:	
   416                           ; #config settings
   417                           
   418     07E6                     __initialization:
   419                           
   420                           ; Initialize objects allocated to BANK0
   421     07E6  1383               	bcf	3,7	;select IRP bank0
   422     07E7  306D               	movlw	low (__pdataBANK0+8)
   423     07E8  00FD               	movwf	btemp+-1
   424     07E9  300D               	movlw	high __pidataBANK0
   425     07EA  00FE               	movwf	btemp
   426     07EB  30A2               	movlw	low __pidataBANK0
   427     07EC  00FF               	movwf	btemp+1
   428     07ED  3065               	movlw	low __pdataBANK0
   429     07EE  0084               	movwf	4
   430     07EF  120A  158A  25EF  120A  118A  	fcall	init_ram0
   431                           
   432                           ; Clear objects allocated to BANK0
   433     07F4  01DD               	clrf	__pbssBANK0& (0+127)
   434     07F5  01DE               	clrf	(__pbssBANK0+1)& (0+127)
   435     07F6  01DF               	clrf	(__pbssBANK0+2)& (0+127)
   436     07F7  01E0               	clrf	(__pbssBANK0+3)& (0+127)
   437     07F8  01E1               	clrf	(__pbssBANK0+4)& (0+127)
   438     07F9  01E2               	clrf	(__pbssBANK0+5)& (0+127)
   439     07FA  01E3               	clrf	(__pbssBANK0+6)& (0+127)
   440     07FB  01E4               	clrf	(__pbssBANK0+7)& (0+127)
   441     07FC                     end_of_initialization:	
   442                           ;End of C runtime variable initialization code
   443                           
   444     07FC                     __end_of__initialization:
   445     07FC  0183               	clrf	3
   446     07FD  120A  118A  2BB1   	ljmp	_main	;jump to C main() function
   447                           
   448                           	psect	bssBANK0
   449     005D                     __pbssBANK0:
   450     005D                     _nReservedTx:
   451     005D                     	ds	1
   452     005E                     _mcpMode:
   453     005E                     	ds	1
   454     005F                     _can_id:
   455     005F                     	ds	4
   456     0063                     _rtr:
   457     0063                     	ds	1
   458     0064                     _ext_flg:
   459     0064                     	ds	1
   460                           
   461                           	psect	dataBANK0
   462     0065                     __pdataBANK0:
   463     0065                     _stmp:
   464     0065                     	ds	8
   465                           
   466                           	psect	inittext
   467     0DEB                     init_fetch0:	
   468                           ;	Called with low address in FSR and high address in W
   469                           
   470     0DEB  087E               	movf	btemp,w
   471     0DEC  008A               	movwf	10
   472     0DED  087F               	movf	btemp+1,w
   473     0DEE  0082               	movwf	2
   474     0DEF                     init_ram0:	
   475                           ;Called with:
   476                           ;	high address of idata address in btemp 
   477                           ;	low address of idata address in btemp+1 
   478                           ;	low address of data in FSR
   479                           ;	high address + 1 of data in btemp-1
   480                           
   481     0DEF  120A  158A  25EB  120A  158A  	fcall	init_fetch0
   482     0DF4  0080               	movwf	0
   483     0DF5  0A84               	incf	4,f
   484     0DF6  0804               	movf	4,w
   485     0DF7  067D               	xorwf	btemp+-1,w
   486     0DF8  1903               	btfsc	3,2
   487     0DF9  3400               	retlw	0
   488     0DFA  0AFF               	incf	btemp+1,f
   489     0DFB  1903               	btfsc	3,2
   490     0DFC  0AFE               	incf	btemp,f
   491     0DFD  2DEF               	goto	init_ram0
   492                           
   493                           	psect	cstackCOMMON
   494     0070                     __pcstackCOMMON:
   495     0070                     ?_readRxTxStatus:
   496     0070                     ?_checkReceive:	
   497                           ; 1 bytes @ 0x0
   498                           
   499     0070                     ?_WriteSPI:	
   500                           ; 1 bytes @ 0x0
   501                           
   502     0070                     ??_WriteSPI:	
   503                           ; 1 bytes @ 0x0
   504                           
   505     0070                     ?_ReadSPI:	
   506                           ; 1 bytes @ 0x0
   507                           
   508     0070                     ??_ReadSPI:	
   509                           ; 1 bytes @ 0x0
   510                           
   511     0070                     ?_getMode:	
   512                           ; 1 bytes @ 0x0
   513                           
   514     0070                     ?_mcp2515_setCANCTRL_Mode:	
   515                           ; 1 bytes @ 0x0
   516                           
   517     0070                     ?_mcp2515_requestNewMode:	
   518                           ; 1 bytes @ 0x0
   519                           
   520     0070                     ?_mcp2515_start_transmit:	
   521                           ; 1 bytes @ 0x0
   522                           
   523     0070                     ?_OpenSPI:	
   524                           ; 1 bytes @ 0x0
   525                           
   526     0070                     ?_init_CS:	
   527                           ; 1 bytes @ 0x0
   528                           
   529     0070                     ??_init_CS:	
   530                           ; 1 bytes @ 0x0
   531                           
   532     0070                     ?_main:	
   533                           ; 1 bytes @ 0x0
   534                           
   535     0070                     ?_txCtrlReg:	
   536                           ; 1 bytes @ 0x0
   537                           
   538     0070                     ??_txCtrlReg:	
   539                           ; 1 bytes @ 0x0
   540                           
   541     0070                     ?_txSidhToRTS:	
   542                           ; 1 bytes @ 0x0
   543                           
   544     0070                     ??_txSidhToRTS:	
   545                           ; 1 bytes @ 0x0
   546                           
   547     0070                     ?_txSidhToTxLoad:	
   548                           ; 1 bytes @ 0x0
   549                           
   550     0070                     ??_txSidhToTxLoad:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0070                     ?_txIfFlag:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0070                     ??_txIfFlag:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     0070                     ?_txStatusPendingFlag:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0070                     ??_txStatusPendingFlag:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ?_mcp2515_reset:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     ?_mcp2515_readRegister:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ?_mcp2515_readStatus:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0070                     ?_setMode:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     0070                     ?_mcp2515_initCANBuffers:	
   578                           ; 1 bytes @ 0x0
   579                           
   580     0070                     ?_mcp2515_id_to_buf:	
   581                           ; 1 bytes @ 0x0
   582                           
   583     0070                     ?_mcp2515_getNextFreeTXBuf:	
   584                           ; 1 bytes @ 0x0
   585                           
   586     0070                     ?_getCanId:	
   587                           ; 1 bytes @ 0x0
   588                           
   589     0070                     OpenSPI@bus_mode:	
   590                           ; 4 bytes @ 0x0
   591                           
   592     0070                     WriteSPI@data_out:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0070                     mcp2515_id_to_buf@id:	
   596                           ; 1 bytes @ 0x0
   597                           
   598                           
   599                           ; 4 bytes @ 0x0
   600     0070                     	ds	1
   601     0071                     ??_mcp2515_reset:
   602     0071                     ??_mcp2515_readRegister:	
   603                           ; 1 bytes @ 0x1
   604                           
   605     0071                     ?_mcp2515_setRegister:	
   606                           ; 1 bytes @ 0x1
   607                           
   608     0071                     ??_mcp2515_readStatus:	
   609                           ; 1 bytes @ 0x1
   610                           
   611     0071                     ?_mcp2515_read_canMsg:	
   612                           ; 1 bytes @ 0x1
   613                           
   614     0071                     mcp2515_readRegister@address:	
   615                           ; 1 bytes @ 0x1
   616                           
   617     0071                     mcp2515_setRegister@value:	
   618                           ; 1 bytes @ 0x1
   619                           
   620     0071                     mcp2515_readStatus@i:	
   621                           ; 1 bytes @ 0x1
   622                           
   623     0071                     mcp2515_read_canMsg@id:	
   624                           ; 1 bytes @ 0x1
   625                           
   626     0071                     OpenSPI@smp_phase:	
   627                           ; 1 bytes @ 0x1
   628                           
   629                           
   630                           ; 1 bytes @ 0x1
   631     0071                     	ds	1
   632     0072                     ??_readRxTxStatus:
   633     0072                     ??_checkReceive:	
   634                           ; 1 bytes @ 0x2
   635                           
   636     0072                     ??_OpenSPI:	
   637                           ; 1 bytes @ 0x2
   638                           
   639     0072                     ??_mcp2515_setRegister:	
   640                           ; 1 bytes @ 0x2
   641                           
   642     0072                     txCtrlReg@i:	
   643                           ; 1 bytes @ 0x2
   644                           
   645     0072                     txSidhToRTS@sidh:	
   646                           ; 1 bytes @ 0x2
   647                           
   648     0072                     txSidhToTxLoad@sidh:	
   649                           ; 1 bytes @ 0x2
   650                           
   651     0072                     txIfFlag@i:	
   652                           ; 1 bytes @ 0x2
   653                           
   654     0072                     txStatusPendingFlag@i:	
   655                           ; 1 bytes @ 0x2
   656                           
   657     0072                     mcp2515_readRegister@ret:	
   658                           ; 1 bytes @ 0x2
   659                           
   660     0072                     mcp2515_setRegister@address:	
   661                           ; 1 bytes @ 0x2
   662                           
   663     0072                     mcp2515_read_canMsg@ext:	
   664                           ; 1 bytes @ 0x2
   665                           
   666     0072                     _readRxTxStatus$423:	
   667                           ; 1 bytes @ 0x2
   668                           
   669     0072                     _checkReceive$438:	
   670                           ; 2 bytes @ 0x2
   671                           
   672                           
   673                           ; 2 bytes @ 0x2
   674     0072                     	ds	1
   675     0073                     ??_getMode:
   676     0073                     ??_mcp2515_start_transmit:	
   677                           ; 1 bytes @ 0x3
   678                           
   679     0073                     ?_mcp2515_modifyRegister:	
   680                           ; 1 bytes @ 0x3
   681                           
   682     0073                     ?_mcp2515_configRate:	
   683                           ; 1 bytes @ 0x3
   684                           
   685     0073                     ??_mcp2515_initCANBuffers:	
   686                           ; 1 bytes @ 0x3
   687                           
   688     0073                     mcp2515_modifyRegister@mask:	
   689                           ; 1 bytes @ 0x3
   690                           
   691     0073                     mcp2515_configRate@clock:	
   692                           ; 1 bytes @ 0x3
   693                           
   694     0073                     mcp2515_initCANBuffers@a1:	
   695                           ; 1 bytes @ 0x3
   696                           
   697     0073                     mcp2515_read_canMsg@rtrBit:	
   698                           ; 1 bytes @ 0x3
   699                           
   700     0073                     mcp2515_start_transmit@mcp_addr:	
   701                           ; 1 bytes @ 0x3
   702                           
   703                           
   704                           ; 1 bytes @ 0x3
   705     0073                     	ds	1
   706     0074                     ??_getCanId:
   707     0074                     ??_mcp2515_configRate:	
   708                           ; 1 bytes @ 0x4
   709                           
   710     0074                     mcp2515_modifyRegister@data:	
   711                           ; 1 bytes @ 0x4
   712                           
   713     0074                     mcp2515_initCANBuffers@a2:	
   714                           ; 1 bytes @ 0x4
   715                           
   716     0074                     mcp2515_id_to_buf@tbufdata:	
   717                           ; 1 bytes @ 0x4
   718                           
   719     0074                     mcp2515_read_canMsg@len:	
   720                           ; 1 bytes @ 0x4
   721                           
   722     0074                     checkReceive@res:	
   723                           ; 1 bytes @ 0x4
   724                           
   725     0074                     OpenSPI@sync_mode:	
   726                           ; 1 bytes @ 0x4
   727                           
   728     0074                     _readRxTxStatus$424:	
   729                           ; 1 bytes @ 0x4
   730                           
   731                           
   732                           ; 2 bytes @ 0x4
   733     0074                     	ds	1
   734     0075                     ??_mcp2515_modifyRegister:
   735     0075                     ??_mcp2515_id_to_buf:	
   736                           ; 1 bytes @ 0x5
   737                           
   738     0075                     mcp2515_modifyRegister@address:	
   739                           ; 1 bytes @ 0x5
   740                           
   741     0075                     mcp2515_initCANBuffers@a3:	
   742                           ; 1 bytes @ 0x5
   743                           
   744     0075                     mcp2515_read_canMsg@buf:	
   745                           ; 1 bytes @ 0x5
   746                           
   747                           
   748                           ; 1 bytes @ 0x5
   749     0075                     	ds	1
   750     0076                     ??_mcp2515_requestNewMode:
   751     0076                     ??_mcp2515_getNextFreeTXBuf:	
   752                           ; 1 bytes @ 0x6
   753                           
   754     0076                     mcp2515_configRate@set:	
   755                           ; 1 bytes @ 0x6
   756                           
   757     0076                     mcp2515_initCANBuffers@i:	
   758                           ; 1 bytes @ 0x6
   759                           
   760     0076                     mcp2515_read_canMsg@buffer_load_addr:	
   761                           ; 1 bytes @ 0x6
   762                           
   763     0076                     mcp2515_getNextFreeTXBuf@status:	
   764                           ; 1 bytes @ 0x6
   765                           
   766     0076                     _readRxTxStatus$425:	
   767                           ; 1 bytes @ 0x6
   768                           
   769                           
   770                           ; 2 bytes @ 0x6
   771     0076                     	ds	1
   772     0077                     mcp2515_configRate@canSpeed:
   773     0077                     mcp2515_getNextFreeTXBuf@txbuf_n:	
   774                           ; 1 bytes @ 0x7
   775                           
   776     0077                     mcp2515_requestNewMode@Count:	
   777                           ; 1 bytes @ 0x7
   778                           
   779     0077                     mcp2515_read_canMsg@tbufdata:	
   780                           ; 2 bytes @ 0x7
   781                           
   782                           
   783                           ; 4 bytes @ 0x7
   784     0077                     	ds	1
   785     0078                     mcp2515_configRate@cfg1:
   786     0078                     mcp2515_getNextFreeTXBuf@i:	
   787                           ; 1 bytes @ 0x8
   788                           
   789     0078                     readRxTxStatus@ret:	
   790                           ; 1 bytes @ 0x8
   791                           
   792                           
   793                           ; 1 bytes @ 0x8
   794     0078                     	ds	1
   795     0079                     mcp2515_requestNewMode@statReg:
   796     0079                     mcp2515_configRate@cfg2:	
   797                           ; 1 bytes @ 0x9
   798                           
   799     0079                     mcp2515_id_to_buf@ext:	
   800                           ; 1 bytes @ 0x9
   801                           
   802                           
   803                           ; 1 bytes @ 0x9
   804     0079                     	ds	1
   805     007A                     mcp2515_requestNewMode@newmode:
   806     007A                     mcp2515_configRate@cfg3:	
   807                           ; 1 bytes @ 0xA
   808                           
   809     007A                     mcp2515_id_to_buf@canid:	
   810                           ; 1 bytes @ 0xA
   811                           
   812                           
   813                           ; 2 bytes @ 0xA
   814     007A                     	ds	1
   815     007B                     ??_mcp2515_setCANCTRL_Mode:
   816     007B                     mcp2515_setCANCTRL_Mode@newmode:	
   817                           ; 1 bytes @ 0xB
   818                           
   819     007B                     mcp2515_read_canMsg@pMsgSize:	
   820                           ; 1 bytes @ 0xB
   821                           
   822                           
   823                           ; 1 bytes @ 0xB
   824     007B                     	ds	1
   825     007C                     ??_mcp2515_write_canMsg:
   826     007C                     mcp2515_setCANCTRL_Mode@wakeIntEnabled:	
   827                           ; 1 bytes @ 0xC
   828                           
   829     007C                     mcp2515_read_canMsg@i:	
   830                           ; 1 bytes @ 0xC
   831                           
   832                           
   833                           ; 1 bytes @ 0xC
   834     007C                     	ds	1
   835     007D                     ??_readMsgBufID:
   836     007D                     ??_sendMsgBuf:	
   837                           ; 1 bytes @ 0xD
   838                           
   839     007D                     ?_readMsgBuf:	
   840                           ; 1 bytes @ 0xD
   841                           
   842     007D                     ??_setMode:	
   843                           ; 1 bytes @ 0xD
   844                           
   845     007D                     readMsgBuf@buf:	
   846                           ; 1 bytes @ 0xD
   847                           
   848     007D                     setMode@opMode:	
   849                           ; 1 bytes @ 0xD
   850                           
   851                           
   852                           ; 1 bytes @ 0xD
   853     007D                     	ds	1
   854     007E                     ??_begin:
   855     007E                     ??_readMsgBuf:	
   856                           ; 1 bytes @ 0xE
   857                           
   858                           
   859                           	psect	cstackBANK0
   860     0020                     __pcstackBANK0:	
   861                           ; 1 bytes @ 0xE
   862                           
   863     0020                     ?_mcp2515_init:
   864     0020                     ?_mcp2515_write_canMsg:	
   865                           ; 1 bytes @ 0x0
   866                           
   867     0020                     ??_mcp2515_read_canMsg:	
   868                           ; 1 bytes @ 0x0
   869                           
   870     0020                     mcp2515_init@clock:	
   871                           ; 1 bytes @ 0x0
   872                           
   873     0020                     mcp2515_write_canMsg@id:	
   874                           ; 1 bytes @ 0x0
   875                           
   876                           
   877                           ; 4 bytes @ 0x0
   878     0020                     	ds	1
   879     0021                     ??_mcp2515_init:
   880                           
   881                           ; 1 bytes @ 0x1
   882     0021                     	ds	2
   883     0023                     mcp2515_init@canSpeed:
   884                           
   885                           ; 1 bytes @ 0x3
   886     0023                     	ds	1
   887     0024                     mcp2515_init@res:
   888     0024                     mcp2515_write_canMsg@ext:	
   889                           ; 1 bytes @ 0x4
   890                           
   891                           
   892                           ; 1 bytes @ 0x4
   893     0024                     	ds	1
   894     0025                     ?_begin:
   895     0025                     mcp2515_write_canMsg@rtrBit:	
   896                           ; 1 bytes @ 0x5
   897                           
   898     0025                     begin@speedset:	
   899                           ; 1 bytes @ 0x5
   900                           
   901                           
   902                           ; 4 bytes @ 0x5
   903     0025                     	ds	1
   904     0026                     mcp2515_write_canMsg@len:
   905                           
   906                           ; 1 bytes @ 0x6
   907     0026                     	ds	1
   908     0027                     mcp2515_write_canMsg@buf:
   909                           
   910                           ; 1 bytes @ 0x7
   911     0027                     	ds	1
   912     0028                     _mcp2515_write_canMsg$328:
   913                           
   914                           ; 2 bytes @ 0x8
   915     0028                     	ds	1
   916     0029                     ?_readMsgBufID:
   917     0029                     begin@clockset:	
   918                           ; 1 bytes @ 0x9
   919                           
   920     0029                     readMsgBufID@id:	
   921                           ; 1 bytes @ 0x9
   922                           
   923                           
   924                           ; 1 bytes @ 0x9
   925     0029                     	ds	1
   926     002A                     mcp2515_write_canMsg@load_addr:
   927     002A                     begin@res:	
   928                           ; 1 bytes @ 0xA
   929                           
   930     002A                     readMsgBufID@ext:	
   931                           ; 1 bytes @ 0xA
   932                           
   933                           
   934                           ; 1 bytes @ 0xA
   935     002A                     	ds	1
   936     002B                     mcp2515_write_canMsg@dlc:
   937     002B                     readMsgBufID@rtrBit:	
   938                           ; 1 bytes @ 0xB
   939                           
   940                           
   941                           ; 1 bytes @ 0xB
   942     002B                     	ds	1
   943     002C                     readMsgBufID@len:
   944     002C                     mcp2515_write_canMsg@tbufdata:	
   945                           ; 1 bytes @ 0xC
   946                           
   947                           
   948                           ; 4 bytes @ 0xC
   949     002C                     	ds	1
   950     002D                     readMsgBufID@buf:
   951                           
   952                           ; 1 bytes @ 0xD
   953     002D                     	ds	1
   954     002E                     readMsgBufID@status:
   955                           
   956                           ; 1 bytes @ 0xE
   957     002E                     	ds	1
   958     002F                     readMsgBufID@rc:
   959                           
   960                           ; 1 bytes @ 0xF
   961     002F                     	ds	1
   962     0030                     readMsgBuf@len:
   963     0030                     mcp2515_write_canMsg@buffer_sidh_addr:	
   964                           ; 1 bytes @ 0x10
   965                           
   966                           
   967                           ; 1 bytes @ 0x10
   968     0030                     	ds	1
   969     0031                     mcp2515_write_canMsg@i:
   970                           
   971                           ; 1 bytes @ 0x11
   972     0031                     	ds	1
   973     0032                     ?_sendMsg:
   974     0032                     sendMsg@id:	
   975                           ; 1 bytes @ 0x12
   976                           
   977                           
   978                           ; 4 bytes @ 0x12
   979     0032                     	ds	4
   980     0036                     sendMsg@ext:
   981                           
   982                           ; 1 bytes @ 0x16
   983     0036                     	ds	1
   984     0037                     sendMsg@rtrBit:
   985                           
   986                           ; 1 bytes @ 0x17
   987     0037                     	ds	1
   988     0038                     sendMsg@len:
   989                           
   990                           ; 1 bytes @ 0x18
   991     0038                     	ds	1
   992     0039                     sendMsg@buf:
   993                           
   994                           ; 1 bytes @ 0x19
   995     0039                     	ds	1
   996     003A                     sendMsg@wait_sent:
   997                           
   998                           ; 1 bytes @ 0x1A
   999     003A                     	ds	1
  1000     003B                     ??_sendMsg:
  1001                           
  1002                           ; 1 bytes @ 0x1B
  1003     003B                     	ds	2
  1004     003D                     sendMsg@res:
  1005                           
  1006                           ; 1 bytes @ 0x1D
  1007     003D                     	ds	1
  1008     003E                     sendMsg@res1:
  1009                           
  1010                           ; 1 bytes @ 0x1E
  1011     003E                     	ds	1
  1012     003F                     sendMsg@txbuf_n:
  1013                           
  1014                           ; 1 bytes @ 0x1F
  1015     003F                     	ds	1
  1016     0040                     sendMsg@uiTimeOut:
  1017                           
  1018                           ; 2 bytes @ 0x20
  1019     0040                     	ds	2
  1020     0042                     ?_sendMsgBuf:
  1021     0042                     sendMsgBuf@id:	
  1022                           ; 1 bytes @ 0x22
  1023                           
  1024                           
  1025                           ; 4 bytes @ 0x22
  1026     0042                     	ds	4
  1027     0046                     sendMsgBuf@ext:
  1028                           
  1029                           ; 1 bytes @ 0x26
  1030     0046                     	ds	1
  1031     0047                     sendMsgBuf@rtrBit:
  1032                           
  1033                           ; 1 bytes @ 0x27
  1034     0047                     	ds	1
  1035     0048                     sendMsgBuf@len:
  1036                           
  1037                           ; 1 bytes @ 0x28
  1038     0048                     	ds	1
  1039     0049                     sendMsgBuf@buf:
  1040                           
  1041                           ; 1 bytes @ 0x29
  1042     0049                     	ds	1
  1043     004A                     sendMsgBuf@wait_sent:
  1044                           
  1045                           ; 1 bytes @ 0x2A
  1046     004A                     	ds	1
  1047     004B                     ??_main:
  1048                           
  1049                           ; 1 bytes @ 0x2B
  1050     004B                     	ds	3
  1051     004E                     main@buf:
  1052                           
  1053                           ; 8 bytes @ 0x2E
  1054     004E                     	ds	8
  1055     0056                     main@canId:
  1056                           
  1057                           ; 4 bytes @ 0x36
  1058     0056                     	ds	4
  1059     005A                     main@i:
  1060                           
  1061                           ; 2 bytes @ 0x3A
  1062     005A                     	ds	2
  1063     005C                     main@len:
  1064                           
  1065                           ; 1 bytes @ 0x3C
  1066     005C                     	ds	1
  1067                           
  1068                           	psect	maintext
  1069     03B1                     __pmaintext:	
  1070 ;;
  1071 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1072 ;;
  1073 ;; *************** function _main *****************
  1074 ;; Defined at:
  1075 ;;		line 29 in file "main.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;  i               2   58[BANK0 ] int 
  1080 ;;  canId           4   54[BANK0 ] unsigned long 
  1081 ;;  buf             8   46[BANK0 ] unsigned char [8]
  1082 ;;  len             1   60[BANK0 ] unsigned char 
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : B00/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1092 ;;      Params:         0       0       0       0       0
  1093 ;;      Locals:         0      15       0       0       0
  1094 ;;      Temps:          0       3       0       0       0
  1095 ;;      Totals:         0      18       0       0       0
  1096 ;;Total ram usage:       18 bytes
  1097 ;; Hardware stack levels required when called: 7
  1098 ;; This function calls:
  1099 ;;		_begin
  1100 ;;		_checkReceive
  1101 ;;		_getCanId
  1102 ;;		_init_CS
  1103 ;;		_readMsgBuf
  1104 ;;		_sendMsgBuf
  1105 ;; This function is called by:
  1106 ;;		Startup code after reset
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110     03B1                     _main:	
  1111                           ;psect for function _main
  1112                           
  1113     03B1                     l3577:	
  1114                           ;incstack = 0
  1115                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1116                           
  1117                           
  1118                           ;main.c: 32: 
  1119     03B1  1683               	bsf	3,5	;RP0=1, select bank1
  1120     03B2  1303               	bcf	3,6	;RP1=0, select bank1
  1121     03B3  1188               	bcf	8,3	;volatile
  1122                           
  1123                           ;main.c: 34: 
  1124     03B4  1283               	bcf	3,5	;RP0=0, select bank0
  1125     03B5  1303               	bcf	3,6	;RP1=0, select bank0
  1126     03B6  1188               	bcf	8,3	;volatile
  1127     03B7                     l3579:
  1128                           
  1129                           ;main.c: 36:         unsigned char buf[8];
  1130     03B7  120A  158A  2593  120A  118A  	fcall	_init_CS
  1131                           
  1132                           ;main.c: 38:         if ((3) == checkReceive()) {
  1133     03BC  2BC7               	goto	l3583
  1134     03BD                     l3581:
  1135                           
  1136                           ;main.c: 40: 
  1137     03BD  3082               	movlw	130
  1138     03BE  1283               	bcf	3,5	;RP0=0, select bank0
  1139     03BF  1303               	bcf	3,6	;RP1=0, select bank0
  1140     03C0  00CC               	movwf	??_main+1
  1141     03C1  30DD               	movlw	221
  1142     03C2  00CB               	movwf	??_main
  1143     03C3                     u2107:
  1144     03C3  0BCB               	decfsz	??_main,f
  1145     03C4  2BC3               	goto	u2107
  1146     03C5  0BCC               	decfsz	??_main+1,f
  1147     03C6  2BC3               	goto	u2107
  1148     03C7                     l3583:
  1149                           
  1150                           ;main.c: 38:         if ((3) == checkReceive()) {
  1151     03C7  3000               	movlw	0
  1152     03C8  1283               	bcf	3,5	;RP0=0, select bank0
  1153     03C9  1303               	bcf	3,6	;RP1=0, select bank0
  1154     03CA  00A8               	movwf	begin@speedset+3
  1155     03CB  3000               	movlw	0
  1156     03CC  00A7               	movwf	begin@speedset+2
  1157     03CD  3000               	movlw	0
  1158     03CE  00A6               	movwf	begin@speedset+1
  1159     03CF  3010               	movlw	16
  1160     03D0  00A5               	movwf	begin@speedset
  1161     03D1  3003               	movlw	3
  1162     03D2  00A9               	movwf	begin@clockset
  1163     03D3  120A  158A  2736  120A  118A  	fcall	_begin
  1164     03D8  3A00               	xorlw	0
  1165     03D9  1D03               	skipz
  1166     03DA  2BDC               	goto	u1731
  1167     03DB  2BDD               	goto	u1730
  1168     03DC                     u1731:
  1169     03DC  2BBD               	goto	l3581
  1170     03DD                     u1730:
  1171     03DD                     l3585:
  1172                           
  1173                           ;main.c: 46:                     RD3 =1;
  1174     03DD  3000               	movlw	0
  1175     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  1176     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  1177     03E0  00C5               	movwf	sendMsgBuf@id+3
  1178     03E1  3000               	movlw	0
  1179     03E2  00C4               	movwf	sendMsgBuf@id+2
  1180     03E3  3000               	movlw	0
  1181     03E4  00C3               	movwf	sendMsgBuf@id+1
  1182     03E5  3004               	movlw	4
  1183     03E6  00C2               	movwf	sendMsgBuf@id
  1184     03E7  01C6               	clrf	sendMsgBuf@ext
  1185     03E8  01C7               	clrf	sendMsgBuf@rtrBit
  1186     03E9  3008               	movlw	8
  1187     03EA  00C8               	movwf	sendMsgBuf@len
  1188     03EB  3065               	movlw	(low (_stmp| 0))& (0+255)
  1189     03EC  00C9               	movwf	sendMsgBuf@buf
  1190     03ED  01CA               	clrf	sendMsgBuf@wait_sent
  1191     03EE  0ACA               	incf	sendMsgBuf@wait_sent,f
  1192     03EF  120A  158A  2671  120A  118A  	fcall	_sendMsgBuf
  1193     03F4                     l3587:
  1194                           
  1195                           ;main.c: 47:                     _delay((unsigned long)((100)*(4000000/4000.0)));
  1196     03F4  3006               	movlw	6
  1197     03F5  1283               	bcf	3,5	;RP0=0, select bank0
  1198     03F6  1303               	bcf	3,6	;RP1=0, select bank0
  1199     03F7  00CD               	movwf	??_main+2
  1200     03F8  3013               	movlw	19
  1201     03F9  00CC               	movwf	??_main+1
  1202     03FA  30AD               	movlw	173
  1203     03FB  00CB               	movwf	??_main
  1204     03FC                     u2117:
  1205     03FC  0BCB               	decfsz	??_main,f
  1206     03FD  2BFC               	goto	u2117
  1207     03FE  0BCC               	decfsz	??_main+1,f
  1208     03FF  2BFC               	goto	u2117
  1209     0400  0BCD               	decfsz	??_main+2,f
  1210     0401  2BFC               	goto	u2117
  1211     0402                     l3589:
  1212                           
  1213                           ;main.c: 52:             }
  1214     0402  1283               	bcf	3,5	;RP0=0, select bank0
  1215     0403  1303               	bcf	3,6	;RP1=0, select bank0
  1216     0404  01DC               	clrf	main@len
  1217     0405                     l3591:
  1218                           
  1219                           ;main.c: 53:         };main.c: 55:     }
  1220     0405  120A  158A  2628  120A  118A  	fcall	_checkReceive
  1221     040A  3A03               	xorlw	3
  1222     040B  1D03               	skipz
  1223     040C  2C0E               	goto	u1741
  1224     040D  2C0F               	goto	u1740
  1225     040E                     u1741:
  1226     040E  2BDD               	goto	l3585
  1227     040F                     u1740:
  1228     040F                     l3593:
  1229                           
  1230                           ;main.c: 56:     return;
  1231     040F  304E               	movlw	(low (main@buf| 0))& (0+255)
  1232     0410  00FD               	movwf	readMsgBuf@buf
  1233     0411  305C               	movlw	(low (main@len| 0))& (0+255)
  1234     0412  120A  158A  263F  120A  118A  	fcall	_readMsgBuf
  1235     0417                     l3595:
  1236     0417  120A  158A  25AA  120A  118A  	fcall	_getCanId
  1237     041C  0873               	movf	?_getCanId+3,w
  1238     041D  1283               	bcf	3,5	;RP0=0, select bank0
  1239     041E  1303               	bcf	3,6	;RP1=0, select bank0
  1240     041F  00D9               	movwf	main@canId+3
  1241     0420  0872               	movf	?_getCanId+2,w
  1242     0421  00D8               	movwf	main@canId+2
  1243     0422  0871               	movf	?_getCanId+1,w
  1244     0423  00D7               	movwf	main@canId+1
  1245     0424  0870               	movf	?_getCanId,w
  1246     0425  00D6               	movwf	main@canId
  1247     0426                     l3597:
  1248     0426  01DA               	clrf	main@i
  1249     0427  01DB               	clrf	main@i+1
  1250     0428  2C60               	goto	l61
  1251     0429                     l3599:
  1252     0429  3005               	movlw	5
  1253     042A  1283               	bcf	3,5	;RP0=0, select bank0
  1254     042B  1303               	bcf	3,6	;RP1=0, select bank0
  1255     042C  0656               	xorwf	main@canId,w
  1256     042D  0457               	iorwf	main@canId+1,w
  1257     042E  0458               	iorwf	main@canId+2,w
  1258     042F  0459               	iorwf	main@canId+3,w
  1259     0430  1D03               	btfss	3,2
  1260     0431  2C33               	goto	u1751
  1261     0432  2C34               	goto	u1750
  1262     0433                     u1751:
  1263     0433  2C58               	goto	l63
  1264     0434                     u1750:
  1265     0434                     l3601:
  1266     0434  1283               	bcf	3,5	;RP0=0, select bank0
  1267     0435  1303               	bcf	3,6	;RP1=0, select bank0
  1268     0436  085A               	movf	main@i,w
  1269     0437  3E4E               	addlw	(low (main@buf| 0))& (0+255)
  1270     0438  0084               	movwf	4
  1271     0439  3072               	movlw	114
  1272     043A  1383               	bcf	3,7	;select IRP bank0
  1273     043B  0600               	xorwf	0,w
  1274     043C  1D03               	btfss	3,2
  1275     043D  2C3F               	goto	u1761
  1276     043E  2C40               	goto	u1760
  1277     043F                     u1761:
  1278     043F  2C58               	goto	l63
  1279     0440                     u1760:
  1280     0440                     l3603:
  1281     0440  1588               	bsf	8,3	;volatile
  1282     0441                     l3605:
  1283     0441  3082               	movlw	130
  1284     0442  1283               	bcf	3,5	;RP0=0, select bank0
  1285     0443  1303               	bcf	3,6	;RP1=0, select bank0
  1286     0444  00CC               	movwf	??_main+1
  1287     0445  30DD               	movlw	221
  1288     0446  00CB               	movwf	??_main
  1289     0447                     u2127:
  1290     0447  0BCB               	decfsz	??_main,f
  1291     0448  2C47               	goto	u2127
  1292     0449  0BCC               	decfsz	??_main+1,f
  1293     044A  2C47               	goto	u2127
  1294     044B                     l3607:
  1295     044B  1283               	bcf	3,5	;RP0=0, select bank0
  1296     044C  1303               	bcf	3,6	;RP1=0, select bank0
  1297     044D  1188               	bcf	8,3	;volatile
  1298     044E  3082               	movlw	130
  1299     044F  1283               	bcf	3,5	;RP0=0, select bank0
  1300     0450  1303               	bcf	3,6	;RP1=0, select bank0
  1301     0451  00CC               	movwf	??_main+1
  1302     0452  30DD               	movlw	221
  1303     0453  00CB               	movwf	??_main
  1304     0454                     u2137:
  1305     0454  0BCB               	decfsz	??_main,f
  1306     0455  2C54               	goto	u2137
  1307     0456  0BCC               	decfsz	??_main+1,f
  1308     0457  2C54               	goto	u2137
  1309     0458                     l63:
  1310     0458  3001               	movlw	1
  1311     0459  1283               	bcf	3,5	;RP0=0, select bank0
  1312     045A  1303               	bcf	3,6	;RP1=0, select bank0
  1313     045B  07DA               	addwf	main@i,f
  1314     045C  1803               	skipnc
  1315     045D  0ADB               	incf	main@i+1,f
  1316     045E  3000               	movlw	0
  1317     045F  07DB               	addwf	main@i+1,f
  1318     0460                     l61:
  1319     0460  085B               	movf	main@i+1,w
  1320     0461  3A80               	xorlw	128
  1321     0462  00CB               	movwf	??_main
  1322     0463  3080               	movlw	128
  1323     0464  024B               	subwf	??_main,w
  1324     0465  1D03               	skipz
  1325     0466  2C69               	goto	u1775
  1326     0467  085C               	movf	main@len,w
  1327     0468  025A               	subwf	main@i,w
  1328     0469                     u1775:
  1329     0469  1C03               	skipc
  1330     046A  2C6C               	goto	u1771
  1331     046B  2C6D               	goto	u1770
  1332     046C                     u1771:
  1333     046C  2C29               	goto	l3599
  1334     046D                     u1770:
  1335     046D  2BDD               	goto	l3585
  1336     046E  120A  118A  2800   	ljmp	start
  1337     0471                     __end_of_main:
  1338                           
  1339                           	psect	text1
  1340     0E71                     __ptext1:	
  1341 ;; *************** function _sendMsgBuf *****************
  1342 ;; Defined at:
  1343 ;;		line 1276 in file "mcp2515_can.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;  id              4   34[BANK0 ] unsigned long 
  1346 ;;  ext             1   38[BANK0 ] unsigned char 
  1347 ;;  rtrBit          1   39[BANK0 ] unsigned char 
  1348 ;;  len             1   40[BANK0 ] unsigned char 
  1349 ;;  buf             1   41[BANK0 ] PTR const unsigned char 
  1350 ;;		 -> stmp(8), 
  1351 ;;  wait_sent       1   42[BANK0 ] unsigned char 
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;		None
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      unsigned char 
  1356 ;; Registers used:
  1357 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1363 ;;      Params:         0       9       0       0       0
  1364 ;;      Locals:         0       0       0       0       0
  1365 ;;      Temps:          0       0       0       0       0
  1366 ;;      Totals:         0       9       0       0       0
  1367 ;;Total ram usage:        9 bytes
  1368 ;; Hardware stack levels used: 1
  1369 ;; Hardware stack levels required when called: 4
  1370 ;; This function calls:
  1371 ;;		_sendMsg
  1372 ;; This function is called by:
  1373 ;;		_main
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377     0E71                     _sendMsgBuf:	
  1378                           ;psect for function _sendMsgBuf
  1379                           
  1380     0E71                     l3529:	
  1381                           ;incstack = 0
  1382                           ; Regs used in _sendMsgBuf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1383                           
  1384                           
  1385                           ;mcp2515_can.c: 1277:     return sendMsg(id, ext, rtrBit, len, buf, wait_sent);;	Return 
      +                          value of _sendMsgBuf is never used
  1386     0E71  1283               	bcf	3,5	;RP0=0, select bank0
  1387     0E72  1303               	bcf	3,6	;RP1=0, select bank0
  1388     0E73  0845               	movf	sendMsgBuf@id+3,w
  1389     0E74  00B5               	movwf	sendMsg@id+3
  1390     0E75  0844               	movf	sendMsgBuf@id+2,w
  1391     0E76  00B4               	movwf	sendMsg@id+2
  1392     0E77  0843               	movf	sendMsgBuf@id+1,w
  1393     0E78  00B3               	movwf	sendMsg@id+1
  1394     0E79  0842               	movf	sendMsgBuf@id,w
  1395     0E7A  00B2               	movwf	sendMsg@id
  1396     0E7B  0846               	movf	sendMsgBuf@ext,w
  1397     0E7C  00B6               	movwf	sendMsg@ext
  1398     0E7D  0847               	movf	sendMsgBuf@rtrBit,w
  1399     0E7E  00B7               	movwf	sendMsg@rtrBit
  1400     0E7F  0848               	movf	sendMsgBuf@len,w
  1401     0E80  00B8               	movwf	sendMsg@len
  1402     0E81  0849               	movf	sendMsgBuf@buf,w
  1403     0E82  00B9               	movwf	sendMsg@buf
  1404     0E83  084A               	movf	sendMsgBuf@wait_sent,w
  1405     0E84  00BA               	movwf	sendMsg@wait_sent
  1406     0E85  120A  118A  230D  120A  158A  	fcall	_sendMsg
  1407     0E8A                     l416:
  1408     0E8A  0008               	return
  1409     0E8B                     __end_of_sendMsgBuf:
  1410                           
  1411                           	psect	text2
  1412     030D                     __ptext2:	
  1413 ;; *************** function _sendMsg *****************
  1414 ;; Defined at:
  1415 ;;		line 1231 in file "mcp2515_can.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;  id              4   18[BANK0 ] unsigned long 
  1418 ;;  ext             1   22[BANK0 ] unsigned char 
  1419 ;;  rtrBit          1   23[BANK0 ] unsigned char 
  1420 ;;  len             1   24[BANK0 ] unsigned char 
  1421 ;;  buf             1   25[BANK0 ] PTR const unsigned char 
  1422 ;;		 -> stmp(8), 
  1423 ;;  wait_sent       1   26[BANK0 ] unsigned char 
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  uiTimeOut       2   32[BANK0 ] unsigned short 
  1426 ;;  txbuf_n         1   31[BANK0 ] unsigned char 
  1427 ;;  res1            1   30[BANK0 ] unsigned char 
  1428 ;;  res             1   29[BANK0 ] unsigned char 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      unsigned char 
  1431 ;; Registers used:
  1432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1438 ;;      Params:         0       9       0       0       0
  1439 ;;      Locals:         0       5       0       0       0
  1440 ;;      Temps:          0       2       0       0       0
  1441 ;;      Totals:         0      16       0       0       0
  1442 ;;Total ram usage:       16 bytes
  1443 ;; Hardware stack levels used: 1
  1444 ;; Hardware stack levels required when called: 3
  1445 ;; This function calls:
  1446 ;;		_mcp2515_getNextFreeTXBuf
  1447 ;;		_mcp2515_readRegister
  1448 ;;		_mcp2515_write_canMsg
  1449 ;; This function is called by:
  1450 ;;		_sendMsgBuf
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454     030D                     _sendMsg:	
  1455                           ;psect for function _sendMsg
  1456                           
  1457     030D                     l3459:	
  1458                           ;incstack = 0
  1459                           ; Regs used in _sendMsg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1460                           
  1461                           
  1462                           ;mcp2515_can.c: 1232:     unsigned char res, res1, txbuf_n;;mcp2515_can.c: 1233:     uin
      +                          t16_t uiTimeOut = 0;
  1463     030D  1283               	bcf	3,5	;RP0=0, select bank0
  1464     030E  1303               	bcf	3,6	;RP1=0, select bank0
  1465     030F  01C0               	clrf	sendMsg@uiTimeOut
  1466     0310  01C1               	clrf	sendMsg@uiTimeOut+1
  1467     0311                     l3461:
  1468                           
  1469                           ;mcp2515_can.c: 1235:     can_id = id;
  1470     0311  0835               	movf	sendMsg@id+3,w
  1471     0312  00E2               	movwf	_can_id+3
  1472     0313  0834               	movf	sendMsg@id+2,w
  1473     0314  00E1               	movwf	_can_id+2
  1474     0315  0833               	movf	sendMsg@id+1,w
  1475     0316  00E0               	movwf	_can_id+1
  1476     0317  0832               	movf	sendMsg@id,w
  1477     0318  00DF               	movwf	_can_id
  1478     0319                     l3463:
  1479                           
  1480                           ;mcp2515_can.c: 1236:     ext_flg = ext;
  1481     0319  0836               	movf	sendMsg@ext,w
  1482     031A  00E4               	movwf	_ext_flg
  1483     031B                     l3465:
  1484                           
  1485                           ;mcp2515_can.c: 1237:     rtr = rtrBit;
  1486     031B  0837               	movf	sendMsg@rtrBit,w
  1487     031C  00E3               	movwf	_rtr
  1488     031D                     l3467:
  1489                           
  1490                           ;mcp2515_can.c: 1240:         if (uiTimeOut > 0) {
  1491     031D  0840               	movf	sendMsg@uiTimeOut,w
  1492     031E  0441               	iorwf	sendMsg@uiTimeOut+1,w
  1493     031F  1903               	btfsc	3,2
  1494     0320  2B22               	goto	u1571
  1495     0321  2B23               	goto	u1570
  1496     0322                     u1571:
  1497     0322  2B2D               	goto	l3471
  1498     0323                     u1570:
  1499     0323                     l3469:
  1500                           
  1501                           ;mcp2515_can.c: 1241:             _delay((unsigned long)((10)*(4000000/4000.0)));
  1502     0323  300D               	movlw	13
  1503     0324  1283               	bcf	3,5	;RP0=0, select bank0
  1504     0325  1303               	bcf	3,6	;RP1=0, select bank0
  1505     0326  00BC               	movwf	??_sendMsg+1
  1506     0327  30FB               	movlw	251
  1507     0328  00BB               	movwf	??_sendMsg
  1508     0329                     u2147:
  1509     0329  0BBB               	decfsz	??_sendMsg,f
  1510     032A  2B29               	goto	u2147
  1511     032B  0BBC               	decfsz	??_sendMsg+1,f
  1512     032C  2B29               	goto	u2147
  1513     032D                     l3471:
  1514                           
  1515                           ;mcp2515_can.c: 1243:         res = mcp2515_getNextFreeTXBuf(&txbuf_n);
  1516     032D  303F               	movlw	(low (sendMsg@txbuf_n| 0))& (0+255)
  1517     032E  120A  118A  2032  120A  118A  	fcall	_mcp2515_getNextFreeTXBuf
  1518     0333  1283               	bcf	3,5	;RP0=0, select bank0
  1519     0334  1303               	bcf	3,6	;RP1=0, select bank0
  1520     0335  00BD               	movwf	sendMsg@res
  1521     0336                     l3473:
  1522                           
  1523                           ;mcp2515_can.c: 1244:         uiTimeOut++;
  1524     0336  3001               	movlw	1
  1525     0337  07C0               	addwf	sendMsg@uiTimeOut,f
  1526     0338  1803               	skipnc
  1527     0339  0AC1               	incf	sendMsg@uiTimeOut+1,f
  1528     033A  3000               	movlw	0
  1529     033B  07C1               	addwf	sendMsg@uiTimeOut+1,f
  1530     033C                     l3475:
  1531                           
  1532                           ;mcp2515_can.c: 1245:     } while (res == (2) && (uiTimeOut < 50));
  1533     033C  3002               	movlw	2
  1534     033D  063D               	xorwf	sendMsg@res,w
  1535     033E  1D03               	btfss	3,2
  1536     033F  2B41               	goto	u1581
  1537     0340  2B42               	goto	u1580
  1538     0341                     u1581:
  1539     0341  2B4B               	goto	l3479
  1540     0342                     u1580:
  1541     0342                     l3477:
  1542     0342  3000               	movlw	0
  1543     0343  0241               	subwf	sendMsg@uiTimeOut+1,w
  1544     0344  3032               	movlw	50
  1545     0345  1903               	skipnz
  1546     0346  0240               	subwf	sendMsg@uiTimeOut,w
  1547     0347  1C03               	skipc
  1548     0348  2B4A               	goto	u1591
  1549     0349  2B4B               	goto	u1590
  1550     034A                     u1591:
  1551     034A  2B1D               	goto	l3467
  1552     034B                     u1590:
  1553     034B                     l3479:
  1554                           
  1555                           ;mcp2515_can.c: 1247:     if (uiTimeOut == 50) {
  1556     034B  3032               	movlw	50
  1557     034C  0640               	xorwf	sendMsg@uiTimeOut,w
  1558     034D  0441               	iorwf	sendMsg@uiTimeOut+1,w
  1559     034E  1D03               	btfss	3,2
  1560     034F  2B51               	goto	u1601
  1561     0350  2B52               	goto	u1600
  1562     0351                     u1601:
  1563     0351  2B54               	goto	l3485
  1564     0352                     u1600:
  1565     0352                     l3481:
  1566                           
  1567                           ;mcp2515_can.c: 1248:         return (6);
  1568     0352  3006               	movlw	6
  1569     0353  2BB0               	goto	l406
  1570     0354                     l3485:
  1571                           
  1572                           ;mcp2515_can.c: 1250:     mcp2515_write_canMsg(txbuf_n, id, ext, rtrBit, len, buf);
  1573     0354  0835               	movf	sendMsg@id+3,w
  1574     0355  00A3               	movwf	mcp2515_write_canMsg@id+3
  1575     0356  0834               	movf	sendMsg@id+2,w
  1576     0357  00A2               	movwf	mcp2515_write_canMsg@id+2
  1577     0358  0833               	movf	sendMsg@id+1,w
  1578     0359  00A1               	movwf	mcp2515_write_canMsg@id+1
  1579     035A  0832               	movf	sendMsg@id,w
  1580     035B  00A0               	movwf	mcp2515_write_canMsg@id
  1581     035C  0836               	movf	sendMsg@ext,w
  1582     035D  00A4               	movwf	mcp2515_write_canMsg@ext
  1583     035E  0837               	movf	sendMsg@rtrBit,w
  1584     035F  00A5               	movwf	mcp2515_write_canMsg@rtrBit
  1585     0360  0838               	movf	sendMsg@len,w
  1586     0361  00A6               	movwf	mcp2515_write_canMsg@len
  1587     0362  0839               	movf	sendMsg@buf,w
  1588     0363  00A7               	movwf	mcp2515_write_canMsg@buf
  1589     0364  083F               	movf	sendMsg@txbuf_n,w
  1590     0365  120A  118A  2204  120A  118A  	fcall	_mcp2515_write_canMsg
  1591     036A                     l3487:
  1592                           
  1593                           ;mcp2515_can.c: 1252:     if (wait_sent) {
  1594     036A  1283               	bcf	3,5	;RP0=0, select bank0
  1595     036B  1303               	bcf	3,6	;RP1=0, select bank0
  1596     036C  083A               	movf	sendMsg@wait_sent,w
  1597     036D  1903               	btfsc	3,2
  1598     036E  2B70               	goto	u1611
  1599     036F  2B71               	goto	u1610
  1600     0370                     u1611:
  1601     0370  2BAF               	goto	l3509
  1602     0371                     u1610:
  1603     0371                     l3489:
  1604                           
  1605                           ;mcp2515_can.c: 1253:         uiTimeOut = 0;
  1606     0371  01C0               	clrf	sendMsg@uiTimeOut
  1607     0372  01C1               	clrf	sendMsg@uiTimeOut+1
  1608     0373                     l3491:
  1609                           
  1610                           ;mcp2515_can.c: 1255:             if (uiTimeOut > 0) {
  1611     0373  0840               	movf	sendMsg@uiTimeOut,w
  1612     0374  0441               	iorwf	sendMsg@uiTimeOut+1,w
  1613     0375  1903               	btfsc	3,2
  1614     0376  2B78               	goto	u1621
  1615     0377  2B79               	goto	u1620
  1616     0378                     u1621:
  1617     0378  2B83               	goto	l409
  1618     0379                     u1620:
  1619     0379                     l3493:
  1620                           
  1621                           ;mcp2515_can.c: 1256:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  1622     0379  300D               	movlw	13
  1623     037A  1283               	bcf	3,5	;RP0=0, select bank0
  1624     037B  1303               	bcf	3,6	;RP1=0, select bank0
  1625     037C  00BC               	movwf	??_sendMsg+1
  1626     037D  30FB               	movlw	251
  1627     037E  00BB               	movwf	??_sendMsg
  1628     037F                     u2157:
  1629     037F  0BBB               	decfsz	??_sendMsg,f
  1630     0380  2B7F               	goto	u2157
  1631     0381  0BBC               	decfsz	??_sendMsg+1,f
  1632     0382  2B7F               	goto	u2157
  1633     0383                     l409:	
  1634                           ;mcp2515_can.c: 1257:             }
  1635                           
  1636                           
  1637                           ;mcp2515_can.c: 1258:             uiTimeOut++;
  1638     0383  3001               	movlw	1
  1639     0384  1283               	bcf	3,5	;RP0=0, select bank0
  1640     0385  1303               	bcf	3,6	;RP1=0, select bank0
  1641     0386  07C0               	addwf	sendMsg@uiTimeOut,f
  1642     0387  1803               	skipnc
  1643     0388  0AC1               	incf	sendMsg@uiTimeOut+1,f
  1644     0389  3000               	movlw	0
  1645     038A  07C1               	addwf	sendMsg@uiTimeOut+1,f
  1646     038B                     l3495:
  1647                           
  1648                           ;mcp2515_can.c: 1259:             res1 = mcp2515_readRegister(txbuf_n - 1);
  1649     038B  083F               	movf	sendMsg@txbuf_n,w
  1650     038C  3EFF               	addlw	255
  1651     038D  120A  158A  268B  120A  118A  	fcall	_mcp2515_readRegister
  1652     0392  1283               	bcf	3,5	;RP0=0, select bank0
  1653     0393  1303               	bcf	3,6	;RP1=0, select bank0
  1654     0394  00BE               	movwf	sendMsg@res1
  1655     0395                     l3497:
  1656                           
  1657                           ;mcp2515_can.c: 1260:             res1 = res1 & 0x08;
  1658     0395  083E               	movf	sendMsg@res1,w
  1659     0396  3908               	andlw	8
  1660     0397  00BE               	movwf	sendMsg@res1
  1661     0398                     l3499:
  1662                           
  1663                           ;mcp2515_can.c: 1261:         } while (res1 && (uiTimeOut < 50));
  1664     0398  083E               	movf	sendMsg@res1,w
  1665     0399  1903               	btfsc	3,2
  1666     039A  2B9C               	goto	u1631
  1667     039B  2B9D               	goto	u1630
  1668     039C                     u1631:
  1669     039C  2BA6               	goto	l3503
  1670     039D                     u1630:
  1671     039D                     l3501:
  1672     039D  3000               	movlw	0
  1673     039E  0241               	subwf	sendMsg@uiTimeOut+1,w
  1674     039F  3032               	movlw	50
  1675     03A0  1903               	skipnz
  1676     03A1  0240               	subwf	sendMsg@uiTimeOut,w
  1677     03A2  1C03               	skipc
  1678     03A3  2BA5               	goto	u1641
  1679     03A4  2BA6               	goto	u1640
  1680     03A5                     u1641:
  1681     03A5  2B73               	goto	l3491
  1682     03A6                     u1640:
  1683     03A6                     l3503:
  1684                           
  1685                           ;mcp2515_can.c: 1263:         if (uiTimeOut == 50) {
  1686     03A6  3032               	movlw	50
  1687     03A7  0640               	xorwf	sendMsg@uiTimeOut,w
  1688     03A8  0441               	iorwf	sendMsg@uiTimeOut+1,w
  1689     03A9  1D03               	btfss	3,2
  1690     03AA  2BAC               	goto	u1651
  1691     03AB  2BAD               	goto	u1650
  1692     03AC                     u1651:
  1693     03AC  2BAF               	goto	l3509
  1694     03AD                     u1650:
  1695     03AD                     l3505:
  1696                           
  1697                           ;mcp2515_can.c: 1264:             return (7);
  1698     03AD  3007               	movlw	7
  1699     03AE  2BB0               	goto	l406
  1700     03AF                     l3509:
  1701                           
  1702                           ;mcp2515_can.c: 1268:     return (0);
  1703     03AF  3000               	movlw	0
  1704     03B0                     l406:
  1705     03B0  0008               	return
  1706     03B1                     __end_of_sendMsg:
  1707                           
  1708                           	psect	text3
  1709     0204                     __ptext3:	
  1710 ;; *************** function _mcp2515_write_canMsg *****************
  1711 ;; Defined at:
  1712 ;;		line 918 in file "mcp2515_can.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  buffer_sidh_    1    wreg     const unsigned char 
  1715 ;;  id              4    0[BANK0 ] unsigned long 
  1716 ;;  ext             1    4[BANK0 ] unsigned char 
  1717 ;;  rtrBit          1    5[BANK0 ] unsigned char 
  1718 ;;  len             1    6[BANK0 ] unsigned char 
  1719 ;;  buf             1    7[BANK0 ] PTR  unsigned char 
  1720 ;;		 -> stmp(8), 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  buffer_sidh_    1   16[BANK0 ] const unsigned char 
  1723 ;;  tbufdata        4   12[BANK0 ] unsigned char [4]
  1724 ;;  i               1   17[BANK0 ] unsigned char 
  1725 ;;  dlc             1   11[BANK0 ] unsigned char 
  1726 ;;  load_addr       1   10[BANK0 ] unsigned char 
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1736 ;;      Params:         0       8       0       0       0
  1737 ;;      Locals:         0      10       0       0       0
  1738 ;;      Temps:          1       0       0       0       0
  1739 ;;      Totals:         1      18       0       0       0
  1740 ;;Total ram usage:       19 bytes
  1741 ;; Hardware stack levels used: 1
  1742 ;; Hardware stack levels required when called: 2
  1743 ;; This function calls:
  1744 ;;		_WriteSPI
  1745 ;;		_mcp2515_id_to_buf
  1746 ;;		_mcp2515_start_transmit
  1747 ;;		_txSidhToTxLoad
  1748 ;; This function is called by:
  1749 ;;		_sendMsg
  1750 ;;		_sendMsgBuf1
  1751 ;;		_trySendMsgBuf
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755     0204                     _mcp2515_write_canMsg:	
  1756                           ;psect for function _mcp2515_write_canMsg
  1757                           
  1758                           
  1759                           ;incstack = 0
  1760                           ; Regs used in _mcp2515_write_canMsg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  1761                           ;mcp2515_write_canMsg@buffer_sidh_addr stored from wreg
  1762     0204  1283               	bcf	3,5	;RP0=0, select bank0
  1763     0205  1303               	bcf	3,6	;RP1=0, select bank0
  1764     0206  00B0               	movwf	mcp2515_write_canMsg@buffer_sidh_addr
  1765     0207                     l3217:
  1766                           
  1767                           ;mcp2515_can.c: 918: void mcp2515_write_canMsg(const unsigned char buffer_sidh_addr, uns
      +                          igned long id, unsigned char ext, unsigned char rtrBit, unsigned char len,;mcp2515_can.c
      +                          : 919:                                    volatile const unsigned char* buf) {;mcp2515_c
      +                          an.c: 920:     unsigned char load_addr = txSidhToTxLoad(buffer_sidh_addr);
  1768     0207  0830               	movf	mcp2515_write_canMsg@buffer_sidh_addr,w
  1769     0208  120A  158A  2719  120A  118A  	fcall	_txSidhToTxLoad
  1770     020D  1283               	bcf	3,5	;RP0=0, select bank0
  1771     020E  1303               	bcf	3,6	;RP1=0, select bank0
  1772     020F  00AA               	movwf	mcp2515_write_canMsg@load_addr
  1773     0210                     l3219:
  1774                           
  1775                           ;mcp2515_can.c: 922:     unsigned char tbufdata[4];;mcp2515_can.c: 923:     unsigned cha
      +                          r dlc = len | (rtrBit ? 0x40 : 0) ;
  1776     0210  0825               	movf	mcp2515_write_canMsg@rtrBit,w
  1777     0211  1D03               	btfss	3,2
  1778     0212  2A14               	goto	u1241
  1779     0213  2A15               	goto	u1240
  1780     0214                     u1241:
  1781     0214  2A18               	goto	l3223
  1782     0215                     u1240:
  1783     0215                     l3221:
  1784     0215  01A8               	clrf	_mcp2515_write_canMsg$328
  1785     0216  01A9               	clrf	_mcp2515_write_canMsg$328+1
  1786     0217  2A1C               	goto	l3225
  1787     0218                     l3223:
  1788     0218  3040               	movlw	64
  1789     0219  00A8               	movwf	_mcp2515_write_canMsg$328
  1790     021A  3000               	movlw	0
  1791     021B  00A9               	movwf	_mcp2515_write_canMsg$328+1
  1792     021C                     l3225:
  1793     021C  0826               	movf	mcp2515_write_canMsg@len,w
  1794     021D  0428               	iorwf	_mcp2515_write_canMsg$328,w
  1795     021E  00AB               	movwf	mcp2515_write_canMsg@dlc
  1796     021F                     l3227:
  1797                           
  1798                           ;mcp2515_can.c: 924:     unsigned char i;;mcp2515_can.c: 926:     mcp2515_id_to_buf(ext,
      +                           id, tbufdata);
  1799     021F  0823               	movf	mcp2515_write_canMsg@id+3,w
  1800     0220  00F3               	movwf	mcp2515_id_to_buf@id+3
  1801     0221  0822               	movf	mcp2515_write_canMsg@id+2,w
  1802     0222  00F2               	movwf	mcp2515_id_to_buf@id+2
  1803     0223  0821               	movf	mcp2515_write_canMsg@id+1,w
  1804     0224  00F1               	movwf	mcp2515_id_to_buf@id+1
  1805     0225  0820               	movf	mcp2515_write_canMsg@id,w
  1806     0226  00F0               	movwf	mcp2515_id_to_buf@id
  1807     0227  302C               	movlw	(low (mcp2515_write_canMsg@tbufdata| 0))& (0+255)
  1808     0228  00F4               	movwf	mcp2515_id_to_buf@tbufdata
  1809     0229  0824               	movf	mcp2515_write_canMsg@ext,w
  1810     022A  120A  118A  2189  120A  118A  	fcall	_mcp2515_id_to_buf
  1811     022F                     l3229:
  1812                           
  1813                           ;mcp2515_can.c: 931:     RD0 = 0;;
  1814     022F  1283               	bcf	3,5	;RP0=0, select bank0
  1815     0230  1303               	bcf	3,6	;RP1=0, select bank0
  1816     0231  1008               	bcf	8,0	;volatile
  1817     0232                     l3231:
  1818                           
  1819                           ;mcp2515_can.c: 932:     WriteSPI(load_addr);
  1820     0232  082A               	movf	mcp2515_write_canMsg@load_addr,w
  1821     0233  120A  158A  25B5  120A  118A  	fcall	_WriteSPI
  1822     0238                     l3233:
  1823                           
  1824                           ;mcp2515_can.c: 933:     for (i = 0; i < 4; i++) {
  1825     0238  1283               	bcf	3,5	;RP0=0, select bank0
  1826     0239  1303               	bcf	3,6	;RP1=0, select bank0
  1827     023A  01B1               	clrf	mcp2515_write_canMsg@i
  1828     023B                     l3239:
  1829                           
  1830                           ;mcp2515_can.c: 934:         WriteSPI(tbufdata[i]);
  1831     023B  0831               	movf	mcp2515_write_canMsg@i,w
  1832     023C  3E2C               	addlw	(low (mcp2515_write_canMsg@tbufdata| 0))& (0+255)
  1833     023D  0084               	movwf	4
  1834     023E  1383               	bcf	3,7	;select IRP bank0
  1835     023F  0800               	movf	0,w
  1836     0240  120A  158A  25B5  120A  118A  	fcall	_WriteSPI
  1837     0245                     l3241:
  1838                           
  1839                           ;mcp2515_can.c: 935:     }
  1840     0245  3001               	movlw	1
  1841     0246  00FF               	movwf	btemp+1
  1842     0247  087F               	movf	btemp+1,w
  1843     0248  1283               	bcf	3,5	;RP0=0, select bank0
  1844     0249  1303               	bcf	3,6	;RP1=0, select bank0
  1845     024A  07B1               	addwf	mcp2515_write_canMsg@i,f
  1846     024B                     l3243:
  1847     024B  3004               	movlw	4
  1848     024C  0231               	subwf	mcp2515_write_canMsg@i,w
  1849     024D  1C03               	skipc
  1850     024E  2A50               	goto	u1251
  1851     024F  2A51               	goto	u1250
  1852     0250                     u1251:
  1853     0250  2A3B               	goto	l3239
  1854     0251                     u1250:
  1855     0251                     l3245:
  1856                           
  1857                           ;mcp2515_can.c: 936:     WriteSPI(dlc);
  1858     0251  082B               	movf	mcp2515_write_canMsg@dlc,w
  1859     0252  120A  158A  25B5  120A  118A  	fcall	_WriteSPI
  1860     0257                     l3247:
  1861                           
  1862                           ;mcp2515_can.c: 937:     for (i = 0; i < len && i < (8); i++) {
  1863     0257  1283               	bcf	3,5	;RP0=0, select bank0
  1864     0258  1303               	bcf	3,6	;RP1=0, select bank0
  1865     0259  01B1               	clrf	mcp2515_write_canMsg@i
  1866     025A  2A6D               	goto	l3253
  1867     025B                     l3249:
  1868                           
  1869                           ;mcp2515_can.c: 938:         WriteSPI(buf[i]);
  1870     025B  0831               	movf	mcp2515_write_canMsg@i,w
  1871     025C  0727               	addwf	mcp2515_write_canMsg@buf,w
  1872     025D  00FC               	movwf	??_mcp2515_write_canMsg
  1873     025E  087C               	movf	??_mcp2515_write_canMsg,w
  1874     025F  0084               	movwf	4
  1875     0260  1383               	bcf	3,7	;select IRP bank0
  1876     0261  0800               	movf	0,w
  1877     0262  120A  158A  25B5  120A  118A  	fcall	_WriteSPI
  1878     0267                     l3251:
  1879                           
  1880                           ;mcp2515_can.c: 939:     }
  1881     0267  3001               	movlw	1
  1882     0268  00FF               	movwf	btemp+1
  1883     0269  087F               	movf	btemp+1,w
  1884     026A  1283               	bcf	3,5	;RP0=0, select bank0
  1885     026B  1303               	bcf	3,6	;RP1=0, select bank0
  1886     026C  07B1               	addwf	mcp2515_write_canMsg@i,f
  1887     026D                     l3253:
  1888     026D  0826               	movf	mcp2515_write_canMsg@len,w
  1889     026E  0231               	subwf	mcp2515_write_canMsg@i,w
  1890     026F  1803               	skipnc
  1891     0270  2A72               	goto	u1261
  1892     0271  2A73               	goto	u1260
  1893     0272                     u1261:
  1894     0272  2A79               	goto	l326
  1895     0273                     u1260:
  1896     0273                     l3255:
  1897     0273  3008               	movlw	8
  1898     0274  0231               	subwf	mcp2515_write_canMsg@i,w
  1899     0275  1C03               	skipc
  1900     0276  2A78               	goto	u1271
  1901     0277  2A79               	goto	u1270
  1902     0278                     u1271:
  1903     0278  2A5B               	goto	l3249
  1904     0279                     u1270:
  1905     0279                     l326:
  1906                           
  1907                           ;mcp2515_can.c: 941:     RD0 = 1;;
  1908     0279  1408               	bsf	8,0	;volatile
  1909     027A                     l3257:
  1910                           
  1911                           ;mcp2515_can.c: 946:     mcp2515_start_transmit(buffer_sidh_addr);
  1912     027A  0830               	movf	mcp2515_write_canMsg@buffer_sidh_addr,w
  1913     027B  120A  158A  25D8  120A  118A  	fcall	_mcp2515_start_transmit
  1914     0280                     l327:
  1915     0280  0008               	return
  1916     0281                     __end_of_mcp2515_write_canMsg:
  1917                           
  1918                           	psect	text4
  1919     0F19                     __ptext4:	
  1920 ;; *************** function _txSidhToTxLoad *****************
  1921 ;; Defined at:
  1922 ;;		line 116 in file "mcp2515_can.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;  sidh            1    wreg     unsigned char 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  sidh            1    2[COMMON] unsigned char 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      unsigned char 
  1929 ;; Registers used:
  1930 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1936 ;;      Params:         0       0       0       0       0
  1937 ;;      Locals:         1       0       0       0       0
  1938 ;;      Temps:          2       0       0       0       0
  1939 ;;      Totals:         3       0       0       0       0
  1940 ;;Total ram usage:        3 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; This function calls:
  1943 ;;		Nothing
  1944 ;; This function is called by:
  1945 ;;		_mcp2515_write_canMsg
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949     0F19                     _txSidhToTxLoad:	
  1950                           ;psect for function _txSidhToTxLoad
  1951                           
  1952                           
  1953                           ;incstack = 0
  1954                           ; Regs used in _txSidhToTxLoad: [wreg-fsr0h+status,2+status,0]
  1955                           ;txSidhToTxLoad@sidh stored from wreg
  1956     0F19  00F2               	movwf	txSidhToTxLoad@sidh
  1957     0F1A                     l2833:
  1958                           
  1959                           ;mcp2515_can.c: 117:     switch (sidh) {
  1960     0F1A  2F21               	goto	l2849
  1961     0F1B                     l2835:
  1962     0F1B  3040               	movlw	64
  1963     0F1C  2F35               	goto	l132
  1964     0F1D                     l2839:
  1965     0F1D  3042               	movlw	66
  1966     0F1E  2F35               	goto	l132
  1967     0F1F                     l2843:
  1968     0F1F  3044               	movlw	68
  1969     0F20  2F35               	goto	l132
  1970     0F21                     l2849:
  1971     0F21  0872               	movf	txSidhToTxLoad@sidh,w
  1972     0F22  00F0               	movwf	??_txSidhToTxLoad
  1973     0F23  01F1               	clrf	??_txSidhToTxLoad+1
  1974                           
  1975                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1976                           ; Switch size 1, requested type "simple"
  1977                           ; Number of cases is 1, Range of values is 0 to 0
  1978                           ; switch strategies available:
  1979                           ; Name         Instructions Cycles
  1980                           ; simple_byte            4     3 (average)
  1981                           ; direct_byte           11     8 (fixed)
  1982                           ; jumptable            260     6 (fixed)
  1983                           ;	Chosen strategy is simple_byte
  1984     0F24  0871               	movf	??_txSidhToTxLoad+1,w
  1985     0F25  3A00               	xorlw	0	; case 0
  1986     0F26  1903               	skipnz
  1987     0F27  2F29               	goto	l4239
  1988     0F28  2F34               	goto	l2851
  1989     0F29                     l4239:
  1990                           
  1991                           ; Switch size 1, requested type "simple"
  1992                           ; Number of cases is 3, Range of values is 49 to 81
  1993                           ; switch strategies available:
  1994                           ; Name         Instructions Cycles
  1995                           ; simple_byte           10     6 (average)
  1996                           ; direct_byte          110    11 (fixed)
  1997                           ; jumptable            263     9 (fixed)
  1998                           ;	Chosen strategy is simple_byte
  1999     0F29  0870               	movf	??_txSidhToTxLoad,w
  2000     0F2A  3A31               	xorlw	49	; case 49
  2001     0F2B  1903               	skipnz
  2002     0F2C  2F1B               	goto	l2835
  2003     0F2D  3A70               	xorlw	112	; case 65
  2004     0F2E  1903               	skipnz
  2005     0F2F  2F1D               	goto	l2839
  2006     0F30  3A10               	xorlw	16	; case 81
  2007     0F31  1903               	skipnz
  2008     0F32  2F1F               	goto	l2843
  2009     0F33  2F34               	goto	l2851
  2010     0F34                     l2851:
  2011                           
  2012                           ;mcp2515_can.c: 122:     return 0;
  2013     0F34  3000               	movlw	0
  2014     0F35                     l132:
  2015     0F35  0008               	return
  2016     0F36                     __end_of_txSidhToTxLoad:
  2017                           
  2018                           	psect	text5
  2019     0DD8                     __ptext5:	
  2020 ;; *************** function _mcp2515_start_transmit *****************
  2021 ;; Defined at:
  2022 ;;		line 990 in file "mcp2515_can.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  mcp_addr        1    wreg     const unsigned char 
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;  mcp_addr        1    3[COMMON] const unsigned char 
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      void 
  2029 ;; Registers used:
  2030 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2036 ;;      Params:         0       0       0       0       0
  2037 ;;      Locals:         1       0       0       0       0
  2038 ;;      Temps:          0       0       0       0       0
  2039 ;;      Totals:         1       0       0       0       0
  2040 ;;Total ram usage:        1 bytes
  2041 ;; Hardware stack levels used: 1
  2042 ;; Hardware stack levels required when called: 1
  2043 ;; This function calls:
  2044 ;;		_WriteSPI
  2045 ;;		_txSidhToRTS
  2046 ;; This function is called by:
  2047 ;;		_mcp2515_write_canMsg
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051     0DD8                     _mcp2515_start_transmit:	
  2052                           ;psect for function _mcp2515_start_transmit
  2053                           
  2054                           
  2055                           ;incstack = 0
  2056                           ; Regs used in _mcp2515_start_transmit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2057                           ;mcp2515_start_transmit@mcp_addr stored from wreg
  2058     0DD8  00F3               	movwf	mcp2515_start_transmit@mcp_addr
  2059     0DD9                     l2971:
  2060                           
  2061                           ;mcp2515_can.c: 994:     RD0 = 0;;
  2062     0DD9  1283               	bcf	3,5	;RP0=0, select bank0
  2063     0DDA  1303               	bcf	3,6	;RP1=0, select bank0
  2064     0DDB  1008               	bcf	8,0	;volatile
  2065     0DDC                     l2973:
  2066                           
  2067                           ;mcp2515_can.c: 995:     WriteSPI(txSidhToRTS(mcp_addr));
  2068     0DDC  0873               	movf	mcp2515_start_transmit@mcp_addr,w
  2069     0DDD  120A  158A  26FC  120A  158A  	fcall	_txSidhToRTS
  2070     0DE2  120A  158A  25B5  120A  158A  	fcall	_WriteSPI
  2071     0DE7                     l2975:
  2072                           
  2073                           ;mcp2515_can.c: 996:     RD0 = 1;;
  2074     0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  2075     0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  2076     0DE9  1408               	bsf	8,0	;volatile
  2077     0DEA                     l341:
  2078     0DEA  0008               	return
  2079     0DEB                     __end_of_mcp2515_start_transmit:
  2080                           
  2081                           	psect	text6
  2082     0EFC                     __ptext6:	
  2083 ;; *************** function _txSidhToRTS *****************
  2084 ;; Defined at:
  2085 ;;		line 103 in file "mcp2515_can.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  sidh            1    wreg     unsigned char 
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;  sidh            1    2[COMMON] unsigned char 
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      unsigned char 
  2092 ;; Registers used:
  2093 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2099 ;;      Params:         0       0       0       0       0
  2100 ;;      Locals:         1       0       0       0       0
  2101 ;;      Temps:          2       0       0       0       0
  2102 ;;      Totals:         3       0       0       0       0
  2103 ;;Total ram usage:        3 bytes
  2104 ;; Hardware stack levels used: 1
  2105 ;; This function calls:
  2106 ;;		Nothing
  2107 ;; This function is called by:
  2108 ;;		_mcp2515_start_transmit
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112     0EFC                     _txSidhToRTS:	
  2113                           ;psect for function _txSidhToRTS
  2114                           
  2115                           
  2116                           ;incstack = 0
  2117                           ; Regs used in _txSidhToRTS: [wreg-fsr0h+status,2+status,0]
  2118                           ;txSidhToRTS@sidh stored from wreg
  2119     0EFC  00F2               	movwf	txSidhToRTS@sidh
  2120     0EFD                     l2753:
  2121                           
  2122                           ;mcp2515_can.c: 104:     switch (sidh) {
  2123     0EFD  2F04               	goto	l2769
  2124     0EFE                     l2755:
  2125     0EFE  3081               	movlw	129
  2126     0EFF  2F18               	goto	l124
  2127     0F00                     l2759:
  2128     0F00  3082               	movlw	130
  2129     0F01  2F18               	goto	l124
  2130     0F02                     l2763:
  2131     0F02  3084               	movlw	132
  2132     0F03  2F18               	goto	l124
  2133     0F04                     l2769:
  2134     0F04  0872               	movf	txSidhToRTS@sidh,w
  2135     0F05  00F0               	movwf	??_txSidhToRTS
  2136     0F06  01F1               	clrf	??_txSidhToRTS+1
  2137                           
  2138                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2139                           ; Switch size 1, requested type "simple"
  2140                           ; Number of cases is 1, Range of values is 0 to 0
  2141                           ; switch strategies available:
  2142                           ; Name         Instructions Cycles
  2143                           ; simple_byte            4     3 (average)
  2144                           ; direct_byte           11     8 (fixed)
  2145                           ; jumptable            260     6 (fixed)
  2146                           ;	Chosen strategy is simple_byte
  2147     0F07  0871               	movf	??_txSidhToRTS+1,w
  2148     0F08  3A00               	xorlw	0	; case 0
  2149     0F09  1903               	skipnz
  2150     0F0A  2F0C               	goto	l4241
  2151     0F0B  2F17               	goto	l2771
  2152     0F0C                     l4241:
  2153                           
  2154                           ; Switch size 1, requested type "simple"
  2155                           ; Number of cases is 3, Range of values is 49 to 81
  2156                           ; switch strategies available:
  2157                           ; Name         Instructions Cycles
  2158                           ; simple_byte           10     6 (average)
  2159                           ; direct_byte          110    11 (fixed)
  2160                           ; jumptable            263     9 (fixed)
  2161                           ;	Chosen strategy is simple_byte
  2162     0F0C  0870               	movf	??_txSidhToRTS,w
  2163     0F0D  3A31               	xorlw	49	; case 49
  2164     0F0E  1903               	skipnz
  2165     0F0F  2EFE               	goto	l2755
  2166     0F10  3A70               	xorlw	112	; case 65
  2167     0F11  1903               	skipnz
  2168     0F12  2F00               	goto	l2759
  2169     0F13  3A10               	xorlw	16	; case 81
  2170     0F14  1903               	skipnz
  2171     0F15  2F02               	goto	l2763
  2172     0F16  2F17               	goto	l2771
  2173     0F17                     l2771:
  2174                           
  2175                           ;mcp2515_can.c: 109:     return 0;
  2176     0F17  3000               	movlw	0
  2177     0F18                     l124:
  2178     0F18  0008               	return
  2179     0F19                     __end_of_txSidhToRTS:
  2180                           
  2181                           	psect	text7
  2182     0189                     __ptext7:	
  2183 ;; *************** function _mcp2515_id_to_buf *****************
  2184 ;; Defined at:
  2185 ;;		line 858 in file "mcp2515_can.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  ext             1    wreg     const unsigned char 
  2188 ;;  id              4    0[COMMON] const unsigned long 
  2189 ;;  tbufdata        1    4[COMMON] PTR unsigned char 
  2190 ;;		 -> mcp2515_write_canMsg@tbufdata(4), mcp2515_write_id@tbufdata(4), 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  ext             1    9[COMMON] const unsigned char 
  2193 ;;  canid           2   10[COMMON] unsigned short 
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      void 
  2196 ;; Registers used:
  2197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2203 ;;      Params:         5       0       0       0       0
  2204 ;;      Locals:         3       0       0       0       0
  2205 ;;      Temps:          4       0       0       0       0
  2206 ;;      Totals:        12       0       0       0       0
  2207 ;;Total ram usage:       12 bytes
  2208 ;; Hardware stack levels used: 1
  2209 ;; This function calls:
  2210 ;;		Nothing
  2211 ;; This function is called by:
  2212 ;;		_mcp2515_write_canMsg
  2213 ;;		_mcp2515_write_id
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217     0189                     _mcp2515_id_to_buf:	
  2218                           ;psect for function _mcp2515_id_to_buf
  2219                           
  2220                           
  2221                           ;incstack = 0
  2222                           ; Regs used in _mcp2515_id_to_buf: [wreg-fsr0h+status,2+status,0+btemp+1]
  2223                           ;mcp2515_id_to_buf@ext stored from wreg
  2224     0189  00F9               	movwf	mcp2515_id_to_buf@ext
  2225     018A                     l2953:
  2226                           
  2227                           ;mcp2515_can.c: 859:     uint16_t canid;;mcp2515_can.c: 861:     canid = (uint16_t)(id &
      +                           0x0FFFF);
  2228     018A  0871               	movf	mcp2515_id_to_buf@id+1,w
  2229     018B  00FB               	movwf	mcp2515_id_to_buf@canid+1
  2230     018C  0870               	movf	mcp2515_id_to_buf@id,w
  2231     018D  00FA               	movwf	mcp2515_id_to_buf@canid
  2232     018E                     l2955:
  2233                           
  2234                           ;mcp2515_can.c: 863:     if (ext == 1) {
  2235     018E  0379               	decf	mcp2515_id_to_buf@ext,w
  2236     018F  1D03               	btfss	3,2
  2237     0190  2992               	goto	u1161
  2238     0191  2993               	goto	u1160
  2239     0192                     u1161:
  2240     0192  29DB               	goto	l2969
  2241     0193                     u1160:
  2242     0193                     l2957:
  2243                           
  2244                           ;mcp2515_can.c: 864:         tbufdata[3] = (unsigned char)(canid & 0xFF);
  2245     0193  0874               	movf	mcp2515_id_to_buf@tbufdata,w
  2246     0194  3E03               	addlw	3
  2247     0195  0084               	movwf	4
  2248     0196  087A               	movf	mcp2515_id_to_buf@canid,w
  2249     0197  1383               	bcf	3,7	;select IRP bank0
  2250     0198  0080               	movwf	0
  2251                           
  2252                           ;mcp2515_can.c: 865:         tbufdata[2] = (unsigned char)(canid >> 8);
  2253     0199  0874               	movf	mcp2515_id_to_buf@tbufdata,w
  2254     019A  3E02               	addlw	2
  2255     019B  0084               	movwf	4
  2256     019C  087B               	movf	mcp2515_id_to_buf@canid+1,w
  2257     019D  0080               	movwf	0
  2258     019E                     l2959:
  2259                           
  2260                           ;mcp2515_can.c: 866:         canid = (uint16_t)(id >> 16);
  2261     019E  0870               	movf	mcp2515_id_to_buf@id,w
  2262     019F  00F5               	movwf	??_mcp2515_id_to_buf
  2263     01A0  0871               	movf	mcp2515_id_to_buf@id+1,w
  2264     01A1  00F6               	movwf	??_mcp2515_id_to_buf+1
  2265     01A2  0872               	movf	mcp2515_id_to_buf@id+2,w
  2266     01A3  00F7               	movwf	??_mcp2515_id_to_buf+2
  2267     01A4  0873               	movf	mcp2515_id_to_buf@id+3,w
  2268     01A5  00F8               	movwf	??_mcp2515_id_to_buf+3
  2269     01A6  3010               	movlw	16
  2270     01A7                     u1175:
  2271     01A7  1003               	clrc
  2272     01A8  0CF8               	rrf	??_mcp2515_id_to_buf+3,f
  2273     01A9  0CF7               	rrf	??_mcp2515_id_to_buf+2,f
  2274     01AA  0CF6               	rrf	??_mcp2515_id_to_buf+1,f
  2275     01AB  0CF5               	rrf	??_mcp2515_id_to_buf,f
  2276     01AC                     u1170:
  2277     01AC  3EFF               	addlw	-1
  2278     01AD  1D03               	skipz
  2279     01AE  29A7               	goto	u1175
  2280     01AF  0876               	movf	??_mcp2515_id_to_buf+1,w
  2281     01B0  00FB               	movwf	mcp2515_id_to_buf@canid+1
  2282     01B1  0875               	movf	??_mcp2515_id_to_buf,w
  2283     01B2  00FA               	movwf	mcp2515_id_to_buf@canid
  2284     01B3                     l2961:
  2285                           
  2286                           ;mcp2515_can.c: 867:         tbufdata[1] = (unsigned char)(canid & 0x03);
  2287     01B3  0A74               	incf	mcp2515_id_to_buf@tbufdata,w
  2288     01B4  0084               	movwf	4
  2289     01B5  087A               	movf	mcp2515_id_to_buf@canid,w
  2290     01B6  3903               	andlw	3
  2291     01B7  0080               	movwf	0
  2292     01B8                     l2963:
  2293                           
  2294                           ;mcp2515_can.c: 868:         tbufdata[1] += (unsigned char)((canid & 0x1C) << 3);
  2295     01B8  087A               	movf	mcp2515_id_to_buf@canid,w
  2296     01B9  391C               	andlw	28
  2297     01BA  00F5               	movwf	??_mcp2515_id_to_buf
  2298     01BB  3002               	movlw	2
  2299     01BC                     u1185:
  2300     01BC  1003               	clrc
  2301     01BD  0DF5               	rlf	??_mcp2515_id_to_buf,f
  2302     01BE  3EFF               	addlw	-1
  2303     01BF  1D03               	skipz
  2304     01C0  29BC               	goto	u1185
  2305     01C1  1003               	clrc
  2306     01C2  0D75               	rlf	??_mcp2515_id_to_buf,w
  2307     01C3  00FF               	movwf	btemp+1
  2308     01C4  0A74               	incf	mcp2515_id_to_buf@tbufdata,w
  2309     01C5  0084               	movwf	4
  2310     01C6  087F               	movf	btemp+1,w
  2311     01C7  0780               	addwf	0,f
  2312     01C8                     l2965:
  2313                           
  2314                           ;mcp2515_can.c: 869:         tbufdata[1] |= 0x08;
  2315     01C8  0A74               	incf	mcp2515_id_to_buf@tbufdata,w
  2316     01C9  0084               	movwf	4
  2317     01CA  1580               	bsf	0,3
  2318     01CB                     l2967:
  2319                           
  2320                           ;mcp2515_can.c: 870:         tbufdata[0] = (unsigned char)(canid >> 5);
  2321     01CB  0874               	movf	mcp2515_id_to_buf@tbufdata,w
  2322     01CC  0084               	movwf	4
  2323     01CD  087B               	movf	mcp2515_id_to_buf@canid+1,w
  2324     01CE  00F6               	movwf	??_mcp2515_id_to_buf+1
  2325     01CF  087A               	movf	mcp2515_id_to_buf@canid,w
  2326     01D0  00F5               	movwf	??_mcp2515_id_to_buf
  2327     01D1  3005               	movlw	5
  2328     01D2                     u1195:
  2329     01D2  1003               	clrc
  2330     01D3  0CF6               	rrf	??_mcp2515_id_to_buf+1,f
  2331     01D4  0CF5               	rrf	??_mcp2515_id_to_buf,f
  2332     01D5  3EFF               	addlw	-1
  2333     01D6  1D03               	skipz
  2334     01D7  29D2               	goto	u1195
  2335     01D8  0875               	movf	??_mcp2515_id_to_buf,w
  2336     01D9  0080               	movwf	0
  2337                           
  2338                           ;mcp2515_can.c: 871:     } else {
  2339     01DA  2A03               	goto	l306
  2340     01DB                     l2969:
  2341                           
  2342                           ;mcp2515_can.c: 872:         tbufdata[0] = (unsigned char)(canid >> 3);
  2343     01DB  0874               	movf	mcp2515_id_to_buf@tbufdata,w
  2344     01DC  0084               	movwf	4
  2345     01DD  087B               	movf	mcp2515_id_to_buf@canid+1,w
  2346     01DE  00F6               	movwf	??_mcp2515_id_to_buf+1
  2347     01DF  087A               	movf	mcp2515_id_to_buf@canid,w
  2348     01E0  00F5               	movwf	??_mcp2515_id_to_buf
  2349     01E1  1003               	clrc
  2350     01E2  0CF6               	rrf	??_mcp2515_id_to_buf+1,f
  2351     01E3  0CF5               	rrf	??_mcp2515_id_to_buf,f
  2352     01E4  1003               	clrc
  2353     01E5  0CF6               	rrf	??_mcp2515_id_to_buf+1,f
  2354     01E6  0CF5               	rrf	??_mcp2515_id_to_buf,f
  2355     01E7  1003               	clrc
  2356     01E8  0CF6               	rrf	??_mcp2515_id_to_buf+1,f
  2357     01E9  0CF5               	rrf	??_mcp2515_id_to_buf,f
  2358     01EA  0875               	movf	??_mcp2515_id_to_buf,w
  2359     01EB  1383               	bcf	3,7	;select IRP bank0
  2360     01EC  0080               	movwf	0
  2361                           
  2362                           ;mcp2515_can.c: 873:         tbufdata[1] = (unsigned char)((canid & 0x07) << 5);
  2363     01ED  0A74               	incf	mcp2515_id_to_buf@tbufdata,w
  2364     01EE  0084               	movwf	4
  2365     01EF  087A               	movf	mcp2515_id_to_buf@canid,w
  2366     01F0  3907               	andlw	7
  2367     01F1  00F5               	movwf	??_mcp2515_id_to_buf
  2368     01F2  3004               	movlw	4
  2369     01F3                     u1205:
  2370     01F3  1003               	clrc
  2371     01F4  0DF5               	rlf	??_mcp2515_id_to_buf,f
  2372     01F5  3EFF               	addlw	-1
  2373     01F6  1D03               	skipz
  2374     01F7  29F3               	goto	u1205
  2375     01F8  1003               	clrc
  2376     01F9  0D75               	rlf	??_mcp2515_id_to_buf,w
  2377     01FA  0080               	movwf	0
  2378                           
  2379                           ;mcp2515_can.c: 874:         tbufdata[3] = 0;
  2380     01FB  0874               	movf	mcp2515_id_to_buf@tbufdata,w
  2381     01FC  3E03               	addlw	3
  2382     01FD  0084               	movwf	4
  2383     01FE  0180               	clrf	0
  2384                           
  2385                           ;mcp2515_can.c: 875:         tbufdata[2] = 0;
  2386     01FF  0874               	movf	mcp2515_id_to_buf@tbufdata,w
  2387     0200  3E02               	addlw	2
  2388     0201  0084               	movwf	4
  2389     0202  0180               	clrf	0
  2390     0203                     l306:
  2391     0203  0008               	return
  2392     0204                     __end_of_mcp2515_id_to_buf:
  2393                           
  2394                           	psect	text8
  2395     0032                     __ptext8:	
  2396 ;; *************** function _mcp2515_getNextFreeTXBuf *****************
  2397 ;; Defined at:
  2398 ;;		line 1024 in file "mcp2515_can.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;  txbuf_n         1    wreg     PTR unsigned char 
  2401 ;;		 -> sendMsg@txbuf_n(1), trySendMsgBuf@txbuf_n(1), 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;  txbuf_n         1    7[COMMON] PTR unsigned char 
  2404 ;;		 -> sendMsg@txbuf_n(1), trySendMsgBuf@txbuf_n(1), 
  2405 ;;  i               1    8[COMMON] unsigned char 
  2406 ;;  status          1    6[COMMON] unsigned char 
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      unsigned char 
  2409 ;; Registers used:
  2410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2416 ;;      Params:         0       0       0       0       0
  2417 ;;      Locals:         3       0       0       0       0
  2418 ;;      Temps:          0       0       0       0       0
  2419 ;;      Totals:         3       0       0       0       0
  2420 ;;Total ram usage:        3 bytes
  2421 ;; Hardware stack levels used: 1
  2422 ;; Hardware stack levels required when called: 2
  2423 ;; This function calls:
  2424 ;;		_mcp2515_modifyRegister
  2425 ;;		_mcp2515_readStatus
  2426 ;;		_txCtrlReg
  2427 ;;		_txIfFlag
  2428 ;;		_txStatusPendingFlag
  2429 ;; This function is called by:
  2430 ;;		_sendMsg
  2431 ;;		_trySendMsgBuf
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435     0032                     _mcp2515_getNextFreeTXBuf:	
  2436                           ;psect for function _mcp2515_getNextFreeTXBuf
  2437                           
  2438                           
  2439                           ;incstack = 0
  2440                           ; Regs used in _mcp2515_getNextFreeTXBuf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  2441                           ;mcp2515_getNextFreeTXBuf@txbuf_n stored from wreg
  2442     0032  00F7               	movwf	mcp2515_getNextFreeTXBuf@txbuf_n
  2443     0033                     l3301:
  2444                           
  2445                           ;mcp2515_can.c: 1025:     unsigned char status = mcp2515_readStatus() & (0x54);
  2446     0033  120A  158A  25FE  120A  118A  	fcall	_mcp2515_readStatus
  2447     0038  3954               	andlw	84
  2448     0039  00F6               	movwf	mcp2515_getNextFreeTXBuf@status
  2449     003A                     l3303:
  2450                           
  2451                           ;mcp2515_can.c: 1026:     unsigned char i;;mcp2515_can.c: 1028:     *txbuf_n = 0x00;
  2452     003A  0877               	movf	mcp2515_getNextFreeTXBuf@txbuf_n,w
  2453     003B  0084               	movwf	4
  2454     003C  1383               	bcf	3,7	;select IRP bank0
  2455     003D  0180               	clrf	0
  2456     003E                     l3305:
  2457                           
  2458                           ;mcp2515_can.c: 1030:     if (status == (0x54)) {
  2459     003E  3054               	movlw	84
  2460     003F  0676               	xorwf	mcp2515_getNextFreeTXBuf@status,w
  2461     0040  1D03               	btfss	3,2
  2462     0041  2843               	goto	u1411
  2463     0042  2844               	goto	u1410
  2464     0043                     u1411:
  2465     0043  2846               	goto	l3311
  2466     0044                     u1410:
  2467     0044                     l3307:
  2468                           
  2469                           ;mcp2515_can.c: 1031:         return (2);
  2470     0044  3002               	movlw	2
  2471     0045  287B               	goto	l351
  2472     0046                     l3311:
  2473                           
  2474                           ;mcp2515_can.c: 1035:     for (i = 0; i < (3) - nReservedTx; i++) {
  2475     0046  01F8               	clrf	mcp2515_getNextFreeTXBuf@i
  2476     0047  2874               	goto	l3325
  2477     0048                     l3313:
  2478                           
  2479                           ;mcp2515_can.c: 1036:         if ((status & txStatusPendingFlag(i)) == 0) {
  2480     0048  0878               	movf	mcp2515_getNextFreeTXBuf@i,w
  2481     0049  120A  158A  26DF  120A  118A  	fcall	_txStatusPendingFlag
  2482     004E  0576               	andwf	mcp2515_getNextFreeTXBuf@status,w
  2483     004F  1D03               	btfss	3,2
  2484     0050  2852               	goto	u1421
  2485     0051  2853               	goto	u1420
  2486     0052                     u1421:
  2487     0052  2870               	goto	l3323
  2488     0053                     u1420:
  2489     0053                     l3315:
  2490                           
  2491                           ;mcp2515_can.c: 1037:             *txbuf_n = txCtrlReg(i) + 1;
  2492     0053  0878               	movf	mcp2515_getNextFreeTXBuf@i,w
  2493     0054  120A  158A  26A6  120A  118A  	fcall	_txCtrlReg
  2494     0059  3E01               	addlw	1
  2495     005A  00FF               	movwf	btemp+1
  2496     005B  0877               	movf	mcp2515_getNextFreeTXBuf@txbuf_n,w
  2497     005C  0084               	movwf	4
  2498     005D  087F               	movf	btemp+1,w
  2499     005E  1383               	bcf	3,7	;select IRP bank0
  2500     005F  0080               	movwf	0
  2501     0060                     l3317:
  2502                           
  2503                           ;mcp2515_can.c: 1038:             mcp2515_modifyRegister(0x2C, txIfFlag(i), 0);
  2504     0060  0878               	movf	mcp2515_getNextFreeTXBuf@i,w
  2505     0061  120A  158A  26C2  120A  118A  	fcall	_txIfFlag
  2506     0066  00F3               	movwf	mcp2515_modifyRegister@mask
  2507     0067  01F4               	clrf	mcp2515_modifyRegister@data
  2508     0068  302C               	movlw	44
  2509     0069  120A  118A  2012  120A  118A  	fcall	_mcp2515_modifyRegister
  2510     006E                     l3319:
  2511                           
  2512                           ;mcp2515_can.c: 1039:             return (0);
  2513     006E  3000               	movlw	0
  2514     006F  287B               	goto	l351
  2515     0070                     l3323:
  2516                           
  2517                           ;mcp2515_can.c: 1041:     }
  2518     0070  3001               	movlw	1
  2519     0071  00FF               	movwf	btemp+1
  2520     0072  087F               	movf	btemp+1,w
  2521     0073  07F8               	addwf	mcp2515_getNextFreeTXBuf@i,f
  2522     0074                     l3325:
  2523     0074  3003               	movlw	3
  2524     0075  0278               	subwf	mcp2515_getNextFreeTXBuf@i,w
  2525     0076  1C03               	skipc
  2526     0077  2879               	goto	u1431
  2527     0078  287A               	goto	u1430
  2528     0079                     u1431:
  2529     0079  2848               	goto	l3313
  2530     007A                     u1430:
  2531     007A  2844               	goto	l3307
  2532     007B                     l351:
  2533     007B  0008               	return
  2534     007C                     __end_of_mcp2515_getNextFreeTXBuf:
  2535                           
  2536                           	psect	text9
  2537     0EDF                     __ptext9:	
  2538 ;; *************** function _txStatusPendingFlag *****************
  2539 ;; Defined at:
  2540 ;;		line 142 in file "mcp2515_can.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  i               1    wreg     unsigned char 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;  i               1    2[COMMON] unsigned char 
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      unsigned char 
  2547 ;; Registers used:
  2548 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2554 ;;      Params:         0       0       0       0       0
  2555 ;;      Locals:         1       0       0       0       0
  2556 ;;      Temps:          2       0       0       0       0
  2557 ;;      Totals:         3       0       0       0       0
  2558 ;;Total ram usage:        3 bytes
  2559 ;; Hardware stack levels used: 1
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_mcp2515_getNextFreeTXBuf
  2564 ;;		_mcp2515_isTXBufFree
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568     0EDF                     _txStatusPendingFlag:	
  2569                           ;psect for function _txStatusPendingFlag
  2570                           
  2571                           
  2572                           ;incstack = 0
  2573                           ; Regs used in _txStatusPendingFlag: [wreg-fsr0h+status,2+status,0]
  2574                           ;txStatusPendingFlag@i stored from wreg
  2575     0EDF  00F2               	movwf	txStatusPendingFlag@i
  2576     0EE0                     l2885:
  2577                           
  2578                           ;mcp2515_can.c: 143:     switch (i) {
  2579     0EE0  2EE7               	goto	l2901
  2580     0EE1                     l2887:
  2581     0EE1  3004               	movlw	4
  2582     0EE2  2EFB               	goto	l148
  2583     0EE3                     l2891:
  2584     0EE3  3010               	movlw	16
  2585     0EE4  2EFB               	goto	l148
  2586     0EE5                     l2895:
  2587     0EE5  3040               	movlw	64
  2588     0EE6  2EFB               	goto	l148
  2589     0EE7                     l2901:
  2590     0EE7  0872               	movf	txStatusPendingFlag@i,w
  2591     0EE8  00F0               	movwf	??_txStatusPendingFlag
  2592     0EE9  01F1               	clrf	??_txStatusPendingFlag+1
  2593                           
  2594                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2595                           ; Switch size 1, requested type "simple"
  2596                           ; Number of cases is 1, Range of values is 0 to 0
  2597                           ; switch strategies available:
  2598                           ; Name         Instructions Cycles
  2599                           ; simple_byte            4     3 (average)
  2600                           ; direct_byte           11     8 (fixed)
  2601                           ; jumptable            260     6 (fixed)
  2602                           ;	Chosen strategy is simple_byte
  2603     0EEA  0871               	movf	??_txStatusPendingFlag+1,w
  2604     0EEB  3A00               	xorlw	0	; case 0
  2605     0EEC  1903               	skipnz
  2606     0EED  2EEF               	goto	l4243
  2607     0EEE  2EFA               	goto	l2903
  2608     0EEF                     l4243:
  2609                           
  2610                           ; Switch size 1, requested type "simple"
  2611                           ; Number of cases is 3, Range of values is 0 to 2
  2612                           ; switch strategies available:
  2613                           ; Name         Instructions Cycles
  2614                           ; simple_byte           10     6 (average)
  2615                           ; direct_byte           17     8 (fixed)
  2616                           ; jumptable            260     6 (fixed)
  2617                           ;	Chosen strategy is simple_byte
  2618     0EEF  0870               	movf	??_txStatusPendingFlag,w
  2619     0EF0  3A00               	xorlw	0	; case 0
  2620     0EF1  1903               	skipnz
  2621     0EF2  2EE1               	goto	l2887
  2622     0EF3  3A01               	xorlw	1	; case 1
  2623     0EF4  1903               	skipnz
  2624     0EF5  2EE3               	goto	l2891
  2625     0EF6  3A03               	xorlw	3	; case 2
  2626     0EF7  1903               	skipnz
  2627     0EF8  2EE5               	goto	l2895
  2628     0EF9  2EFA               	goto	l2903
  2629     0EFA                     l2903:
  2630                           
  2631                           ;mcp2515_can.c: 148:     return 0xff;
  2632     0EFA  30FF               	movlw	255
  2633     0EFB                     l148:
  2634     0EFB  0008               	return
  2635     0EFC                     __end_of_txStatusPendingFlag:
  2636                           
  2637                           	psect	text10
  2638     0EC2                     __ptext10:	
  2639 ;; *************** function _txIfFlag *****************
  2640 ;; Defined at:
  2641 ;;		line 129 in file "mcp2515_can.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;  i               1    wreg     unsigned char 
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;  i               1    2[COMMON] unsigned char 
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      unsigned char 
  2648 ;; Registers used:
  2649 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2655 ;;      Params:         0       0       0       0       0
  2656 ;;      Locals:         1       0       0       0       0
  2657 ;;      Temps:          2       0       0       0       0
  2658 ;;      Totals:         3       0       0       0       0
  2659 ;;Total ram usage:        3 bytes
  2660 ;; Hardware stack levels used: 1
  2661 ;; This function calls:
  2662 ;;		Nothing
  2663 ;; This function is called by:
  2664 ;;		_mcp2515_getNextFreeTXBuf
  2665 ;;		_mcp2515_isTXBufFree
  2666 ;;		_checkClearTxStatus
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670     0EC2                     _txIfFlag:	
  2671                           ;psect for function _txIfFlag
  2672                           
  2673                           
  2674                           ;incstack = 0
  2675                           ; Regs used in _txIfFlag: [wreg-fsr0h+status,2+status,0]
  2676                           ;txIfFlag@i stored from wreg
  2677     0EC2  00F2               	movwf	txIfFlag@i
  2678     0EC3                     l2859:
  2679                           
  2680                           ;mcp2515_can.c: 130:     switch (i) {
  2681     0EC3  2ECA               	goto	l2875
  2682     0EC4                     l2861:
  2683     0EC4  3004               	movlw	4
  2684     0EC5  2EDE               	goto	l140
  2685     0EC6                     l2865:
  2686     0EC6  3008               	movlw	8
  2687     0EC7  2EDE               	goto	l140
  2688     0EC8                     l2869:
  2689     0EC8  3010               	movlw	16
  2690     0EC9  2EDE               	goto	l140
  2691     0ECA                     l2875:
  2692     0ECA  0872               	movf	txIfFlag@i,w
  2693     0ECB  00F0               	movwf	??_txIfFlag
  2694     0ECC  01F1               	clrf	??_txIfFlag+1
  2695                           
  2696                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2697                           ; Switch size 1, requested type "simple"
  2698                           ; Number of cases is 1, Range of values is 0 to 0
  2699                           ; switch strategies available:
  2700                           ; Name         Instructions Cycles
  2701                           ; simple_byte            4     3 (average)
  2702                           ; direct_byte           11     8 (fixed)
  2703                           ; jumptable            260     6 (fixed)
  2704                           ;	Chosen strategy is simple_byte
  2705     0ECD  0871               	movf	??_txIfFlag+1,w
  2706     0ECE  3A00               	xorlw	0	; case 0
  2707     0ECF  1903               	skipnz
  2708     0ED0  2ED2               	goto	l4245
  2709     0ED1  2EDD               	goto	l2877
  2710     0ED2                     l4245:
  2711                           
  2712                           ; Switch size 1, requested type "simple"
  2713                           ; Number of cases is 3, Range of values is 0 to 2
  2714                           ; switch strategies available:
  2715                           ; Name         Instructions Cycles
  2716                           ; simple_byte           10     6 (average)
  2717                           ; direct_byte           17     8 (fixed)
  2718                           ; jumptable            260     6 (fixed)
  2719                           ;	Chosen strategy is simple_byte
  2720     0ED2  0870               	movf	??_txIfFlag,w
  2721     0ED3  3A00               	xorlw	0	; case 0
  2722     0ED4  1903               	skipnz
  2723     0ED5  2EC4               	goto	l2861
  2724     0ED6  3A01               	xorlw	1	; case 1
  2725     0ED7  1903               	skipnz
  2726     0ED8  2EC6               	goto	l2865
  2727     0ED9  3A03               	xorlw	3	; case 2
  2728     0EDA  1903               	skipnz
  2729     0EDB  2EC8               	goto	l2869
  2730     0EDC  2EDD               	goto	l2877
  2731     0EDD                     l2877:
  2732                           
  2733                           ;mcp2515_can.c: 135:     return 0;
  2734     0EDD  3000               	movlw	0
  2735     0EDE                     l140:
  2736     0EDE  0008               	return
  2737     0EDF                     __end_of_txIfFlag:
  2738                           
  2739                           	psect	text11
  2740     0EA6                     __ptext11:	
  2741 ;; *************** function _txCtrlReg *****************
  2742 ;; Defined at:
  2743 ;;		line 62 in file "mcp2515_can.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  i               1    wreg     unsigned char 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  i               1    2[COMMON] unsigned char 
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  1    wreg      unsigned char 
  2750 ;; Registers used:
  2751 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2757 ;;      Params:         0       0       0       0       0
  2758 ;;      Locals:         1       0       0       0       0
  2759 ;;      Temps:          2       0       0       0       0
  2760 ;;      Totals:         3       0       0       0       0
  2761 ;;Total ram usage:        3 bytes
  2762 ;; Hardware stack levels used: 1
  2763 ;; This function calls:
  2764 ;;		Nothing
  2765 ;; This function is called by:
  2766 ;;		_mcp2515_getNextFreeTXBuf
  2767 ;;		_mcp2515_isTXBufFree
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771     0EA6                     _txCtrlReg:	
  2772                           ;psect for function _txCtrlReg
  2773                           
  2774                           
  2775                           ;incstack = 0
  2776                           ; Regs used in _txCtrlReg: [wreg-fsr0h+status,2+status,0]
  2777                           ;txCtrlReg@i stored from wreg
  2778     0EA6  00F2               	movwf	txCtrlReg@i
  2779     0EA7                     l2807:
  2780                           
  2781                           ;mcp2515_can.c: 63:     switch (i) {
  2782     0EA7  2EAE               	goto	l2823
  2783     0EA8                     l2809:
  2784     0EA8  3030               	movlw	48
  2785     0EA9  2EC1               	goto	l100
  2786     0EAA                     l2813:
  2787     0EAA  3040               	movlw	64
  2788     0EAB  2EC1               	goto	l100
  2789     0EAC                     l2817:
  2790     0EAC  3050               	movlw	80
  2791     0EAD  2EC1               	goto	l100
  2792     0EAE                     l2823:
  2793     0EAE  0872               	movf	txCtrlReg@i,w
  2794     0EAF  00F0               	movwf	??_txCtrlReg
  2795     0EB0  01F1               	clrf	??_txCtrlReg+1
  2796                           
  2797                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2798                           ; Switch size 1, requested type "simple"
  2799                           ; Number of cases is 1, Range of values is 0 to 0
  2800                           ; switch strategies available:
  2801                           ; Name         Instructions Cycles
  2802                           ; simple_byte            4     3 (average)
  2803                           ; direct_byte           11     8 (fixed)
  2804                           ; jumptable            260     6 (fixed)
  2805                           ;	Chosen strategy is simple_byte
  2806     0EB1  0871               	movf	??_txCtrlReg+1,w
  2807     0EB2  3A00               	xorlw	0	; case 0
  2808     0EB3  1903               	skipnz
  2809     0EB4  2EB6               	goto	l4247
  2810     0EB5  2EAC               	goto	l2817
  2811     0EB6                     l4247:
  2812                           
  2813                           ; Switch size 1, requested type "simple"
  2814                           ; Number of cases is 3, Range of values is 0 to 2
  2815                           ; switch strategies available:
  2816                           ; Name         Instructions Cycles
  2817                           ; simple_byte           10     6 (average)
  2818                           ; direct_byte           17     8 (fixed)
  2819                           ; jumptable            260     6 (fixed)
  2820                           ;	Chosen strategy is simple_byte
  2821     0EB6  0870               	movf	??_txCtrlReg,w
  2822     0EB7  3A00               	xorlw	0	; case 0
  2823     0EB8  1903               	skipnz
  2824     0EB9  2EA8               	goto	l2809
  2825     0EBA  3A01               	xorlw	1	; case 1
  2826     0EBB  1903               	skipnz
  2827     0EBC  2EAA               	goto	l2813
  2828     0EBD  3A03               	xorlw	3	; case 2
  2829     0EBE  1903               	skipnz
  2830     0EBF  2EAC               	goto	l2817
  2831     0EC0  2EAC               	goto	l2817
  2832     0EC1                     l100:
  2833     0EC1  0008               	return
  2834     0EC2                     __end_of_txCtrlReg:
  2835                           
  2836                           	psect	text12
  2837     0E3F                     __ptext12:	
  2838 ;; *************** function _readMsgBuf *****************
  2839 ;; Defined at:
  2840 ;;		line 23 in file "main.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  len             1    wreg     PTR unsigned char 
  2843 ;;		 -> main@len(1), 
  2844 ;;  buf             1   13[COMMON] PTR unsigned char 
  2845 ;;		 -> main@buf(8), 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  len             1   16[BANK0 ] PTR unsigned char 
  2848 ;;		 -> main@len(1), 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      unsigned char 
  2851 ;; Registers used:
  2852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2858 ;;      Params:         1       0       0       0       0
  2859 ;;      Locals:         0       1       0       0       0
  2860 ;;      Temps:          0       0       0       0       0
  2861 ;;      Totals:         1       1       0       0       0
  2862 ;;Total ram usage:        2 bytes
  2863 ;; Hardware stack levels used: 1
  2864 ;; Hardware stack levels required when called: 3
  2865 ;; This function calls:
  2866 ;;		_readMsgBufID
  2867 ;;		_readRxTxStatus
  2868 ;; This function is called by:
  2869 ;;		_main
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873     0E3F                     _readMsgBuf:	
  2874                           ;psect for function _readMsgBuf
  2875                           
  2876                           
  2877                           ;incstack = 0
  2878                           ; Regs used in _readMsgBuf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2879                           ;readMsgBuf@len stored from wreg
  2880     0E3F  1283               	bcf	3,5	;RP0=0, select bank0
  2881     0E40  1303               	bcf	3,6	;RP1=0, select bank0
  2882     0E41  00B0               	movwf	readMsgBuf@len
  2883     0E42                     l3515:
  2884                           
  2885                           ;main.c: 24:     };	Return value of _readMsgBuf is never used
  2886     0E42  305F               	movlw	(low (_can_id| 0))& (0+255)
  2887     0E43  00A9               	movwf	readMsgBufID@id
  2888     0E44  3064               	movlw	(low (_ext_flg| 0))& (0+255)
  2889     0E45  00AA               	movwf	readMsgBufID@ext
  2890     0E46  3063               	movlw	(low (_rtr| 0))& (0+255)
  2891     0E47  00AB               	movwf	readMsgBufID@rtrBit
  2892     0E48  0830               	movf	readMsgBuf@len,w
  2893     0E49  00AC               	movwf	readMsgBufID@len
  2894     0E4A  087D               	movf	readMsgBuf@buf,w
  2895     0E4B  00AD               	movwf	readMsgBufID@buf
  2896     0E4C  120A  158A  2754  120A  158A  	fcall	_readRxTxStatus
  2897     0E51  120A  118A  207C  120A  158A  	fcall	_readMsgBufID
  2898     0E56                     l48:
  2899     0E56  0008               	return
  2900     0E57                     __end_of_readMsgBuf:
  2901                           
  2902                           	psect	text13
  2903     0F54                     __ptext13:	
  2904 ;; *************** function _readRxTxStatus *****************
  2905 ;; Defined at:
  2906 ;;		line 1316 in file "mcp2515_can.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;		None
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  ret             1    8[COMMON] unsigned char 
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      unsigned char 
  2913 ;; Registers used:
  2914 ;;		wreg, status,2, status,0, pclath, cstack
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2920 ;;      Params:         0       0       0       0       0
  2921 ;;      Locals:         7       0       0       0       0
  2922 ;;      Temps:          0       0       0       0       0
  2923 ;;      Totals:         7       0       0       0       0
  2924 ;;Total ram usage:        7 bytes
  2925 ;; Hardware stack levels used: 1
  2926 ;; Hardware stack levels required when called: 2
  2927 ;; This function calls:
  2928 ;;		_mcp2515_readStatus
  2929 ;; This function is called by:
  2930 ;;		_readMsgBuf
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934     0F54                     _readRxTxStatus:	
  2935                           ;psect for function _readRxTxStatus
  2936                           
  2937     0F54                     l3331:	
  2938                           ;incstack = 0
  2939                           ; Regs used in _readRxTxStatus: [wreg+status,2+status,0+pclath+cstack]
  2940                           
  2941                           
  2942                           ;mcp2515_can.c: 1317:     unsigned char ret = (mcp2515_readStatus() & ((0xA8) | (0x03)))
      +                          ;
  2943     0F54  120A  158A  25FE  120A  158A  	fcall	_mcp2515_readStatus
  2944     0F59  39AB               	andlw	171
  2945     0F5A  00F8               	movwf	readRxTxStatus@ret
  2946     0F5B                     l3333:
  2947                           
  2948                           ;mcp2515_can.c: 1318:     ret = (ret & (0x08) ? 0x04 : 0) |
  2949     0F5B  1BF8               	btfsc	readRxTxStatus@ret,7
  2950     0F5C  2F5E               	goto	u1441
  2951     0F5D  2F5F               	goto	u1440
  2952     0F5E                     u1441:
  2953     0F5E  2F62               	goto	l3337
  2954     0F5F                     u1440:
  2955     0F5F                     l3335:
  2956     0F5F  01F2               	clrf	_readRxTxStatus$423
  2957     0F60  01F3               	clrf	_readRxTxStatus$423+1
  2958     0F61  2F66               	goto	l3339
  2959     0F62                     l3337:
  2960     0F62  3010               	movlw	16
  2961     0F63  00F2               	movwf	_readRxTxStatus$423
  2962     0F64  3000               	movlw	0
  2963     0F65  00F3               	movwf	_readRxTxStatus$423+1
  2964     0F66                     l3339:
  2965     0F66  1AF8               	btfsc	readRxTxStatus@ret,5
  2966     0F67  2F69               	goto	u1451
  2967     0F68  2F6A               	goto	u1450
  2968     0F69                     u1451:
  2969     0F69  2F6D               	goto	l3343
  2970     0F6A                     u1450:
  2971     0F6A                     l3341:
  2972     0F6A  01F4               	clrf	_readRxTxStatus$424
  2973     0F6B  01F5               	clrf	_readRxTxStatus$424+1
  2974     0F6C  2F71               	goto	l3345
  2975     0F6D                     l3343:
  2976     0F6D  3008               	movlw	8
  2977     0F6E  00F4               	movwf	_readRxTxStatus$424
  2978     0F6F  3000               	movlw	0
  2979     0F70  00F5               	movwf	_readRxTxStatus$424+1
  2980     0F71                     l3345:
  2981     0F71  19F8               	btfsc	readRxTxStatus@ret,3
  2982     0F72  2F74               	goto	u1461
  2983     0F73  2F75               	goto	u1460
  2984     0F74                     u1461:
  2985     0F74  2F78               	goto	l3349
  2986     0F75                     u1460:
  2987     0F75                     l3347:
  2988     0F75  01F6               	clrf	_readRxTxStatus$425
  2989     0F76  01F7               	clrf	_readRxTxStatus$425+1
  2990     0F77  2F7C               	goto	l3351
  2991     0F78                     l3349:
  2992     0F78  3004               	movlw	4
  2993     0F79  00F6               	movwf	_readRxTxStatus$425
  2994     0F7A  3000               	movlw	0
  2995     0F7B  00F7               	movwf	_readRxTxStatus$425+1
  2996     0F7C                     l3351:
  2997     0F7C  0878               	movf	readRxTxStatus@ret,w
  2998     0F7D  3903               	andlw	3
  2999     0F7E  0476               	iorwf	_readRxTxStatus$425,w
  3000     0F7F  0474               	iorwf	_readRxTxStatus$424,w
  3001     0F80  0472               	iorwf	_readRxTxStatus$423,w
  3002     0F81  00F8               	movwf	readRxTxStatus@ret
  3003     0F82                     l3353:
  3004                           
  3005                           ;mcp2515_can.c: 1322:     return ret;
  3006     0F82  0878               	movf	readRxTxStatus@ret,w
  3007     0F83                     l439:
  3008     0F83  0008               	return
  3009     0F84                     __end_of_readRxTxStatus:
  3010                           
  3011                           	psect	text14
  3012     007C                     __ptext14:	
  3013 ;; *************** function _readMsgBufID *****************
  3014 ;; Defined at:
  3015 ;;		line 1285 in file "mcp2515_can.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  status          1    wreg     unsigned char 
  3018 ;;  id              1    9[BANK0 ] PTR volatile unsigned lo
  3019 ;;		 -> can_id(4), 
  3020 ;;  ext             1   10[BANK0 ] PTR volatile unsigned ch
  3021 ;;		 -> ext_flg(1), 
  3022 ;;  rtrBit          1   11[BANK0 ] PTR volatile unsigned ch
  3023 ;;		 -> rtr(1), 
  3024 ;;  len             1   12[BANK0 ] PTR volatile unsigned ch
  3025 ;;		 -> main@len(1), 
  3026 ;;  buf             1   13[BANK0 ] PTR volatile unsigned ch
  3027 ;;		 -> main@buf(8), 
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;  status          1   14[BANK0 ] unsigned char 
  3030 ;;  rc              1   15[BANK0 ] unsigned char 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      unsigned char 
  3033 ;; Registers used:
  3034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3040 ;;      Params:         0       5       0       0       0
  3041 ;;      Locals:         0       2       0       0       0
  3042 ;;      Temps:          0       0       0       0       0
  3043 ;;      Totals:         0       7       0       0       0
  3044 ;;Total ram usage:        7 bytes
  3045 ;; Hardware stack levels used: 1
  3046 ;; Hardware stack levels required when called: 2
  3047 ;; This function calls:
  3048 ;;		_mcp2515_read_canMsg
  3049 ;; This function is called by:
  3050 ;;		_readMsgBuf
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054     007C                     _readMsgBufID:	
  3055                           ;psect for function _readMsgBufID
  3056                           
  3057                           
  3058                           ;incstack = 0
  3059                           ; Regs used in _readMsgBufID: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3060                           ;readMsgBufID@status stored from wreg
  3061     007C  1283               	bcf	3,5	;RP0=0, select bank0
  3062     007D  1303               	bcf	3,6	;RP1=0, select bank0
  3063     007E  00AE               	movwf	readMsgBufID@status
  3064     007F                     l3357:
  3065                           
  3066                           ;mcp2515_can.c: 1285: unsigned char readMsgBufID(unsigned char status, volatile unsigned
      +                           long* id, volatile unsigned char* ext, volatile unsigned char* rtrBit,;mcp2515_can.c: 1
      +                          286:                            volatile unsigned char* len, volatile unsigned char* buf
      +                          ) {;mcp2515_can.c: 1287:     unsigned char rc = (4);
  3067     007F  3004               	movlw	4
  3068     0080  00AF               	movwf	readMsgBufID@rc
  3069     0081                     l3359:
  3070                           
  3071                           ;mcp2515_can.c: 1289:     if (status & 0x01) {
  3072     0081  1C2E               	btfss	readMsgBufID@status,0
  3073     0082  2884               	goto	u1471
  3074     0083  2885               	goto	u1470
  3075     0084                     u1471:
  3076     0084  2899               	goto	l419
  3077     0085                     u1470:
  3078     0085                     l3361:
  3079                           
  3080                           ;mcp2515_can.c: 1290:         mcp2515_read_canMsg(0x90, id, ext, rtrBit, len, buf);
  3081     0085  0829               	movf	readMsgBufID@id,w
  3082     0086  00F1               	movwf	mcp2515_read_canMsg@id
  3083     0087  082A               	movf	readMsgBufID@ext,w
  3084     0088  00F2               	movwf	mcp2515_read_canMsg@ext
  3085     0089  082B               	movf	readMsgBufID@rtrBit,w
  3086     008A  00F3               	movwf	mcp2515_read_canMsg@rtrBit
  3087     008B  082C               	movf	readMsgBufID@len,w
  3088     008C  00F4               	movwf	mcp2515_read_canMsg@len
  3089     008D  082D               	movf	readMsgBufID@buf,w
  3090     008E  00F5               	movwf	mcp2515_read_canMsg@buf
  3091     008F  3090               	movlw	144
  3092     0090  120A  118A  2471  120A  118A  	fcall	_mcp2515_read_canMsg
  3093     0095                     l3363:
  3094                           
  3095                           ;mcp2515_can.c: 1291:         rc = (0);
  3096     0095  1283               	bcf	3,5	;RP0=0, select bank0
  3097     0096  1303               	bcf	3,6	;RP1=0, select bank0
  3098     0097  01AF               	clrf	readMsgBufID@rc
  3099                           
  3100                           ;mcp2515_can.c: 1292:     } else if (status & 0x02) {
  3101     0098  28AE               	goto	l3369
  3102     0099                     l419:
  3103     0099  1CAE               	btfss	readMsgBufID@status,1
  3104     009A  289C               	goto	u1481
  3105     009B  289D               	goto	u1480
  3106     009C                     u1481:
  3107     009C  28AE               	goto	l3369
  3108     009D                     u1480:
  3109     009D                     l3365:
  3110                           
  3111                           ;mcp2515_can.c: 1293:         mcp2515_read_canMsg(0x94, id, ext, rtrBit, len, buf);
  3112     009D  0829               	movf	readMsgBufID@id,w
  3113     009E  00F1               	movwf	mcp2515_read_canMsg@id
  3114     009F  082A               	movf	readMsgBufID@ext,w
  3115     00A0  00F2               	movwf	mcp2515_read_canMsg@ext
  3116     00A1  082B               	movf	readMsgBufID@rtrBit,w
  3117     00A2  00F3               	movwf	mcp2515_read_canMsg@rtrBit
  3118     00A3  082C               	movf	readMsgBufID@len,w
  3119     00A4  00F4               	movwf	mcp2515_read_canMsg@len
  3120     00A5  082D               	movf	readMsgBufID@buf,w
  3121     00A6  00F5               	movwf	mcp2515_read_canMsg@buf
  3122     00A7  3094               	movlw	148
  3123     00A8  120A  118A  2471  120A  118A  	fcall	_mcp2515_read_canMsg
  3124     00AD  2895               	goto	l3363
  3125     00AE                     l3369:
  3126                           
  3127                           ;mcp2515_can.c: 1297:     if (rc == (0)) {
  3128     00AE  082F               	movf	readMsgBufID@rc,w
  3129     00AF  1D03               	btfss	3,2
  3130     00B0  28B2               	goto	u1491
  3131     00B1  28B3               	goto	u1490
  3132     00B2                     u1491:
  3133     00B2  28CA               	goto	l3373
  3134     00B3                     u1490:
  3135     00B3                     l3371:
  3136                           
  3137                           ;mcp2515_can.c: 1298:         rtr = *rtrBit;
  3138     00B3  082B               	movf	readMsgBufID@rtrBit,w
  3139     00B4  0084               	movwf	4
  3140     00B5  1383               	bcf	3,7	;select IRP bank0
  3141     00B6  0800               	movf	0,w
  3142     00B7  00E3               	movwf	_rtr
  3143                           
  3144                           ;mcp2515_can.c: 1300:         ext_flg = *ext;
  3145     00B8  082A               	movf	readMsgBufID@ext,w
  3146     00B9  0084               	movwf	4
  3147     00BA  0800               	movf	0,w
  3148     00BB  00E4               	movwf	_ext_flg
  3149                           
  3150                           ;mcp2515_can.c: 1301:         can_id = *id;
  3151     00BC  0829               	movf	readMsgBufID@id,w
  3152     00BD  0084               	movwf	4
  3153     00BE  0800               	movf	0,w
  3154     00BF  00DF               	movwf	_can_id
  3155     00C0  0A84               	incf	4,f
  3156     00C1  0800               	movf	0,w
  3157     00C2  00E0               	movwf	_can_id+1
  3158     00C3  0A84               	incf	4,f
  3159     00C4  0800               	movf	0,w
  3160     00C5  00E1               	movwf	_can_id+2
  3161     00C6  0A84               	incf	4,f
  3162     00C7  0800               	movf	0,w
  3163     00C8  00E2               	movwf	_can_id+3
  3164                           
  3165                           ;mcp2515_can.c: 1302:     } else {
  3166     00C9  28CE               	goto	l3375
  3167     00CA                     l3373:
  3168                           
  3169                           ;mcp2515_can.c: 1303:         *len = 0;
  3170     00CA  082C               	movf	readMsgBufID@len,w
  3171     00CB  0084               	movwf	4
  3172     00CC  1383               	bcf	3,7	;select IRP bank0
  3173     00CD  0180               	clrf	0
  3174     00CE                     l3375:
  3175                           
  3176                           ;mcp2515_can.c: 1306:     return rc;
  3177     00CE  082F               	movf	readMsgBufID@rc,w
  3178     00CF                     l424:
  3179     00CF  0008               	return
  3180     00D0                     __end_of_readMsgBufID:
  3181                           
  3182                           	psect	text15
  3183     0471                     __ptext15:	
  3184 ;; *************** function _mcp2515_read_canMsg *****************
  3185 ;; Defined at:
  3186 ;;		line 954 in file "mcp2515_can.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;  buffer_load_    1    wreg     const unsigned char 
  3189 ;;  id              1    1[COMMON] PTR volatile unsigned lo
  3190 ;;		 -> can_id(4), 
  3191 ;;  ext             1    2[COMMON] PTR volatile unsigned ch
  3192 ;;		 -> ext_flg(1), 
  3193 ;;  rtrBit          1    3[COMMON] PTR volatile unsigned ch
  3194 ;;		 -> rtr(1), 
  3195 ;;  len             1    4[COMMON] PTR volatile unsigned ch
  3196 ;;		 -> main@len(1), 
  3197 ;;  buf             1    5[COMMON] PTR volatile unsigned ch
  3198 ;;		 -> main@buf(8), 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  buffer_load_    1    6[COMMON] const unsigned char 
  3201 ;;  tbufdata        4    7[COMMON] unsigned char [4]
  3202 ;;  i               1   12[COMMON] unsigned char 
  3203 ;;  pMsgSize        1   11[COMMON] unsigned char 
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      void 
  3206 ;; Registers used:
  3207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3213 ;;      Params:         5       0       0       0       0
  3214 ;;      Locals:         7       0       0       0       0
  3215 ;;      Temps:          0       9       0       0       0
  3216 ;;      Totals:        12       9       0       0       0
  3217 ;;Total ram usage:       21 bytes
  3218 ;; Hardware stack levels used: 1
  3219 ;; Hardware stack levels required when called: 1
  3220 ;; This function calls:
  3221 ;;		_ReadSPI
  3222 ;;		_WriteSPI
  3223 ;; This function is called by:
  3224 ;;		_readMsgBufID
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228     0471                     _mcp2515_read_canMsg:	
  3229                           ;psect for function _mcp2515_read_canMsg
  3230                           
  3231                           
  3232                           ;incstack = 0
  3233                           ; Regs used in _mcp2515_read_canMsg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3234                           ;mcp2515_read_canMsg@buffer_load_addr stored from wreg
  3235     0471  00F6               	movwf	mcp2515_read_canMsg@buffer_load_addr
  3236     0472                     l3259:
  3237                           
  3238                           ;mcp2515_can.c: 954: void mcp2515_read_canMsg(const unsigned char buffer_load_addr, vola
      +                          tile unsigned long* id, volatile unsigned char* ext,;mcp2515_can.c: 955:                
      +                                             volatile unsigned char* rtrBit, volatile unsigned char* len, volatile
      +                           unsigned char* buf) {;mcp2515_can.c: 956:     unsigned char tbufdata[4];;mcp2515_can.c:
      +                           957:     unsigned char i;;mcp2515_can.c: 959:     RD0 = 0;;
  3239     0472  1283               	bcf	3,5	;RP0=0, select bank0
  3240     0473  1303               	bcf	3,6	;RP1=0, select bank0
  3241     0474  1008               	bcf	8,0	;volatile
  3242     0475                     l3261:
  3243                           
  3244                           ;mcp2515_can.c: 960:     WriteSPI(buffer_load_addr);
  3245     0475  0876               	movf	mcp2515_read_canMsg@buffer_load_addr,w
  3246     0476  120A  158A  25B5  120A  118A  	fcall	_WriteSPI
  3247     047B                     l3263:
  3248                           
  3249                           ;mcp2515_can.c: 962:     for (i = 0; i < 4; i++) {
  3250     047B  01FC               	clrf	mcp2515_read_canMsg@i
  3251     047C                     l3269:
  3252                           
  3253                           ;mcp2515_can.c: 963:         tbufdata[i] = ReadSPI();
  3254     047C  087C               	movf	mcp2515_read_canMsg@i,w
  3255     047D  3E77               	addlw	(low (mcp2515_read_canMsg@tbufdata| 0))& (0+255)
  3256     047E  0084               	movwf	4
  3257     047F  120A  118A  2005  120A  118A  	fcall	_ReadSPI
  3258     0484  0080               	movwf	0
  3259     0485                     l3271:
  3260                           
  3261                           ;mcp2515_can.c: 964:     }
  3262     0485  3001               	movlw	1
  3263     0486  00FF               	movwf	btemp+1
  3264     0487  087F               	movf	btemp+1,w
  3265     0488  07FC               	addwf	mcp2515_read_canMsg@i,f
  3266     0489                     l3273:
  3267     0489  3004               	movlw	4
  3268     048A  027C               	subwf	mcp2515_read_canMsg@i,w
  3269     048B  1C03               	skipc
  3270     048C  2C8E               	goto	u1281
  3271     048D  2C8F               	goto	u1280
  3272     048E                     u1281:
  3273     048E  2C7C               	goto	l3269
  3274     048F                     u1280:
  3275     048F                     l3275:
  3276                           
  3277                           ;mcp2515_can.c: 966:     *id = (tbufdata[0] << 3) + (tbufdata[1] >> 5);
  3278     048F  0878               	movf	mcp2515_read_canMsg@tbufdata+1,w
  3279     0490  1283               	bcf	3,5	;RP0=0, select bank0
  3280     0491  1303               	bcf	3,6	;RP1=0, select bank0
  3281     0492  00A0               	movwf	??_mcp2515_read_canMsg
  3282     0493  3005               	movlw	5
  3283     0494                     u1295:
  3284     0494  1003               	clrc
  3285     0495  0CA0               	rrf	??_mcp2515_read_canMsg,f
  3286     0496  3EFF               	addlw	-1
  3287     0497  1D03               	skipz
  3288     0498  2C94               	goto	u1295
  3289     0499  0877               	movf	mcp2515_read_canMsg@tbufdata,w
  3290     049A  00A1               	movwf	??_mcp2515_read_canMsg+1
  3291     049B  01A2               	clrf	??_mcp2515_read_canMsg+2
  3292     049C  1003               	clrc
  3293     049D  0DA1               	rlf	??_mcp2515_read_canMsg+1,f
  3294     049E  0DA2               	rlf	??_mcp2515_read_canMsg+2,f
  3295     049F  1003               	clrc
  3296     04A0  0DA1               	rlf	??_mcp2515_read_canMsg+1,f
  3297     04A1  0DA2               	rlf	??_mcp2515_read_canMsg+2,f
  3298     04A2  1003               	clrc
  3299     04A3  0DA1               	rlf	??_mcp2515_read_canMsg+1,f
  3300     04A4  0DA2               	rlf	??_mcp2515_read_canMsg+2,f
  3301     04A5  0820               	movf	??_mcp2515_read_canMsg,w
  3302     04A6  0721               	addwf	??_mcp2515_read_canMsg+1,w
  3303     04A7  00A3               	movwf	??_mcp2515_read_canMsg+3
  3304     04A8  3000               	movlw	0
  3305     04A9  1803               	skipnc
  3306     04AA  3001               	movlw	1
  3307     04AB  0722               	addwf	??_mcp2515_read_canMsg+2,w
  3308     04AC  00A4               	movwf	??_mcp2515_read_canMsg+4
  3309     04AD  0823               	movf	??_mcp2515_read_canMsg+3,w
  3310     04AE  00A5               	movwf	??_mcp2515_read_canMsg+5
  3311     04AF  0824               	movf	??_mcp2515_read_canMsg+4,w
  3312     04B0  00A6               	movwf	??_mcp2515_read_canMsg+6
  3313     04B1  3000               	movlw	0
  3314     04B2  1BA6               	btfsc	??_mcp2515_read_canMsg+6,7
  3315     04B3  30FF               	movlw	255
  3316     04B4  00A7               	movwf	??_mcp2515_read_canMsg+7
  3317     04B5  00A8               	movwf	??_mcp2515_read_canMsg+8
  3318     04B6  0871               	movf	mcp2515_read_canMsg@id,w
  3319     04B7  0084               	movwf	4
  3320     04B8  0825               	movf	??_mcp2515_read_canMsg+5,w
  3321     04B9  1383               	bcf	3,7	;select IRP bank0
  3322     04BA  0080               	movwf	0
  3323     04BB  0A84               	incf	4,f
  3324     04BC  0826               	movf	??_mcp2515_read_canMsg+6,w
  3325     04BD  0080               	movwf	0
  3326     04BE  0A84               	incf	4,f
  3327     04BF  0827               	movf	??_mcp2515_read_canMsg+7,w
  3328     04C0  0080               	movwf	0
  3329     04C1  0A84               	incf	4,f
  3330     04C2  0828               	movf	??_mcp2515_read_canMsg+8,w
  3331     04C3  0080               	movwf	0
  3332     04C4                     l3277:
  3333                           
  3334                           ;mcp2515_can.c: 967:     *ext = 0;
  3335     04C4  0872               	movf	mcp2515_read_canMsg@ext,w
  3336     04C5  0084               	movwf	4
  3337     04C6  0180               	clrf	0
  3338     04C7                     l3279:
  3339                           
  3340                           ;mcp2515_can.c: 968:     if ((tbufdata[1] & 0x08) == 0x08) {
  3341     04C7  1DF8               	btfss	mcp2515_read_canMsg@tbufdata+1,3
  3342     04C8  2CCA               	goto	u1301
  3343     04C9  2CCB               	goto	u1300
  3344     04CA                     u1301:
  3345     04CA  2D7E               	goto	l3285
  3346     04CB                     u1300:
  3347     04CB                     l3281:
  3348                           
  3349                           ;mcp2515_can.c: 970:         *id = (*id << 2) + (tbufdata[1] & 0x03);
  3350     04CB  0878               	movf	mcp2515_read_canMsg@tbufdata+1,w
  3351     04CC  3903               	andlw	3
  3352     04CD  00A0               	movwf	??_mcp2515_read_canMsg
  3353     04CE  01A1               	clrf	??_mcp2515_read_canMsg+1
  3354     04CF  01A2               	clrf	??_mcp2515_read_canMsg+2
  3355     04D0  01A3               	clrf	??_mcp2515_read_canMsg+3
  3356     04D1  0871               	movf	mcp2515_read_canMsg@id,w
  3357     04D2  0084               	movwf	4
  3358     04D3  0800               	movf	0,w
  3359     04D4  00A4               	movwf	??_mcp2515_read_canMsg+4
  3360     04D5  0A84               	incf	4,f
  3361     04D6  0800               	movf	0,w
  3362     04D7  00A5               	movwf	??_mcp2515_read_canMsg+5
  3363     04D8  0A84               	incf	4,f
  3364     04D9  0800               	movf	0,w
  3365     04DA  00A6               	movwf	??_mcp2515_read_canMsg+6
  3366     04DB  0A84               	incf	4,f
  3367     04DC  0800               	movf	0,w
  3368     04DD  00A7               	movwf	??_mcp2515_read_canMsg+7
  3369     04DE  3002               	movlw	2
  3370     04DF                     u1315:
  3371     04DF  1003               	clrc
  3372     04E0  0DA4               	rlf	??_mcp2515_read_canMsg+4,f
  3373     04E1  0DA5               	rlf	??_mcp2515_read_canMsg+5,f
  3374     04E2  0DA6               	rlf	??_mcp2515_read_canMsg+6,f
  3375     04E3  0DA7               	rlf	??_mcp2515_read_canMsg+7,f
  3376     04E4                     u1310:
  3377     04E4  3EFF               	addlw	-1
  3378     04E5  1D03               	skipz
  3379     04E6  2CDF               	goto	u1315
  3380     04E7  0824               	movf	??_mcp2515_read_canMsg+4,w
  3381     04E8  07A0               	addwf	??_mcp2515_read_canMsg,f
  3382     04E9  0825               	movf	??_mcp2515_read_canMsg+5,w
  3383     04EA  1803               	skipnc
  3384     04EB  0F25               	incfsz	??_mcp2515_read_canMsg+5,w
  3385     04EC  2CEE               	goto	u1320
  3386     04ED  2CEF               	goto	u1321
  3387     04EE                     u1320:
  3388     04EE  07A1               	addwf	??_mcp2515_read_canMsg+1,f
  3389     04EF                     u1321:
  3390     04EF  0826               	movf	??_mcp2515_read_canMsg+6,w
  3391     04F0  1803               	skipnc
  3392     04F1  0F26               	incfsz	??_mcp2515_read_canMsg+6,w
  3393     04F2  2CF4               	goto	u1322
  3394     04F3  2CF5               	goto	u1323
  3395     04F4                     u1322:
  3396     04F4  07A2               	addwf	??_mcp2515_read_canMsg+2,f
  3397     04F5                     u1323:
  3398     04F5  0827               	movf	??_mcp2515_read_canMsg+7,w
  3399     04F6  1803               	skipnc
  3400     04F7  0A27               	incf	??_mcp2515_read_canMsg+7,w
  3401     04F8  07A3               	addwf	??_mcp2515_read_canMsg+3,f
  3402     04F9  0871               	movf	mcp2515_read_canMsg@id,w
  3403     04FA  0084               	movwf	4
  3404     04FB  0820               	movf	??_mcp2515_read_canMsg,w
  3405     04FC  0080               	movwf	0
  3406     04FD  0A84               	incf	4,f
  3407     04FE  0821               	movf	??_mcp2515_read_canMsg+1,w
  3408     04FF  0080               	movwf	0
  3409     0500  0A84               	incf	4,f
  3410     0501  0822               	movf	??_mcp2515_read_canMsg+2,w
  3411     0502  0080               	movwf	0
  3412     0503  0A84               	incf	4,f
  3413     0504  0823               	movf	??_mcp2515_read_canMsg+3,w
  3414     0505  0080               	movwf	0
  3415                           
  3416                           ;mcp2515_can.c: 971:         *id = (*id << 8) + tbufdata[2];
  3417     0506  0879               	movf	mcp2515_read_canMsg@tbufdata+2,w
  3418     0507  00A0               	movwf	??_mcp2515_read_canMsg
  3419     0508  01A1               	clrf	??_mcp2515_read_canMsg+1
  3420     0509  01A2               	clrf	??_mcp2515_read_canMsg+2
  3421     050A  01A3               	clrf	??_mcp2515_read_canMsg+3
  3422     050B  0871               	movf	mcp2515_read_canMsg@id,w
  3423     050C  0084               	movwf	4
  3424     050D  0800               	movf	0,w
  3425     050E  00A4               	movwf	??_mcp2515_read_canMsg+4
  3426     050F  0A84               	incf	4,f
  3427     0510  0800               	movf	0,w
  3428     0511  00A5               	movwf	??_mcp2515_read_canMsg+5
  3429     0512  0A84               	incf	4,f
  3430     0513  0800               	movf	0,w
  3431     0514  00A6               	movwf	??_mcp2515_read_canMsg+6
  3432     0515  0A84               	incf	4,f
  3433     0516  0800               	movf	0,w
  3434     0517  00A7               	movwf	??_mcp2515_read_canMsg+7
  3435     0518  3008               	movlw	8
  3436     0519                     u1335:
  3437     0519  1003               	clrc
  3438     051A  0DA4               	rlf	??_mcp2515_read_canMsg+4,f
  3439     051B  0DA5               	rlf	??_mcp2515_read_canMsg+5,f
  3440     051C  0DA6               	rlf	??_mcp2515_read_canMsg+6,f
  3441     051D  0DA7               	rlf	??_mcp2515_read_canMsg+7,f
  3442     051E                     u1330:
  3443     051E  3EFF               	addlw	-1
  3444     051F  1D03               	skipz
  3445     0520  2D19               	goto	u1335
  3446     0521  0824               	movf	??_mcp2515_read_canMsg+4,w
  3447     0522  07A0               	addwf	??_mcp2515_read_canMsg,f
  3448     0523  0825               	movf	??_mcp2515_read_canMsg+5,w
  3449     0524  1803               	skipnc
  3450     0525  0F25               	incfsz	??_mcp2515_read_canMsg+5,w
  3451     0526  2D28               	goto	u1340
  3452     0527  2D29               	goto	u1341
  3453     0528                     u1340:
  3454     0528  07A1               	addwf	??_mcp2515_read_canMsg+1,f
  3455     0529                     u1341:
  3456     0529  0826               	movf	??_mcp2515_read_canMsg+6,w
  3457     052A  1803               	skipnc
  3458     052B  0F26               	incfsz	??_mcp2515_read_canMsg+6,w
  3459     052C  2D2E               	goto	u1342
  3460     052D  2D2F               	goto	u1343
  3461     052E                     u1342:
  3462     052E  07A2               	addwf	??_mcp2515_read_canMsg+2,f
  3463     052F                     u1343:
  3464     052F  0827               	movf	??_mcp2515_read_canMsg+7,w
  3465     0530  1803               	skipnc
  3466     0531  0A27               	incf	??_mcp2515_read_canMsg+7,w
  3467     0532  07A3               	addwf	??_mcp2515_read_canMsg+3,f
  3468     0533  0871               	movf	mcp2515_read_canMsg@id,w
  3469     0534  0084               	movwf	4
  3470     0535  0820               	movf	??_mcp2515_read_canMsg,w
  3471     0536  0080               	movwf	0
  3472     0537  0A84               	incf	4,f
  3473     0538  0821               	movf	??_mcp2515_read_canMsg+1,w
  3474     0539  0080               	movwf	0
  3475     053A  0A84               	incf	4,f
  3476     053B  0822               	movf	??_mcp2515_read_canMsg+2,w
  3477     053C  0080               	movwf	0
  3478     053D  0A84               	incf	4,f
  3479     053E  0823               	movf	??_mcp2515_read_canMsg+3,w
  3480     053F  0080               	movwf	0
  3481                           
  3482                           ;mcp2515_can.c: 972:         *id = (*id << 8) + tbufdata[3];
  3483     0540  087A               	movf	mcp2515_read_canMsg@tbufdata+3,w
  3484     0541  00A0               	movwf	??_mcp2515_read_canMsg
  3485     0542  01A1               	clrf	??_mcp2515_read_canMsg+1
  3486     0543  01A2               	clrf	??_mcp2515_read_canMsg+2
  3487     0544  01A3               	clrf	??_mcp2515_read_canMsg+3
  3488     0545  0871               	movf	mcp2515_read_canMsg@id,w
  3489     0546  0084               	movwf	4
  3490     0547  0800               	movf	0,w
  3491     0548  00A4               	movwf	??_mcp2515_read_canMsg+4
  3492     0549  0A84               	incf	4,f
  3493     054A  0800               	movf	0,w
  3494     054B  00A5               	movwf	??_mcp2515_read_canMsg+5
  3495     054C  0A84               	incf	4,f
  3496     054D  0800               	movf	0,w
  3497     054E  00A6               	movwf	??_mcp2515_read_canMsg+6
  3498     054F  0A84               	incf	4,f
  3499     0550  0800               	movf	0,w
  3500     0551  00A7               	movwf	??_mcp2515_read_canMsg+7
  3501     0552  3008               	movlw	8
  3502     0553                     u1355:
  3503     0553  1003               	clrc
  3504     0554  0DA4               	rlf	??_mcp2515_read_canMsg+4,f
  3505     0555  0DA5               	rlf	??_mcp2515_read_canMsg+5,f
  3506     0556  0DA6               	rlf	??_mcp2515_read_canMsg+6,f
  3507     0557  0DA7               	rlf	??_mcp2515_read_canMsg+7,f
  3508     0558                     u1350:
  3509     0558  3EFF               	addlw	-1
  3510     0559  1D03               	skipz
  3511     055A  2D53               	goto	u1355
  3512     055B  0824               	movf	??_mcp2515_read_canMsg+4,w
  3513     055C  07A0               	addwf	??_mcp2515_read_canMsg,f
  3514     055D  0825               	movf	??_mcp2515_read_canMsg+5,w
  3515     055E  1803               	skipnc
  3516     055F  0F25               	incfsz	??_mcp2515_read_canMsg+5,w
  3517     0560  2D62               	goto	u1360
  3518     0561  2D63               	goto	u1361
  3519     0562                     u1360:
  3520     0562  07A1               	addwf	??_mcp2515_read_canMsg+1,f
  3521     0563                     u1361:
  3522     0563  0826               	movf	??_mcp2515_read_canMsg+6,w
  3523     0564  1803               	skipnc
  3524     0565  0F26               	incfsz	??_mcp2515_read_canMsg+6,w
  3525     0566  2D68               	goto	u1362
  3526     0567  2D69               	goto	u1363
  3527     0568                     u1362:
  3528     0568  07A2               	addwf	??_mcp2515_read_canMsg+2,f
  3529     0569                     u1363:
  3530     0569  0827               	movf	??_mcp2515_read_canMsg+7,w
  3531     056A  1803               	skipnc
  3532     056B  0A27               	incf	??_mcp2515_read_canMsg+7,w
  3533     056C  07A3               	addwf	??_mcp2515_read_canMsg+3,f
  3534     056D  0871               	movf	mcp2515_read_canMsg@id,w
  3535     056E  0084               	movwf	4
  3536     056F  0820               	movf	??_mcp2515_read_canMsg,w
  3537     0570  0080               	movwf	0
  3538     0571  0A84               	incf	4,f
  3539     0572  0821               	movf	??_mcp2515_read_canMsg+1,w
  3540     0573  0080               	movwf	0
  3541     0574  0A84               	incf	4,f
  3542     0575  0822               	movf	??_mcp2515_read_canMsg+2,w
  3543     0576  0080               	movwf	0
  3544     0577  0A84               	incf	4,f
  3545     0578  0823               	movf	??_mcp2515_read_canMsg+3,w
  3546     0579  0080               	movwf	0
  3547     057A                     l3283:
  3548                           
  3549                           ;mcp2515_can.c: 973:         *ext = 1;
  3550     057A  0872               	movf	mcp2515_read_canMsg@ext,w
  3551     057B  0084               	movwf	4
  3552     057C  3001               	movlw	1
  3553     057D  0080               	movwf	0
  3554     057E                     l3285:
  3555                           
  3556                           ;mcp2515_can.c: 976:     unsigned char pMsgSize = ReadSPI();
  3557     057E  120A  118A  2005  120A  118A  	fcall	_ReadSPI
  3558     0583  00FB               	movwf	mcp2515_read_canMsg@pMsgSize
  3559     0584                     l3287:
  3560                           
  3561                           ;mcp2515_can.c: 977:     *len = pMsgSize & 0x0F;
  3562     0584  0874               	movf	mcp2515_read_canMsg@len,w
  3563     0585  0084               	movwf	4
  3564     0586  087B               	movf	mcp2515_read_canMsg@pMsgSize,w
  3565     0587  390F               	andlw	15
  3566     0588  1383               	bcf	3,7	;select IRP bank0
  3567     0589  0080               	movwf	0
  3568     058A                     l3289:
  3569                           
  3570                           ;mcp2515_can.c: 978:     *rtrBit = (pMsgSize & 0x40) ? 1 : 0;
  3571     058A  0873               	movf	mcp2515_read_canMsg@rtrBit,w
  3572     058B  0084               	movwf	4
  3573     058C  1B7B               	btfsc	mcp2515_read_canMsg@pMsgSize,6
  3574     058D  2D8F               	goto	u1371
  3575     058E  2D91               	goto	u1370
  3576     058F                     u1371:
  3577     058F  3001               	movlw	1
  3578     0590  2D92               	goto	u1380
  3579     0591                     u1370:
  3580     0591  3000               	movlw	0
  3581     0592                     u1380:
  3582     0592  0080               	movwf	0
  3583     0593                     l3291:
  3584                           
  3585                           ;mcp2515_can.c: 979:     for (i = 0; i < *len && i < (8); i++) {
  3586     0593  01FC               	clrf	mcp2515_read_canMsg@i
  3587     0594  2DA7               	goto	l3297
  3588     0595                     l3293:
  3589                           
  3590                           ;mcp2515_can.c: 980:         buf[i] = ReadSPI();
  3591     0595  087C               	movf	mcp2515_read_canMsg@i,w
  3592     0596  0775               	addwf	mcp2515_read_canMsg@buf,w
  3593     0597  1283               	bcf	3,5	;RP0=0, select bank0
  3594     0598  1303               	bcf	3,6	;RP1=0, select bank0
  3595     0599  00A0               	movwf	??_mcp2515_read_canMsg
  3596     059A  0820               	movf	??_mcp2515_read_canMsg,w
  3597     059B  0084               	movwf	4
  3598     059C  120A  118A  2005  120A  118A  	fcall	_ReadSPI
  3599     05A1  1383               	bcf	3,7	;select IRP bank0
  3600     05A2  0080               	movwf	0
  3601     05A3                     l3295:
  3602                           
  3603                           ;mcp2515_can.c: 981:     }
  3604     05A3  3001               	movlw	1
  3605     05A4  00FF               	movwf	btemp+1
  3606     05A5  087F               	movf	btemp+1,w
  3607     05A6  07FC               	addwf	mcp2515_read_canMsg@i,f
  3608     05A7                     l3297:
  3609     05A7  0874               	movf	mcp2515_read_canMsg@len,w
  3610     05A8  0084               	movwf	4
  3611     05A9  0800               	movf	0,w
  3612     05AA  027C               	subwf	mcp2515_read_canMsg@i,w
  3613     05AB  1803               	skipnc
  3614     05AC  2DAE               	goto	u1391
  3615     05AD  2DAF               	goto	u1390
  3616     05AE                     u1391:
  3617     05AE  2DB5               	goto	l337
  3618     05AF                     u1390:
  3619     05AF                     l3299:
  3620     05AF  3008               	movlw	8
  3621     05B0  027C               	subwf	mcp2515_read_canMsg@i,w
  3622     05B1  1C03               	skipc
  3623     05B2  2DB4               	goto	u1401
  3624     05B3  2DB5               	goto	u1400
  3625     05B4                     u1401:
  3626     05B4  2D95               	goto	l3293
  3627     05B5                     u1400:
  3628     05B5                     l337:
  3629                           
  3630                           ;mcp2515_can.c: 983:     RD0 = 1;;
  3631     05B5  1283               	bcf	3,5	;RP0=0, select bank0
  3632     05B6  1303               	bcf	3,6	;RP1=0, select bank0
  3633     05B7  1408               	bsf	8,0	;volatile
  3634     05B8                     l338:
  3635     05B8  0008               	return
  3636     05B9                     __end_of_mcp2515_read_canMsg:
  3637                           
  3638                           	psect	text16
  3639     0D93                     __ptext16:	
  3640 ;; *************** function _init_CS *****************
  3641 ;; Defined at:
  3642 ;;		line 17 in file "mcp_can.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;		None
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;		None
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  1    wreg      void 
  3649 ;; Registers used:
  3650 ;;		None
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3656 ;;      Params:         0       0       0       0       0
  3657 ;;      Locals:         0       0       0       0       0
  3658 ;;      Temps:          0       0       0       0       0
  3659 ;;      Totals:         0       0       0       0       0
  3660 ;;Total ram usage:        0 bytes
  3661 ;; Hardware stack levels used: 1
  3662 ;; This function calls:
  3663 ;;		Nothing
  3664 ;; This function is called by:
  3665 ;;		_main
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669     0D93                     _init_CS:	
  3670                           ;psect for function _init_CS
  3671                           
  3672     0D93                     l3513:	
  3673                           ;incstack = 0
  3674                           ; Regs used in _init_CS: []
  3675                           
  3676                           
  3677                           ;mcp_can.c: 23:     TRISD0 = 0;
  3678     0D93  1683               	bsf	3,5	;RP0=1, select bank1
  3679     0D94  1303               	bcf	3,6	;RP1=0, select bank1
  3680     0D95  1008               	bcf	8,0	;volatile
  3681                           
  3682                           ;mcp_can.c: 24:     RD0 = 1;
  3683     0D96  1283               	bcf	3,5	;RP0=0, select bank0
  3684     0D97  1303               	bcf	3,6	;RP1=0, select bank0
  3685     0D98  1408               	bsf	8,0	;volatile
  3686     0D99                     l15:
  3687     0D99  0008               	return
  3688     0D9A                     __end_of_init_CS:
  3689                           
  3690                           	psect	text17
  3691     0DAA                     __ptext17:	
  3692 ;; *************** function _getCanId *****************
  3693 ;; Defined at:
  3694 ;;		line 27 in file "main.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;		None
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;		None
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  4    0[COMMON] unsigned long 
  3701 ;; Registers used:
  3702 ;;		wreg
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3708 ;;      Params:         4       0       0       0       0
  3709 ;;      Locals:         0       0       0       0       0
  3710 ;;      Temps:          0       0       0       0       0
  3711 ;;      Totals:         4       0       0       0       0
  3712 ;;Total ram usage:        4 bytes
  3713 ;; Hardware stack levels used: 1
  3714 ;; This function calls:
  3715 ;;		Nothing
  3716 ;; This function is called by:
  3717 ;;		_main
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           
  3721     0DAA                     _getCanId:	
  3722                           ;psect for function _getCanId
  3723                           
  3724     0DAA                     l3519:	
  3725                           ;incstack = 0
  3726                           ; Regs used in _getCanId: [wreg]
  3727                           
  3728     0DAA  1283               	bcf	3,5	;RP0=0, select bank0
  3729     0DAB  1303               	bcf	3,6	;RP1=0, select bank0
  3730     0DAC  0862               	movf	_can_id+3,w
  3731     0DAD  00F3               	movwf	?_getCanId+3
  3732     0DAE  0861               	movf	_can_id+2,w
  3733     0DAF  00F2               	movwf	?_getCanId+2
  3734     0DB0  0860               	movf	_can_id+1,w
  3735     0DB1  00F1               	movwf	?_getCanId+1
  3736     0DB2  085F               	movf	_can_id,w
  3737     0DB3  00F0               	movwf	?_getCanId
  3738     0DB4                     l51:
  3739     0DB4  0008               	return
  3740     0DB5                     __end_of_getCanId:
  3741                           
  3742                           	psect	text18
  3743     0E28                     __ptext18:	
  3744 ;; *************** function _checkReceive *****************
  3745 ;; Defined at:
  3746 ;;		line 1387 in file "mcp2515_can.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;  res             1    4[COMMON] unsigned char 
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      unsigned char 
  3753 ;; Registers used:
  3754 ;;		wreg, status,2, status,0, pclath, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3760 ;;      Params:         0       0       0       0       0
  3761 ;;      Locals:         3       0       0       0       0
  3762 ;;      Temps:          0       0       0       0       0
  3763 ;;      Totals:         3       0       0       0       0
  3764 ;;Total ram usage:        3 bytes
  3765 ;; Hardware stack levels used: 1
  3766 ;; Hardware stack levels required when called: 2
  3767 ;; This function calls:
  3768 ;;		_mcp2515_readStatus
  3769 ;; This function is called by:
  3770 ;;		_main
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774     0E28                     _checkReceive:	
  3775                           ;psect for function _checkReceive
  3776                           
  3777     0E28                     l3533:	
  3778                           ;incstack = 0
  3779                           ; Regs used in _checkReceive: [wreg+status,2+status,0+pclath+cstack]
  3780                           
  3781                           
  3782                           ;mcp2515_can.c: 1388:     unsigned char res;;mcp2515_can.c: 1389:     res = mcp2515_read
      +                          Status();
  3783     0E28  120A  158A  25FE  120A  158A  	fcall	_mcp2515_readStatus
  3784     0E2D  00F4               	movwf	checkReceive@res
  3785     0E2E                     l3535:
  3786                           
  3787                           ;mcp2515_can.c: 1390:     return ((res & (0x03)) ? (3) : (4));
  3788     0E2E  0874               	movf	checkReceive@res,w
  3789     0E2F  3903               	andlw	3
  3790     0E30  1D03               	btfss	3,2
  3791     0E31  2E33               	goto	u1681
  3792     0E32  2E34               	goto	u1680
  3793     0E33                     u1681:
  3794     0E33  2E39               	goto	l3539
  3795     0E34                     u1680:
  3796     0E34                     l3537:
  3797     0E34  3004               	movlw	4
  3798     0E35  00F2               	movwf	_checkReceive$438
  3799     0E36  3000               	movlw	0
  3800     0E37  00F3               	movwf	_checkReceive$438+1
  3801     0E38  2E3D               	goto	l462
  3802     0E39                     l3539:
  3803     0E39  3003               	movlw	3
  3804     0E3A  00F2               	movwf	_checkReceive$438
  3805     0E3B  3000               	movlw	0
  3806     0E3C  00F3               	movwf	_checkReceive$438+1
  3807     0E3D                     l462:
  3808     0E3D  0872               	movf	_checkReceive$438,w
  3809     0E3E                     l463:
  3810     0E3E  0008               	return
  3811     0E3F                     __end_of_checkReceive:
  3812                           
  3813                           	psect	text19
  3814     0DFE                     __ptext19:	
  3815 ;; *************** function _mcp2515_readStatus *****************
  3816 ;; Defined at:
  3817 ;;		line 275 in file "mcp2515_can.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;		None
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;  i               1    1[COMMON] unsigned char 
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      unsigned char 
  3824 ;; Registers used:
  3825 ;;		wreg, status,2, status,0, pclath, cstack
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3831 ;;      Params:         0       0       0       0       0
  3832 ;;      Locals:         1       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0
  3834 ;;      Totals:         1       0       0       0       0
  3835 ;;Total ram usage:        1 bytes
  3836 ;; Hardware stack levels used: 1
  3837 ;; Hardware stack levels required when called: 1
  3838 ;; This function calls:
  3839 ;;		_ReadSPI
  3840 ;;		_WriteSPI
  3841 ;; This function is called by:
  3842 ;;		_mcp2515_getNextFreeTXBuf
  3843 ;;		_readRxTxStatus
  3844 ;;		_checkReceive
  3845 ;;		_mcp2515_isTXBufFree
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849     0DFE                     _mcp2515_readStatus:	
  3850                           ;psect for function _mcp2515_readStatus
  3851                           
  3852     0DFE                     l2917:	
  3853                           ;incstack = 0
  3854                           ; Regs used in _mcp2515_readStatus: [wreg+status,2+status,0+pclath+cstack]
  3855                           
  3856                           
  3857                           ;mcp2515_can.c: 276:     unsigned char i;;mcp2515_can.c: 280:     RD0 = 0;;
  3858     0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  3859     0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  3860     0E00  1008               	bcf	8,0	;volatile
  3861     0E01                     l2919:
  3862                           
  3863                           ;mcp2515_can.c: 281:     WriteSPI(0xA0);
  3864     0E01  30A0               	movlw	160
  3865     0E02  120A  158A  25B5  120A  158A  	fcall	_WriteSPI
  3866     0E07                     l2921:
  3867                           
  3868                           ;mcp2515_can.c: 282:     i = ReadSPI();
  3869     0E07  120A  118A  2005  120A  158A  	fcall	_ReadSPI
  3870     0E0C  00F1               	movwf	mcp2515_readStatus@i
  3871     0E0D                     l2923:
  3872                           
  3873                           ;mcp2515_can.c: 283:     RD0 = 1;;
  3874     0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  3875     0E0E  1303               	bcf	3,6	;RP1=0, select bank0
  3876     0E0F  1408               	bsf	8,0	;volatile
  3877     0E10                     l2925:
  3878                           
  3879                           ;mcp2515_can.c: 288:     return i;
  3880     0E10  0871               	movf	mcp2515_readStatus@i,w
  3881     0E11                     l179:
  3882     0E11  0008               	return
  3883     0E12                     __end_of_mcp2515_readStatus:
  3884                           
  3885                           	psect	text20
  3886     0F36                     __ptext20:	
  3887 ;; *************** function _begin *****************
  3888 ;; Defined at:
  3889 ;;		line 1049 in file "mcp2515_can.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  speedset        4    5[BANK0 ] unsigned long 
  3892 ;;  clockset        1    9[BANK0 ] const unsigned char 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  res             1   10[BANK0 ] unsigned char 
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  1    wreg      unsigned char 
  3897 ;; Registers used:
  3898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3904 ;;      Params:         0       5       0       0       0
  3905 ;;      Locals:         0       1       0       0       0
  3906 ;;      Temps:          0       0       0       0       0
  3907 ;;      Totals:         0       6       0       0       0
  3908 ;;Total ram usage:        6 bytes
  3909 ;; Hardware stack levels used: 1
  3910 ;; Hardware stack levels required when called: 6
  3911 ;; This function calls:
  3912 ;;		_OpenSPI
  3913 ;;		_mcp2515_init
  3914 ;; This function is called by:
  3915 ;;		_main
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919     0F36                     _begin:	
  3920                           ;psect for function _begin
  3921                           
  3922     0F36                     l3523:	
  3923                           ;incstack = 0
  3924                           ; Regs used in _begin: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3925                           
  3926                           
  3927                           ;mcp2515_can.c: 1050:     OpenSPI(0, 0, 0x80);
  3928     0F36  01F0               	clrf	OpenSPI@bus_mode
  3929     0F37  3080               	movlw	128
  3930     0F38  00F1               	movwf	OpenSPI@smp_phase
  3931     0F39  3000               	movlw	0
  3932     0F3A  120A  118A  20D0  120A  158A  	fcall	_OpenSPI
  3933                           
  3934                           ;mcp2515_can.c: 1051:     unsigned char res = mcp2515_init((unsigned char)speedset, cloc
      +                          kset);
  3935     0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3936     0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3937     0F41  0829               	movf	begin@clockset,w
  3938     0F42  00A0               	movwf	mcp2515_init@clock
  3939     0F43  0825               	movf	begin@speedset,w
  3940     0F44  120A  118A  2281  120A  158A  	fcall	_mcp2515_init
  3941     0F49  1283               	bcf	3,5	;RP0=0, select bank0
  3942     0F4A  1303               	bcf	3,6	;RP1=0, select bank0
  3943     0F4B  00AA               	movwf	begin@res
  3944     0F4C                     l3525:
  3945                           
  3946                           ;mcp2515_can.c: 1053:     return ((res == (0)) ? (0) : (1));
  3947     0F4C  082A               	movf	begin@res,w
  3948     0F4D  1D03               	btfss	3,2
  3949     0F4E  2F50               	goto	u1661
  3950     0F4F  2F52               	goto	u1660
  3951     0F50                     u1661:
  3952     0F50  3001               	movlw	1
  3953     0F51  2F53               	goto	u1670
  3954     0F52                     u1660:
  3955     0F52  3000               	movlw	0
  3956     0F53                     u1670:
  3957     0F53                     l358:
  3958     0F53  0008               	return
  3959     0F54                     __end_of_begin:
  3960                           
  3961                           	psect	text21
  3962     0281                     __ptext21:	
  3963 ;; *************** function _mcp2515_init *****************
  3964 ;; Defined at:
  3965 ;;		line 772 in file "mcp2515_can.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  canSpeed        1    wreg     const unsigned char 
  3968 ;;  clock           1    0[BANK0 ] const unsigned char 
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  canSpeed        1    3[BANK0 ] const unsigned char 
  3971 ;;  res             1    4[BANK0 ] unsigned char 
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1    wreg      unsigned char 
  3974 ;; Registers used:
  3975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3981 ;;      Params:         0       1       0       0       0
  3982 ;;      Locals:         0       2       0       0       0
  3983 ;;      Temps:          0       2       0       0       0
  3984 ;;      Totals:         0       5       0       0       0
  3985 ;;Total ram usage:        5 bytes
  3986 ;; Hardware stack levels used: 1
  3987 ;; Hardware stack levels required when called: 5
  3988 ;; This function calls:
  3989 ;;		_mcp2515_configRate
  3990 ;;		_mcp2515_initCANBuffers
  3991 ;;		_mcp2515_modifyRegister
  3992 ;;		_mcp2515_reset
  3993 ;;		_mcp2515_setCANCTRL_Mode
  3994 ;;		_mcp2515_setRegister
  3995 ;;		_setMode
  3996 ;; This function is called by:
  3997 ;;		_begin
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001     0281                     _mcp2515_init:	
  4002                           ;psect for function _mcp2515_init
  4003                           
  4004                           
  4005                           ;incstack = 0
  4006                           ; Regs used in _mcp2515_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4007                           ;mcp2515_init@canSpeed stored from wreg
  4008     0281  1283               	bcf	3,5	;RP0=0, select bank0
  4009     0282  1303               	bcf	3,6	;RP1=0, select bank0
  4010     0283  00A3               	movwf	mcp2515_init@canSpeed
  4011     0284                     l3395:
  4012                           
  4013                           ;mcp2515_can.c: 774:     unsigned char res;;mcp2515_can.c: 776:     mcp2515_reset();
  4014     0284  120A  158A  2612  120A  118A  	fcall	_mcp2515_reset
  4015     0289                     l3397:
  4016                           
  4017                           ;mcp2515_can.c: 778:     res = mcp2515_setCANCTRL_Mode(0x80);
  4018     0289  3080               	movlw	128
  4019     028A  120A  118A  212C  120A  118A  	fcall	_mcp2515_setCANCTRL_Mode
  4020     028F  1283               	bcf	3,5	;RP0=0, select bank0
  4021     0290  1303               	bcf	3,6	;RP1=0, select bank0
  4022     0291  00A4               	movwf	mcp2515_init@res
  4023     0292                     l3399:
  4024                           
  4025                           ;mcp2515_can.c: 779:     if (res > 0) {
  4026     0292  0824               	movf	mcp2515_init@res,w
  4027     0293  1903               	btfsc	3,2
  4028     0294  2A96               	goto	u1521
  4029     0295  2A97               	goto	u1520
  4030     0296                     u1521:
  4031     0296  2AA5               	goto	l3405
  4032     0297                     u1520:
  4033     0297                     l3401:
  4034                           
  4035                           ;mcp2515_can.c: 783:         _delay((unsigned long)((10)*(4000000/4000.0)));
  4036     0297  300D               	movlw	13
  4037     0298  1283               	bcf	3,5	;RP0=0, select bank0
  4038     0299  1303               	bcf	3,6	;RP1=0, select bank0
  4039     029A  00A2               	movwf	??_mcp2515_init+1
  4040     029B  30FB               	movlw	251
  4041     029C  00A1               	movwf	??_mcp2515_init
  4042     029D                     u2167:
  4043     029D  0BA1               	decfsz	??_mcp2515_init,f
  4044     029E  2A9D               	goto	u2167
  4045     029F  0BA2               	decfsz	??_mcp2515_init+1,f
  4046     02A0  2A9D               	goto	u2167
  4047                           
  4048                           ;mcp2515_can.c: 785:         return res;
  4049     02A1  1283               	bcf	3,5	;RP0=0, select bank0
  4050     02A2  1303               	bcf	3,6	;RP1=0, select bank0
  4051     02A3  0824               	movf	mcp2515_init@res,w
  4052     02A4  2B0C               	goto	l298
  4053     02A5                     l3405:
  4054                           
  4055                           ;mcp2515_can.c: 790:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4056     02A5  300D               	movlw	13
  4057     02A6  1283               	bcf	3,5	;RP0=0, select bank0
  4058     02A7  1303               	bcf	3,6	;RP1=0, select bank0
  4059     02A8  00A2               	movwf	??_mcp2515_init+1
  4060     02A9  30FB               	movlw	251
  4061     02AA  00A1               	movwf	??_mcp2515_init
  4062     02AB                     u2177:
  4063     02AB  0BA1               	decfsz	??_mcp2515_init,f
  4064     02AC  2AAB               	goto	u2177
  4065     02AD  0BA2               	decfsz	??_mcp2515_init+1,f
  4066     02AE  2AAB               	goto	u2177
  4067     02AF                     l3407:
  4068                           
  4069                           ;mcp2515_can.c: 794:     if (mcp2515_configRate(canSpeed, clock)) {
  4070     02AF  1283               	bcf	3,5	;RP0=0, select bank0
  4071     02B0  1303               	bcf	3,6	;RP1=0, select bank0
  4072     02B1  0820               	movf	mcp2515_init@clock,w
  4073     02B2  00F3               	movwf	mcp2515_configRate@clock
  4074     02B3  0823               	movf	mcp2515_init@canSpeed,w
  4075     02B4  120A  118A  25B9  120A  118A  	fcall	_mcp2515_configRate
  4076     02B9  3A00               	xorlw	0
  4077     02BA  1903               	skipnz
  4078     02BB  2ABD               	goto	u1531
  4079     02BC  2ABE               	goto	u1530
  4080     02BD                     u1531:
  4081     02BD  2ABF               	goto	l3413
  4082     02BE                     u1530:
  4083     02BE  2A97               	goto	l3401
  4084     02BF                     l3413:
  4085                           
  4086                           ;mcp2515_can.c: 805:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4087     02BF  300D               	movlw	13
  4088     02C0  1283               	bcf	3,5	;RP0=0, select bank0
  4089     02C1  1303               	bcf	3,6	;RP1=0, select bank0
  4090     02C2  00A2               	movwf	??_mcp2515_init+1
  4091     02C3  30FB               	movlw	251
  4092     02C4  00A1               	movwf	??_mcp2515_init
  4093     02C5                     u2187:
  4094     02C5  0BA1               	decfsz	??_mcp2515_init,f
  4095     02C6  2AC5               	goto	u2187
  4096     02C7  0BA2               	decfsz	??_mcp2515_init+1,f
  4097     02C8  2AC5               	goto	u2187
  4098     02C9                     l3415:
  4099                           
  4100                           ;mcp2515_can.c: 808:     if (res == (0)) {
  4101     02C9  1283               	bcf	3,5	;RP0=0, select bank0
  4102     02CA  1303               	bcf	3,6	;RP1=0, select bank0
  4103     02CB  0824               	movf	mcp2515_init@res,w
  4104     02CC  1D03               	btfss	3,2
  4105     02CD  2ACF               	goto	u1541
  4106     02CE  2AD0               	goto	u1540
  4107     02CF                     u1541:
  4108     02CF  2B09               	goto	l300
  4109     02D0                     u1540:
  4110     02D0                     l3417:
  4111                           
  4112                           ;mcp2515_can.c: 811:         mcp2515_initCANBuffers();
  4113     02D0  120A  158A  27BF  120A  118A  	fcall	_mcp2515_initCANBuffers
  4114     02D5                     l3419:
  4115                           
  4116                           ;mcp2515_can.c: 814:         mcp2515_setRegister(0x2B, 0x01 | 0x02);
  4117     02D5  3003               	movlw	3
  4118     02D6  00F1               	movwf	mcp2515_setRegister@value
  4119     02D7  302B               	movlw	43
  4120     02D8  120A  158A  2657  120A  118A  	fcall	_mcp2515_setRegister
  4121     02DD                     l3421:
  4122                           
  4123                           ;mcp2515_can.c: 825:         mcp2515_modifyRegister(0x60,
  4124     02DD  3064               	movlw	100
  4125     02DE  00F3               	movwf	mcp2515_modifyRegister@mask
  4126     02DF  3004               	movlw	4
  4127     02E0  00F4               	movwf	mcp2515_modifyRegister@data
  4128     02E1  3060               	movlw	96
  4129     02E2  120A  118A  2012  120A  118A  	fcall	_mcp2515_modifyRegister
  4130     02E7                     l3423:
  4131                           
  4132                           ;mcp2515_can.c: 828:         mcp2515_modifyRegister(0x70, 0x60,
  4133     02E7  3060               	movlw	96
  4134     02E8  00F3               	movwf	mcp2515_modifyRegister@mask
  4135     02E9  01F4               	clrf	mcp2515_modifyRegister@data
  4136     02EA  3070               	movlw	112
  4137     02EB  120A  118A  2012  120A  118A  	fcall	_mcp2515_modifyRegister
  4138     02F0                     l3425:
  4139                           
  4140                           ;mcp2515_can.c: 832:         res = setMode(0x00);
  4141     02F0  3000               	movlw	0
  4142     02F1  120A  158A  25C6  120A  118A  	fcall	_setMode
  4143     02F6  1283               	bcf	3,5	;RP0=0, select bank0
  4144     02F7  1303               	bcf	3,6	;RP1=0, select bank0
  4145     02F8  00A4               	movwf	mcp2515_init@res
  4146     02F9                     l3427:
  4147                           
  4148                           ;mcp2515_can.c: 833:         if (res) {
  4149     02F9  0824               	movf	mcp2515_init@res,w
  4150     02FA  1903               	btfsc	3,2
  4151     02FB  2AFD               	goto	u1551
  4152     02FC  2AFE               	goto	u1550
  4153     02FD                     u1551:
  4154     02FD  2AFF               	goto	l3433
  4155     02FE                     u1550:
  4156     02FE  2A97               	goto	l3401
  4157     02FF                     l3433:
  4158                           
  4159                           ;mcp2515_can.c: 846:         _delay((unsigned long)((10)*(4000000/4000.0)));
  4160     02FF  300D               	movlw	13
  4161     0300  1283               	bcf	3,5	;RP0=0, select bank0
  4162     0301  1303               	bcf	3,6	;RP1=0, select bank0
  4163     0302  00A2               	movwf	??_mcp2515_init+1
  4164     0303  30FB               	movlw	251
  4165     0304  00A1               	movwf	??_mcp2515_init
  4166     0305                     u2197:
  4167     0305  0BA1               	decfsz	??_mcp2515_init,f
  4168     0306  2B05               	goto	u2197
  4169     0307  0BA2               	decfsz	??_mcp2515_init+1,f
  4170     0308  2B05               	goto	u2197
  4171     0309                     l300:	
  4172                           ;mcp2515_can.c: 849:     }
  4173                           
  4174                           
  4175                           ;mcp2515_can.c: 850:     return res;
  4176     0309  1283               	bcf	3,5	;RP0=0, select bank0
  4177     030A  1303               	bcf	3,6	;RP1=0, select bank0
  4178     030B  0824               	movf	mcp2515_init@res,w
  4179     030C                     l298:
  4180     030C  0008               	return
  4181     030D                     __end_of_mcp2515_init:
  4182                           
  4183                           	psect	text22
  4184     0DC6                     __ptext22:	
  4185 ;; *************** function _setMode *****************
  4186 ;; Defined at:
  4187 ;;		line 328 in file "mcp2515_can.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;  opMode          1    wreg     const unsigned char 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  opMode          1   13[COMMON] const unsigned char 
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  1    wreg      unsigned char 
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4201 ;;      Params:         0       0       0       0       0
  4202 ;;      Locals:         1       0       0       0       0
  4203 ;;      Temps:          0       0       0       0       0
  4204 ;;      Totals:         1       0       0       0       0
  4205 ;;Total ram usage:        1 bytes
  4206 ;; Hardware stack levels used: 1
  4207 ;; Hardware stack levels required when called: 4
  4208 ;; This function calls:
  4209 ;;		_mcp2515_setCANCTRL_Mode
  4210 ;; This function is called by:
  4211 ;;		_mcp2515_init
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215     0DC6                     _setMode:	
  4216                           ;psect for function _setMode
  4217                           
  4218                           
  4219                           ;incstack = 0
  4220                           ; Regs used in _setMode: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4221                           ;setMode@opMode stored from wreg
  4222     0DC6  00FD               	movwf	setMode@opMode
  4223     0DC7                     l2985:
  4224                           
  4225                           ;mcp2515_can.c: 329:     if (opMode != 0x20)
  4226     0DC7  3020               	movlw	32
  4227     0DC8  067D               	xorwf	setMode@opMode,w
  4228     0DC9  1903               	btfsc	3,2
  4229     0DCA  2DCC               	goto	u1211
  4230     0DCB  2DCD               	goto	u1210
  4231     0DCC                     u1211:
  4232     0DCC  2DD1               	goto	l2989
  4233     0DCD                     u1210:
  4234     0DCD                     l2987:
  4235                           
  4236                           ;mcp2515_can.c: 330:         mcpMode = opMode;
  4237     0DCD  087D               	movf	setMode@opMode,w
  4238     0DCE  1283               	bcf	3,5	;RP0=0, select bank0
  4239     0DCF  1303               	bcf	3,6	;RP1=0, select bank0
  4240     0DD0  00DE               	movwf	_mcpMode
  4241     0DD1                     l2989:
  4242                           
  4243                           ;mcp2515_can.c: 331:     return mcp2515_setCANCTRL_Mode(opMode);
  4244     0DD1  087D               	movf	setMode@opMode,w
  4245     0DD2  120A  118A  212C  120A  158A  	fcall	_mcp2515_setCANCTRL_Mode
  4246     0DD7                     l200:
  4247     0DD7  0008               	return
  4248     0DD8                     __end_of_setMode:
  4249                           
  4250                           	psect	text23
  4251     012C                     __ptext23:	
  4252 ;; *************** function _mcp2515_setCANCTRL_Mode *****************
  4253 ;; Defined at:
  4254 ;;		line 346 in file "mcp2515_can.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;  newmode         1    wreg     const unsigned char 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;  newmode         1   11[COMMON] const unsigned char 
  4259 ;;  wakeIntEnabl    1   12[COMMON] unsigned char 
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  1    wreg      unsigned char 
  4262 ;; Registers used:
  4263 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4269 ;;      Params:         0       0       0       0       0
  4270 ;;      Locals:         2       0       0       0       0
  4271 ;;      Temps:          0       0       0       0       0
  4272 ;;      Totals:         2       0       0       0       0
  4273 ;;Total ram usage:        2 bytes
  4274 ;; Hardware stack levels used: 1
  4275 ;; Hardware stack levels required when called: 3
  4276 ;; This function calls:
  4277 ;;		_getMode
  4278 ;;		_mcp2515_modifyRegister
  4279 ;;		_mcp2515_readRegister
  4280 ;;		_mcp2515_requestNewMode
  4281 ;; This function is called by:
  4282 ;;		_setMode
  4283 ;;		_mcp2515_init
  4284 ;;		_sleep
  4285 ;;		_wake
  4286 ;;		_init_Mask
  4287 ;;		_init_Filt
  4288 ;;		_mcpPinMode
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292     012C                     _mcp2515_setCANCTRL_Mode:	
  4293                           ;psect for function _mcp2515_setCANCTRL_Mode
  4294                           
  4295                           
  4296                           ;incstack = 0
  4297                           ; Regs used in _mcp2515_setCANCTRL_Mode: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4298                           ;mcp2515_setCANCTRL_Mode@newmode stored from wreg
  4299     012C  00FB               	movwf	mcp2515_setCANCTRL_Mode@newmode
  4300     012D                     l2929:
  4301                           
  4302                           ;mcp2515_can.c: 350:     if ((getMode()) == 0x20 && newmode != 0x20) {
  4303     012D  120A  158A  259A  120A  118A  	fcall	_getMode
  4304     0132  3A20               	xorlw	32
  4305     0133  1D03               	skipz
  4306     0134  2936               	goto	u1111
  4307     0135  2937               	goto	u1110
  4308     0136                     u1111:
  4309     0136  2979               	goto	l206
  4310     0137                     u1110:
  4311     0137                     l2931:
  4312     0137  3020               	movlw	32
  4313     0138  067B               	xorwf	mcp2515_setCANCTRL_Mode@newmode,w
  4314     0139  1903               	btfsc	3,2
  4315     013A  293C               	goto	u1121
  4316     013B  293D               	goto	u1120
  4317     013C                     u1121:
  4318     013C  2979               	goto	l206
  4319     013D                     u1120:
  4320     013D                     l2933:
  4321                           
  4322                           ;mcp2515_can.c: 352:         unsigned char wakeIntEnabled = (mcp2515_readRegister(0x2B) 
      +                          & 0x40);
  4323     013D  302B               	movlw	43
  4324     013E  120A  158A  268B  120A  118A  	fcall	_mcp2515_readRegister
  4325     0143  3940               	andlw	64
  4326     0144  00FC               	movwf	mcp2515_setCANCTRL_Mode@wakeIntEnabled
  4327     0145                     l2935:
  4328                           
  4329                           ;mcp2515_can.c: 353:         if (!wakeIntEnabled) {
  4330     0145  087C               	movf	mcp2515_setCANCTRL_Mode@wakeIntEnabled,w
  4331     0146  1D03               	btfss	3,2
  4332     0147  2949               	goto	u1131
  4333     0148  294A               	goto	u1130
  4334     0149                     u1131:
  4335     0149  2954               	goto	l207
  4336     014A                     u1130:
  4337     014A                     l2937:
  4338                           
  4339                           ;mcp2515_can.c: 354:             mcp2515_modifyRegister(0x2B, 0x40, 0x40);
  4340     014A  3040               	movlw	64
  4341     014B  00F3               	movwf	mcp2515_modifyRegister@mask
  4342     014C  3040               	movlw	64
  4343     014D  00F4               	movwf	mcp2515_modifyRegister@data
  4344     014E  302B               	movlw	43
  4345     014F  120A  118A  2012  120A  118A  	fcall	_mcp2515_modifyRegister
  4346     0154                     l207:	
  4347                           ;mcp2515_can.c: 355:         }
  4348                           
  4349                           
  4350                           ;mcp2515_can.c: 358:         mcp2515_modifyRegister(0x2C, 0x40, 0x40);
  4351     0154  3040               	movlw	64
  4352     0155  00F3               	movwf	mcp2515_modifyRegister@mask
  4353     0156  3040               	movlw	64
  4354     0157  00F4               	movwf	mcp2515_modifyRegister@data
  4355     0158  302C               	movlw	44
  4356     0159  120A  118A  2012  120A  118A  	fcall	_mcp2515_modifyRegister
  4357     015E                     l2939:
  4358                           
  4359                           ;mcp2515_can.c: 366:         if (mcp2515_requestNewMode(0x60) != (0)) {
  4360     015E  3060               	movlw	96
  4361     015F  120A  158A  2784  120A  118A  	fcall	_mcp2515_requestNewMode
  4362     0164  3A00               	xorlw	0
  4363     0165  1903               	skipnz
  4364     0166  2968               	goto	u1141
  4365     0167  2969               	goto	u1140
  4366     0168                     u1141:
  4367     0168  296B               	goto	l2945
  4368     0169                     u1140:
  4369     0169                     l2941:
  4370                           
  4371                           ;mcp2515_can.c: 367:             return (1);
  4372     0169  3001               	movlw	1
  4373     016A  2988               	goto	l209
  4374     016B                     l2945:
  4375                           
  4376                           ;mcp2515_can.c: 371:         if (!wakeIntEnabled) {
  4377     016B  087C               	movf	mcp2515_setCANCTRL_Mode@wakeIntEnabled,w
  4378     016C  1D03               	btfss	3,2
  4379     016D  296F               	goto	u1151
  4380     016E  2970               	goto	u1150
  4381     016F                     u1151:
  4382     016F  2979               	goto	l206
  4383     0170                     u1150:
  4384     0170                     l2947:
  4385                           
  4386                           ;mcp2515_can.c: 372:             mcp2515_modifyRegister(0x2B, 0x40, 0);
  4387     0170  3040               	movlw	64
  4388     0171  00F3               	movwf	mcp2515_modifyRegister@mask
  4389     0172  01F4               	clrf	mcp2515_modifyRegister@data
  4390     0173  302B               	movlw	43
  4391     0174  120A  118A  2012  120A  118A  	fcall	_mcp2515_modifyRegister
  4392     0179                     l206:	
  4393                           ;mcp2515_can.c: 374:     }
  4394                           
  4395                           
  4396                           ;mcp2515_can.c: 377:     mcp2515_modifyRegister(0x2C, 0x40, 0);
  4397     0179  3040               	movlw	64
  4398     017A  00F3               	movwf	mcp2515_modifyRegister@mask
  4399     017B  01F4               	clrf	mcp2515_modifyRegister@data
  4400     017C  302C               	movlw	44
  4401     017D  120A  118A  2012  120A  118A  	fcall	_mcp2515_modifyRegister
  4402     0182                     l2949:
  4403                           
  4404                           ;mcp2515_can.c: 379:     return mcp2515_requestNewMode(newmode);
  4405     0182  087B               	movf	mcp2515_setCANCTRL_Mode@newmode,w
  4406     0183  120A  158A  2784  120A  118A  	fcall	_mcp2515_requestNewMode
  4407     0188                     l209:
  4408     0188  0008               	return
  4409     0189                     __end_of_mcp2515_setCANCTRL_Mode:
  4410                           
  4411                           	psect	text24
  4412     0F84                     __ptext24:	
  4413 ;; *************** function _mcp2515_requestNewMode *****************
  4414 ;; Defined at:
  4415 ;;		line 386 in file "mcp2515_can.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  newmode         1    wreg     const unsigned char 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  newmode         1   10[COMMON] const unsigned char 
  4420 ;;  statReg         1    9[COMMON] unsigned char 
  4421 ;;  Count           2    7[COMMON] int 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      unsigned char 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4431 ;;      Params:         0       0       0       0       0
  4432 ;;      Locals:         4       0       0       0       0
  4433 ;;      Temps:          1       0       0       0       0
  4434 ;;      Totals:         5       0       0       0       0
  4435 ;;Total ram usage:        5 bytes
  4436 ;; Hardware stack levels used: 1
  4437 ;; Hardware stack levels required when called: 2
  4438 ;; This function calls:
  4439 ;;		_mcp2515_modifyRegister
  4440 ;;		_mcp2515_readRegister
  4441 ;; This function is called by:
  4442 ;;		_mcp2515_setCANCTRL_Mode
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446     0F84                     _mcp2515_requestNewMode:	
  4447                           ;psect for function _mcp2515_requestNewMode
  4448                           
  4449                           
  4450                           ;incstack = 0
  4451                           ; Regs used in _mcp2515_requestNewMode: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4452                           ;mcp2515_requestNewMode@newmode stored from wreg
  4453     0F84  00FA               	movwf	mcp2515_requestNewMode@newmode
  4454     0F85                     l2783:
  4455                           
  4456                           ;mcp2515_can.c: 387:     int Count = 0;
  4457     0F85  01F7               	clrf	mcp2515_requestNewMode@Count
  4458     0F86  01F8               	clrf	mcp2515_requestNewMode@Count+1
  4459     0F87                     l2785:
  4460                           
  4461                           ;mcp2515_can.c: 392:         mcp2515_modifyRegister(0x0F, 0xE0, newmode);
  4462     0F87  30E0               	movlw	224
  4463     0F88  00F3               	movwf	mcp2515_modifyRegister@mask
  4464     0F89  087A               	movf	mcp2515_requestNewMode@newmode,w
  4465     0F8A  00F4               	movwf	mcp2515_modifyRegister@data
  4466     0F8B  300F               	movlw	15
  4467     0F8C  120A  118A  2012  120A  158A  	fcall	_mcp2515_modifyRegister
  4468     0F91                     l2787:
  4469                           
  4470                           ;mcp2515_can.c: 394:         unsigned char statReg = mcp2515_readRegister(0x0E);
  4471     0F91  300E               	movlw	14
  4472     0F92  120A  158A  268B  120A  158A  	fcall	_mcp2515_readRegister
  4473     0F97  00F9               	movwf	mcp2515_requestNewMode@statReg
  4474     0F98                     l2789:
  4475                           
  4476                           ;mcp2515_can.c: 395:         if ((statReg & 0xE0) == newmode) {
  4477     0F98  0879               	movf	mcp2515_requestNewMode@statReg,w
  4478     0F99  39E0               	andlw	224
  4479     0F9A  067A               	xorwf	mcp2515_requestNewMode@newmode,w
  4480     0F9B  1D03               	skipz
  4481     0F9C  2F9E               	goto	u1091
  4482     0F9D  2F9F               	goto	u1090
  4483     0F9E                     u1091:
  4484     0F9E  2FA1               	goto	l2797
  4485     0F9F                     u1090:
  4486     0F9F                     l2791:
  4487                           
  4488                           ;mcp2515_can.c: 396:             return (0);
  4489     0F9F  3000               	movlw	0
  4490     0FA0  2FBE               	goto	l215
  4491     0FA1                     l2797:
  4492     0FA1  0878               	movf	mcp2515_requestNewMode@Count+1,w
  4493     0FA2  3A80               	xorlw	128
  4494     0FA3  00FF               	movwf	btemp+1
  4495     0FA4  3080               	movlw	128
  4496     0FA5  027F               	subwf	btemp+1,w
  4497     0FA6  1D03               	skipz
  4498     0FA7  2FAA               	goto	u1105
  4499     0FA8  30C9               	movlw	201
  4500     0FA9  0277               	subwf	mcp2515_requestNewMode@Count,w
  4501     0FAA                     u1105:
  4502     0FAA  1C03               	skipc
  4503     0FAB  2FAD               	goto	u1101
  4504     0FAC  2FAE               	goto	u1100
  4505     0FAD                     u1101:
  4506     0FAD  2FB0               	goto	l2805
  4507     0FAE                     u1100:
  4508     0FAE                     l2799:
  4509                           
  4510                           ;mcp2515_can.c: 398:             return (1);
  4511     0FAE  3001               	movlw	1
  4512     0FAF  2FBE               	goto	l215
  4513     0FB0                     l2805:
  4514                           
  4515                           ;mcp2515_can.c: 400:             _delay((unsigned long)((1)*(4000000/4000.0)));
  4516     0FB0  30C7               	movlw	199
  4517     0FB1  00F6               	movwf	??_mcp2515_requestNewMode
  4518     0FB2                     u2207:
  4519     0FB2  2FB3               	nop2
  4520     0FB3  0BF6               	decfsz	??_mcp2515_requestNewMode,f
  4521     0FB4  2FB2               	goto	u2207
  4522     0FB5  2FB6               	nop2
  4523     0FB6  2FB7               	nop2
  4524                           
  4525                           ;mcp2515_can.c: 401:             Count++;
  4526     0FB7  3001               	movlw	1
  4527     0FB8  07F7               	addwf	mcp2515_requestNewMode@Count,f
  4528     0FB9  1803               	skipnc
  4529     0FBA  0AF8               	incf	mcp2515_requestNewMode@Count+1,f
  4530     0FBB  3000               	movlw	0
  4531     0FBC  07F8               	addwf	mcp2515_requestNewMode@Count+1,f
  4532     0FBD  2F87               	goto	l2785
  4533     0FBE                     l215:
  4534     0FBE  0008               	return
  4535     0FBF                     __end_of_mcp2515_requestNewMode:
  4536                           
  4537                           	psect	text25
  4538     0012                     __ptext25:	
  4539 ;; *************** function _mcp2515_modifyRegister *****************
  4540 ;; Defined at:
  4541 ;;		line 256 in file "mcp2515_can.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;  address         1    wreg     const unsigned char 
  4544 ;;  mask            1    3[COMMON] const unsigned char 
  4545 ;;  data            1    4[COMMON] const unsigned char 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  address         1    5[COMMON] const unsigned char 
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1    wreg      void 
  4550 ;; Registers used:
  4551 ;;		wreg, status,2, status,0, pclath, cstack
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4557 ;;      Params:         2       0       0       0       0
  4558 ;;      Locals:         1       0       0       0       0
  4559 ;;      Temps:          0       0       0       0       0
  4560 ;;      Totals:         3       0       0       0       0
  4561 ;;Total ram usage:        3 bytes
  4562 ;; Hardware stack levels used: 1
  4563 ;; Hardware stack levels required when called: 1
  4564 ;; This function calls:
  4565 ;;		_WriteSPI
  4566 ;; This function is called by:
  4567 ;;		_mcp2515_setCANCTRL_Mode
  4568 ;;		_mcp2515_requestNewMode
  4569 ;;		_mcp2515_init
  4570 ;;		_mcp2515_getNextFreeTXBuf
  4571 ;;		_setSleepWakeup
  4572 ;;		_mcp2515_isTXBufFree
  4573 ;;		_sendMsgBuf1
  4574 ;;		_clearBufferTransmitIfFlags
  4575 ;;		_mcpPinMode
  4576 ;;		_mcpDigitalWrite
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580     0012                     _mcp2515_modifyRegister:	
  4581                           ;psect for function _mcp2515_modifyRegister
  4582                           
  4583                           
  4584                           ;incstack = 0
  4585                           ; Regs used in _mcp2515_modifyRegister: [wreg+status,2+status,0+pclath+cstack]
  4586                           ;mcp2515_modifyRegister@address stored from wreg
  4587     0012  00F5               	movwf	mcp2515_modifyRegister@address
  4588     0013                     l2747:
  4589                           
  4590                           ;mcp2515_can.c: 260:     RD0 = 0;;
  4591     0013  1283               	bcf	3,5	;RP0=0, select bank0
  4592     0014  1303               	bcf	3,6	;RP1=0, select bank0
  4593     0015  1008               	bcf	8,0	;volatile
  4594     0016                     l2749:
  4595                           
  4596                           ;mcp2515_can.c: 261:     WriteSPI(0x05);
  4597     0016  3005               	movlw	5
  4598     0017  120A  158A  25B5  120A  118A  	fcall	_WriteSPI
  4599                           
  4600                           ;mcp2515_can.c: 262:     WriteSPI(address);
  4601     001C  0875               	movf	mcp2515_modifyRegister@address,w
  4602     001D  120A  158A  25B5  120A  118A  	fcall	_WriteSPI
  4603                           
  4604                           ;mcp2515_can.c: 263:     WriteSPI(mask);
  4605     0022  0873               	movf	mcp2515_modifyRegister@mask,w
  4606     0023  120A  158A  25B5  120A  118A  	fcall	_WriteSPI
  4607                           
  4608                           ;mcp2515_can.c: 264:     WriteSPI(data);
  4609     0028  0874               	movf	mcp2515_modifyRegister@data,w
  4610     0029  120A  158A  25B5  120A  118A  	fcall	_WriteSPI
  4611     002E                     l2751:
  4612                           
  4613                           ;mcp2515_can.c: 265:     RD0 = 1;;
  4614     002E  1283               	bcf	3,5	;RP0=0, select bank0
  4615     002F  1303               	bcf	3,6	;RP1=0, select bank0
  4616     0030  1408               	bsf	8,0	;volatile
  4617     0031                     l176:
  4618     0031  0008               	return
  4619     0032                     __end_of_mcp2515_modifyRegister:
  4620                           
  4621                           	psect	text26
  4622     0D9A                     __ptext26:	
  4623 ;; *************** function _getMode *****************
  4624 ;; Defined at:
  4625 ;;		line 338 in file "mcp2515_can.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;		None
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;		None
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  1    wreg      unsigned char 
  4632 ;; Registers used:
  4633 ;;		wreg, status,2, status,0, pclath, cstack
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4639 ;;      Params:         0       0       0       0       0
  4640 ;;      Locals:         0       0       0       0       0
  4641 ;;      Temps:          0       0       0       0       0
  4642 ;;      Totals:         0       0       0       0       0
  4643 ;;Total ram usage:        0 bytes
  4644 ;; Hardware stack levels used: 1
  4645 ;; Hardware stack levels required when called: 2
  4646 ;; This function calls:
  4647 ;;		_mcp2515_readRegister
  4648 ;; This function is called by:
  4649 ;;		_mcp2515_setCANCTRL_Mode
  4650 ;;		_sleep
  4651 ;;		_wake
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655     0D9A                     _getMode:	
  4656                           ;psect for function _getMode
  4657                           
  4658     0D9A                     l2779:	
  4659                           ;incstack = 0
  4660                           ; Regs used in _getMode: [wreg+status,2+status,0+pclath+cstack]
  4661                           
  4662                           
  4663                           ;mcp2515_can.c: 339:     return (mcp2515_readRegister(0x0E) & 0xE0);
  4664     0D9A  300E               	movlw	14
  4665     0D9B  120A  158A  268B  120A  158A  	fcall	_mcp2515_readRegister
  4666     0DA0  39E0               	andlw	224
  4667     0DA1                     l203:
  4668     0DA1  0008               	return
  4669     0DA2                     __end_of_getMode:
  4670                           
  4671                           	psect	text27
  4672     0E8B                     __ptext27:	
  4673 ;; *************** function _mcp2515_readRegister *****************
  4674 ;; Defined at:
  4675 ;;		line 172 in file "mcp2515_can.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  address         1    wreg     const unsigned char 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  address         1    1[COMMON] const unsigned char 
  4680 ;;  ret             1    2[COMMON] unsigned char 
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  1    wreg      unsigned char 
  4683 ;; Registers used:
  4684 ;;		wreg, status,2, status,0, pclath, cstack
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4690 ;;      Params:         0       0       0       0       0
  4691 ;;      Locals:         2       0       0       0       0
  4692 ;;      Temps:          0       0       0       0       0
  4693 ;;      Totals:         2       0       0       0       0
  4694 ;;Total ram usage:        2 bytes
  4695 ;; Hardware stack levels used: 1
  4696 ;; Hardware stack levels required when called: 1
  4697 ;; This function calls:
  4698 ;;		_ReadSPI
  4699 ;;		_WriteSPI
  4700 ;; This function is called by:
  4701 ;;		_getMode
  4702 ;;		_mcp2515_setCANCTRL_Mode
  4703 ;;		_mcp2515_requestNewMode
  4704 ;;		_sendMsg
  4705 ;;		_enableTxInterrupt
  4706 ;;		_checkError
  4707 ;;		_mcpDigitalRead
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711     0E8B                     _mcp2515_readRegister:	
  4712                           ;psect for function _mcp2515_readRegister
  4713                           
  4714                           
  4715                           ;incstack = 0
  4716                           ; Regs used in _mcp2515_readRegister: [wreg+status,2+status,0+pclath+cstack]
  4717                           ;mcp2515_readRegister@address stored from wreg
  4718     0E8B  00F1               	movwf	mcp2515_readRegister@address
  4719     0E8C                     l2735:
  4720                           
  4721                           ;mcp2515_can.c: 173:     unsigned char ret;;mcp2515_can.c: 178:     RD0 = 0;;
  4722     0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  4723     0E8D  1303               	bcf	3,6	;RP1=0, select bank0
  4724     0E8E  1008               	bcf	8,0	;volatile
  4725     0E8F                     l2737:
  4726                           
  4727                           ;mcp2515_can.c: 179:     WriteSPI(0x03);
  4728     0E8F  3003               	movlw	3
  4729     0E90  120A  158A  25B5  120A  158A  	fcall	_WriteSPI
  4730                           
  4731                           ;mcp2515_can.c: 180:     WriteSPI(address);
  4732     0E95  0871               	movf	mcp2515_readRegister@address,w
  4733     0E96  120A  158A  25B5  120A  158A  	fcall	_WriteSPI
  4734     0E9B                     l2739:
  4735                           
  4736                           ;mcp2515_can.c: 181:     ret = ReadSPI();
  4737     0E9B  120A  118A  2005  120A  158A  	fcall	_ReadSPI
  4738     0EA0  00F2               	movwf	mcp2515_readRegister@ret
  4739     0EA1                     l2741:
  4740                           
  4741                           ;mcp2515_can.c: 182:     RD0 = 1;;
  4742     0EA1  1283               	bcf	3,5	;RP0=0, select bank0
  4743     0EA2  1303               	bcf	3,6	;RP1=0, select bank0
  4744     0EA3  1408               	bsf	8,0	;volatile
  4745     0EA4                     l2743:
  4746                           
  4747                           ;mcp2515_can.c: 187:     return ret;
  4748     0EA4  0872               	movf	mcp2515_readRegister@ret,w
  4749     0EA5                     l157:
  4750     0EA5  0008               	return
  4751     0EA6                     __end_of_mcp2515_readRegister:
  4752                           
  4753                           	psect	text28
  4754     0005                     __ptext28:	
  4755 ;; *************** function _ReadSPI *****************
  4756 ;; Defined at:
  4757 ;;		line 176 in file "spi16.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;		None
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;		None
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  1    wreg      unsigned char 
  4764 ;; Registers used:
  4765 ;;		wreg, status,2
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4771 ;;      Params:         0       0       0       0       0
  4772 ;;      Locals:         0       0       0       0       0
  4773 ;;      Temps:          0       0       0       0       0
  4774 ;;      Totals:         0       0       0       0       0
  4775 ;;Total ram usage:        0 bytes
  4776 ;; Hardware stack levels used: 1
  4777 ;; This function calls:
  4778 ;;		Nothing
  4779 ;; This function is called by:
  4780 ;;		_mcp2515_readRegister
  4781 ;;		_mcp2515_readStatus
  4782 ;;		_mcp2515_read_canMsg
  4783 ;;		_mcp2515_readRegisterS
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787     0005                     _ReadSPI:	
  4788                           ;psect for function _ReadSPI
  4789                           
  4790     0005                     l2729:	
  4791                           ;incstack = 0
  4792                           ; Regs used in _ReadSPI: [wreg+status,2]
  4793                           
  4794                           
  4795                           ;spi16.c: 178:     SSPBUF = 0x00;
  4796     0005  1283               	bcf	3,5	;RP0=0, select bank0
  4797     0006  1303               	bcf	3,6	;RP1=0, select bank0
  4798     0007  0193               	clrf	19	;volatile
  4799     0008                     l598:	
  4800                           ;spi16.c: 179:     while ( !BF );
  4801                           
  4802     0008  1683               	bsf	3,5	;RP0=1, select bank1
  4803     0009  1303               	bcf	3,6	;RP1=0, select bank1
  4804     000A  1C14               	btfss	20,0	;volatile
  4805     000B  280D               	goto	u1081
  4806     000C  280E               	goto	u1080
  4807     000D                     u1081:
  4808     000D  2808               	goto	l598
  4809     000E                     u1080:
  4810     000E                     l2731:
  4811                           
  4812                           ;spi16.c: 180:     return ( SSPBUF );
  4813     000E  1283               	bcf	3,5	;RP0=0, select bank0
  4814     000F  1303               	bcf	3,6	;RP1=0, select bank0
  4815     0010  0813               	movf	19,w	;volatile
  4816     0011                     l601:
  4817     0011  0008               	return
  4818     0012                     __end_of_ReadSPI:
  4819                           
  4820                           	psect	text29
  4821     0E12                     __ptext29:	
  4822 ;; *************** function _mcp2515_reset *****************
  4823 ;; Defined at:
  4824 ;;		line 155 in file "mcp2515_can.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;		None
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;		None
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  1    wreg      void 
  4831 ;; Registers used:
  4832 ;;		wreg, status,2, status,0, pclath, cstack
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4838 ;;      Params:         0       0       0       0       0
  4839 ;;      Locals:         0       0       0       0       0
  4840 ;;      Temps:          2       0       0       0       0
  4841 ;;      Totals:         2       0       0       0       0
  4842 ;;Total ram usage:        2 bytes
  4843 ;; Hardware stack levels used: 1
  4844 ;; Hardware stack levels required when called: 1
  4845 ;; This function calls:
  4846 ;;		_WriteSPI
  4847 ;; This function is called by:
  4848 ;;		_mcp2515_init
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852     0E12                     _mcp2515_reset:	
  4853                           ;psect for function _mcp2515_reset
  4854                           
  4855     0E12                     l2977:	
  4856                           ;incstack = 0
  4857                           ; Regs used in _mcp2515_reset: [wreg+status,2+status,0+pclath+cstack]
  4858                           
  4859                           
  4860                           ;mcp2515_can.c: 159:     RD0 = 0;;
  4861     0E12  1283               	bcf	3,5	;RP0=0, select bank0
  4862     0E13  1303               	bcf	3,6	;RP1=0, select bank0
  4863     0E14  1008               	bcf	8,0	;volatile
  4864     0E15                     l2979:
  4865                           
  4866                           ;mcp2515_can.c: 160:     WriteSPI(0xC0);
  4867     0E15  30C0               	movlw	192
  4868     0E16  120A  158A  25B5  120A  158A  	fcall	_WriteSPI
  4869     0E1B                     l2981:
  4870                           
  4871                           ;mcp2515_can.c: 161:     RD0 = 1;;
  4872     0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4873     0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4874     0E1D  1408               	bsf	8,0	;volatile
  4875     0E1E                     l2983:
  4876                           
  4877                           ;mcp2515_can.c: 165:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4878     0E1E  300D               	movlw	13
  4879     0E1F  00F2               	movwf	??_mcp2515_reset+1
  4880     0E20  30FB               	movlw	251
  4881     0E21  00F1               	movwf	??_mcp2515_reset
  4882     0E22                     u2217:
  4883     0E22  0BF1               	decfsz	??_mcp2515_reset,f
  4884     0E23  2E22               	goto	u2217
  4885     0E24  0BF2               	decfsz	??_mcp2515_reset+1,f
  4886     0E25  2E22               	goto	u2217
  4887     0E26  2E27               	nop2
  4888     0E27                     l154:
  4889     0E27  0008               	return
  4890     0E28                     __end_of_mcp2515_reset:
  4891                           
  4892                           	psect	text30
  4893     0FBF                     __ptext30:	
  4894 ;; *************** function _mcp2515_initCANBuffers *****************
  4895 ;; Defined at:
  4896 ;;		line 750 in file "mcp2515_can.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;		None
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;  i               1    6[COMMON] unsigned char 
  4901 ;;  a3              1    5[COMMON] unsigned char 
  4902 ;;  a2              1    4[COMMON] unsigned char 
  4903 ;;  a1              1    3[COMMON] unsigned char 
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  1    wreg      void 
  4906 ;; Registers used:
  4907 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4913 ;;      Params:         0       0       0       0       0
  4914 ;;      Locals:         4       0       0       0       0
  4915 ;;      Temps:          0       0       0       0       0
  4916 ;;      Totals:         4       0       0       0       0
  4917 ;;Total ram usage:        4 bytes
  4918 ;; Hardware stack levels used: 1
  4919 ;; Hardware stack levels required when called: 2
  4920 ;; This function calls:
  4921 ;;		_mcp2515_setRegister
  4922 ;; This function is called by:
  4923 ;;		_mcp2515_init
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927     0FBF                     _mcp2515_initCANBuffers:	
  4928                           ;psect for function _mcp2515_initCANBuffers
  4929                           
  4930     0FBF                     l3195:	
  4931                           ;incstack = 0
  4932                           ; Regs used in _mcp2515_initCANBuffers: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4933                           
  4934                           
  4935                           ;mcp2515_can.c: 751:     unsigned char i, a1, a2, a3;;mcp2515_can.c: 753:     a1 = 0x30;
  4936     0FBF  3030               	movlw	48
  4937     0FC0  00F3               	movwf	mcp2515_initCANBuffers@a1
  4938                           
  4939                           ;mcp2515_can.c: 754:     a2 = 0x40;
  4940     0FC1  3040               	movlw	64
  4941     0FC2  00F4               	movwf	mcp2515_initCANBuffers@a2
  4942                           
  4943                           ;mcp2515_can.c: 755:     a3 = 0x50;
  4944     0FC3  3050               	movlw	80
  4945     0FC4  00F5               	movwf	mcp2515_initCANBuffers@a3
  4946     0FC5                     l3197:
  4947                           
  4948                           ;mcp2515_can.c: 756:     for (i = 0; i < 14; i++) {
  4949     0FC5  01F6               	clrf	mcp2515_initCANBuffers@i
  4950     0FC6                     l3203:
  4951                           
  4952                           ;mcp2515_can.c: 757:         mcp2515_setRegister(a1, 0);
  4953     0FC6  01F1               	clrf	mcp2515_setRegister@value
  4954     0FC7  0873               	movf	mcp2515_initCANBuffers@a1,w
  4955     0FC8  120A  158A  2657  120A  158A  	fcall	_mcp2515_setRegister
  4956                           
  4957                           ;mcp2515_can.c: 758:         mcp2515_setRegister(a2, 0);
  4958     0FCD  01F1               	clrf	mcp2515_setRegister@value
  4959     0FCE  0874               	movf	mcp2515_initCANBuffers@a2,w
  4960     0FCF  120A  158A  2657  120A  158A  	fcall	_mcp2515_setRegister
  4961                           
  4962                           ;mcp2515_can.c: 759:         mcp2515_setRegister(a3, 0);
  4963     0FD4  01F1               	clrf	mcp2515_setRegister@value
  4964     0FD5  0875               	movf	mcp2515_initCANBuffers@a3,w
  4965     0FD6  120A  158A  2657  120A  158A  	fcall	_mcp2515_setRegister
  4966     0FDB                     l3205:
  4967                           
  4968                           ;mcp2515_can.c: 760:         a1++;
  4969     0FDB  3001               	movlw	1
  4970     0FDC  00FF               	movwf	btemp+1
  4971     0FDD  087F               	movf	btemp+1,w
  4972     0FDE  07F3               	addwf	mcp2515_initCANBuffers@a1,f
  4973     0FDF                     l3207:
  4974                           
  4975                           ;mcp2515_can.c: 761:         a2++;
  4976     0FDF  3001               	movlw	1
  4977     0FE0  00FF               	movwf	btemp+1
  4978     0FE1  087F               	movf	btemp+1,w
  4979     0FE2  07F4               	addwf	mcp2515_initCANBuffers@a2,f
  4980     0FE3                     l3209:
  4981                           
  4982                           ;mcp2515_can.c: 762:         a3++;
  4983     0FE3  3001               	movlw	1
  4984     0FE4  00FF               	movwf	btemp+1
  4985     0FE5  087F               	movf	btemp+1,w
  4986     0FE6  07F5               	addwf	mcp2515_initCANBuffers@a3,f
  4987     0FE7                     l3211:
  4988                           
  4989                           ;mcp2515_can.c: 763:     }
  4990     0FE7  3001               	movlw	1
  4991     0FE8  00FF               	movwf	btemp+1
  4992     0FE9  087F               	movf	btemp+1,w
  4993     0FEA  07F6               	addwf	mcp2515_initCANBuffers@i,f
  4994     0FEB                     l3213:
  4995     0FEB  300E               	movlw	14
  4996     0FEC  0276               	subwf	mcp2515_initCANBuffers@i,w
  4997     0FED  1C03               	skipc
  4998     0FEE  2FF0               	goto	u1231
  4999     0FEF  2FF1               	goto	u1230
  5000     0FF0                     u1231:
  5001     0FF0  2FC6               	goto	l3203
  5002     0FF1                     u1230:
  5003     0FF1                     l3215:
  5004                           
  5005                           ;mcp2515_can.c: 764:     mcp2515_setRegister(0x60, 0);
  5006     0FF1  01F1               	clrf	mcp2515_setRegister@value
  5007     0FF2  3060               	movlw	96
  5008     0FF3  120A  158A  2657  120A  158A  	fcall	_mcp2515_setRegister
  5009                           
  5010                           ;mcp2515_can.c: 765:     mcp2515_setRegister(0x70, 0);
  5011     0FF8  01F1               	clrf	mcp2515_setRegister@value
  5012     0FF9  3070               	movlw	112
  5013     0FFA  120A  158A  2657  120A  158A  	fcall	_mcp2515_setRegister
  5014     0FFF                     l294:
  5015     0FFF  0008               	return
  5016     1000                     __end_of_mcp2515_initCANBuffers:
  5017                           
  5018                           	psect	text31
  5019     05B9                     __ptext31:	
  5020 ;; *************** function _mcp2515_configRate *****************
  5021 ;; Defined at:
  5022 ;;		line 410 in file "mcp2515_can.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;  canSpeed        1    wreg     const unsigned char 
  5025 ;;  clock           1    3[COMMON] const unsigned char 
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;  canSpeed        1    7[COMMON] const unsigned char 
  5028 ;;  cfg3            1   10[COMMON] unsigned char 
  5029 ;;  cfg2            1    9[COMMON] unsigned char 
  5030 ;;  cfg1            1    8[COMMON] unsigned char 
  5031 ;;  set             1    6[COMMON] unsigned char 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      unsigned char 
  5034 ;; Registers used:
  5035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5041 ;;      Params:         1       0       0       0       0
  5042 ;;      Locals:         5       0       0       0       0
  5043 ;;      Temps:          2       0       0       0       0
  5044 ;;      Totals:         8       0       0       0       0
  5045 ;;Total ram usage:        8 bytes
  5046 ;; Hardware stack levels used: 1
  5047 ;; Hardware stack levels required when called: 2
  5048 ;; This function calls:
  5049 ;;		_mcp2515_setRegister
  5050 ;; This function is called by:
  5051 ;;		_mcp2515_init
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055     05B9                     _mcp2515_configRate:	
  5056                           ;psect for function _mcp2515_configRate
  5057                           
  5058                           
  5059                           ;incstack = 0
  5060                           ; Regs used in _mcp2515_configRate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5061                           ;mcp2515_configRate@canSpeed stored from wreg
  5062     05B9  00F7               	movwf	mcp2515_configRate@canSpeed
  5063     05BA                     l2993:
  5064                           
  5065                           ;mcp2515_can.c: 411:     unsigned char set, cfg1, cfg2, cfg3;;mcp2515_can.c: 412:     se
      +                          t = 1;
  5066     05BA  01F6               	clrf	mcp2515_configRate@set
  5067     05BB  0AF6               	incf	mcp2515_configRate@set,f
  5068                           
  5069                           ;mcp2515_can.c: 413:     switch (clock) {
  5070     05BC  2FB2               	goto	l3163
  5071     05BD                     l2995:
  5072                           
  5073                           ;mcp2515_can.c: 417:                     cfg1 = (0x3F);
  5074     05BD  303F               	movlw	63
  5075     05BE  00F8               	movwf	mcp2515_configRate@cfg1
  5076                           
  5077                           ;mcp2515_can.c: 418:                     cfg2 = (0xFF);
  5078     05BF  30FF               	movlw	255
  5079     05C0  00F9               	movwf	mcp2515_configRate@cfg2
  5080                           
  5081                           ;mcp2515_can.c: 419:                     cfg3 = (0x87);
  5082     05C1  3087               	movlw	135
  5083     05C2  00FA               	movwf	mcp2515_configRate@cfg3
  5084                           
  5085                           ;mcp2515_can.c: 420:                     break;
  5086     05C3  2FC5               	goto	l3165
  5087     05C4                     l2997:
  5088                           
  5089                           ;mcp2515_can.c: 423:                     cfg1 = (0x1F);
  5090     05C4  301F               	movlw	31
  5091     05C5  00F8               	movwf	mcp2515_configRate@cfg1
  5092                           
  5093                           ;mcp2515_can.c: 424:                     cfg2 = (0xFF);
  5094     05C6  30FF               	movlw	255
  5095     05C7  00F9               	movwf	mcp2515_configRate@cfg2
  5096                           
  5097                           ;mcp2515_can.c: 425:                     cfg3 = (0x87);
  5098     05C8  3087               	movlw	135
  5099     05C9  00FA               	movwf	mcp2515_configRate@cfg3
  5100                           
  5101                           ;mcp2515_can.c: 426:                     break;
  5102     05CA  2FC5               	goto	l3165
  5103     05CB                     l2999:
  5104                           
  5105                           ;mcp2515_can.c: 429:                     cfg1 = (0x0F);
  5106     05CB  300F               	movlw	15
  5107     05CC  00F8               	movwf	mcp2515_configRate@cfg1
  5108                           
  5109                           ;mcp2515_can.c: 430:                     cfg2 = (0xFF);
  5110     05CD  30FF               	movlw	255
  5111     05CE  00F9               	movwf	mcp2515_configRate@cfg2
  5112                           
  5113                           ;mcp2515_can.c: 431:                     cfg3 = (0x87);
  5114     05CF  3087               	movlw	135
  5115     05D0  00FA               	movwf	mcp2515_configRate@cfg3
  5116                           
  5117                           ;mcp2515_can.c: 432:                     break;
  5118     05D1  2FC5               	goto	l3165
  5119     05D2                     l3001:
  5120                           
  5121                           ;mcp2515_can.c: 435:                     cfg1 = (0X0F);
  5122     05D2  300F               	movlw	15
  5123     05D3  00F8               	movwf	mcp2515_configRate@cfg1
  5124                           
  5125                           ;mcp2515_can.c: 436:                     cfg2 = (0XBA);
  5126     05D4  30BA               	movlw	186
  5127     05D5  00F9               	movwf	mcp2515_configRate@cfg2
  5128                           
  5129                           ;mcp2515_can.c: 437:                     cfg3 = (0X07);
  5130     05D6  3007               	movlw	7
  5131     05D7  00FA               	movwf	mcp2515_configRate@cfg3
  5132                           
  5133                           ;mcp2515_can.c: 438:                     break;
  5134     05D8  2FC5               	goto	l3165
  5135     05D9                     l3003:
  5136                           
  5137                           ;mcp2515_can.c: 441:                     cfg1 = (0x0F);
  5138     05D9  300F               	movlw	15
  5139     05DA  00F8               	movwf	mcp2515_configRate@cfg1
  5140                           
  5141                           ;mcp2515_can.c: 442:                     cfg2 = (0xF1);
  5142     05DB  30F1               	movlw	241
  5143     05DC  00F9               	movwf	mcp2515_configRate@cfg2
  5144                           
  5145                           ;mcp2515_can.c: 443:                     cfg3 = (0x85);
  5146     05DD  3085               	movlw	133
  5147     05DE  00FA               	movwf	mcp2515_configRate@cfg3
  5148                           
  5149                           ;mcp2515_can.c: 444:                     break;
  5150     05DF  2FC5               	goto	l3165
  5151     05E0                     l3005:
  5152                           
  5153                           ;mcp2515_can.c: 447:                     cfg1 = (0x09);
  5154     05E0  3009               	movlw	9
  5155     05E1  00F8               	movwf	mcp2515_configRate@cfg1
  5156                           
  5157                           ;mcp2515_can.c: 448:                     cfg2 = (0xBE);
  5158     05E2  30BE               	movlw	190
  5159     05E3  00F9               	movwf	mcp2515_configRate@cfg2
  5160                           
  5161                           ;mcp2515_can.c: 449:                     cfg3 = (0x07);
  5162     05E4  3007               	movlw	7
  5163     05E5  00FA               	movwf	mcp2515_configRate@cfg3
  5164                           
  5165                           ;mcp2515_can.c: 450:                     break;
  5166     05E6  2FC5               	goto	l3165
  5167     05E7                     l3007:
  5168                           
  5169                           ;mcp2515_can.c: 453:                     cfg1 = (0x07);
  5170     05E7  3007               	movlw	7
  5171     05E8  00F8               	movwf	mcp2515_configRate@cfg1
  5172                           
  5173                           ;mcp2515_can.c: 454:                     cfg2 = (0xFF);
  5174     05E9  30FF               	movlw	255
  5175     05EA  00F9               	movwf	mcp2515_configRate@cfg2
  5176                           
  5177                           ;mcp2515_can.c: 455:                     cfg3 = (0x87);
  5178     05EB  3087               	movlw	135
  5179     05EC  00FA               	movwf	mcp2515_configRate@cfg3
  5180                           
  5181                           ;mcp2515_can.c: 456:                     break;
  5182     05ED  2FC5               	goto	l3165
  5183     05EE                     l3009:
  5184                           
  5185                           ;mcp2515_can.c: 459:                     cfg1 = (0x07);
  5186     05EE  3007               	movlw	7
  5187     05EF  00F8               	movwf	mcp2515_configRate@cfg1
  5188                           
  5189                           ;mcp2515_can.c: 460:                     cfg2 = (0xFA);
  5190     05F0  30FA               	movlw	250
  5191     05F1  00F9               	movwf	mcp2515_configRate@cfg2
  5192                           
  5193                           ;mcp2515_can.c: 461:                     cfg3 = (0x87);
  5194     05F2  3087               	movlw	135
  5195     05F3  00FA               	movwf	mcp2515_configRate@cfg3
  5196                           
  5197                           ;mcp2515_can.c: 462:                     break;
  5198     05F4  2FC5               	goto	l3165
  5199     05F5                     l3011:
  5200                           
  5201                           ;mcp2515_can.c: 465:                     cfg1 = (0x03);
  5202     05F5  3003               	movlw	3
  5203     05F6  00F8               	movwf	mcp2515_configRate@cfg1
  5204                           
  5205                           ;mcp2515_can.c: 466:                     cfg2 = (0xFF);
  5206     05F7  30FF               	movlw	255
  5207     05F8  00F9               	movwf	mcp2515_configRate@cfg2
  5208                           
  5209                           ;mcp2515_can.c: 467:                     cfg3 = (0x87);
  5210     05F9  3087               	movlw	135
  5211     05FA  00FA               	movwf	mcp2515_configRate@cfg3
  5212                           
  5213                           ;mcp2515_can.c: 468:                     break;
  5214     05FB  2FC5               	goto	l3165
  5215     05FC                     l3013:
  5216                           
  5217                           ;mcp2515_can.c: 471:                     cfg1 = (0x03);
  5218     05FC  3003               	movlw	3
  5219     05FD  00F8               	movwf	mcp2515_configRate@cfg1
  5220                           
  5221                           ;mcp2515_can.c: 472:                     cfg2 = (0xBE);
  5222     05FE  30BE               	movlw	190
  5223     05FF  00F9               	movwf	mcp2515_configRate@cfg2
  5224                           
  5225                           ;mcp2515_can.c: 473:                     cfg3 = (0x07);
  5226     0600  3007               	movlw	7
  5227     0601  00FA               	movwf	mcp2515_configRate@cfg3
  5228                           
  5229                           ;mcp2515_can.c: 474:                     break;
  5230     0602  2FC5               	goto	l3165
  5231     0603                     l3015:
  5232                           
  5233                           ;mcp2515_can.c: 477:                     cfg1 = (0x03);
  5234     0603  3003               	movlw	3
  5235     0604  00F8               	movwf	mcp2515_configRate@cfg1
  5236                           
  5237                           ;mcp2515_can.c: 478:                     cfg2 = (0xAD);
  5238     0605  30AD               	movlw	173
  5239     0606  00F9               	movwf	mcp2515_configRate@cfg2
  5240                           
  5241                           ;mcp2515_can.c: 479:                     cfg3 = (0x07);
  5242     0607  3007               	movlw	7
  5243     0608  00FA               	movwf	mcp2515_configRate@cfg3
  5244                           
  5245                           ;mcp2515_can.c: 480:                     break;
  5246     0609  2FC5               	goto	l3165
  5247     060A                     l3017:
  5248                           
  5249                           ;mcp2515_can.c: 483:                     cfg1 = (0x03);
  5250     060A  3003               	movlw	3
  5251     060B  00F8               	movwf	mcp2515_configRate@cfg1
  5252                           
  5253                           ;mcp2515_can.c: 484:                     cfg2 = (0xFA);
  5254     060C  30FA               	movlw	250
  5255     060D  00F9               	movwf	mcp2515_configRate@cfg2
  5256                           
  5257                           ;mcp2515_can.c: 485:                     cfg3 = (0x87);
  5258     060E  3087               	movlw	135
  5259     060F  00FA               	movwf	mcp2515_configRate@cfg3
  5260                           
  5261                           ;mcp2515_can.c: 486:                     break;
  5262     0610  2FC5               	goto	l3165
  5263     0611                     l3019:
  5264                           
  5265                           ;mcp2515_can.c: 489:                     cfg1 = (0x03);
  5266     0611  3003               	movlw	3
  5267     0612  00F8               	movwf	mcp2515_configRate@cfg1
  5268                           
  5269                           ;mcp2515_can.c: 490:                     cfg2 = (0xF0);
  5270     0613  30F0               	movlw	240
  5271     0614  00F9               	movwf	mcp2515_configRate@cfg2
  5272                           
  5273                           ;mcp2515_can.c: 491:                     cfg3 = (0x86);
  5274     0615  3086               	movlw	134
  5275     0616  00FA               	movwf	mcp2515_configRate@cfg3
  5276                           
  5277                           ;mcp2515_can.c: 492:                     break;
  5278     0617  2FC5               	goto	l3165
  5279     0618                     l240:	
  5280                           ;mcp2515_can.c: 494:                 case (CAN_200KBPS):
  5281                           
  5282                           
  5283                           ;mcp2515_can.c: 495:                     cfg1 = (0x01);
  5284     0618  01F8               	clrf	mcp2515_configRate@cfg1
  5285     0619  0AF8               	incf	mcp2515_configRate@cfg1,f
  5286     061A                     l3021:
  5287                           
  5288                           ;mcp2515_can.c: 496:                     cfg2 = (0xFA);
  5289     061A  30FA               	movlw	250
  5290     061B  00F9               	movwf	mcp2515_configRate@cfg2
  5291                           
  5292                           ;mcp2515_can.c: 497:                     cfg3 = (0x87);
  5293     061C  3087               	movlw	135
  5294     061D  00FA               	movwf	mcp2515_configRate@cfg3
  5295                           
  5296                           ;mcp2515_can.c: 498:                     break;
  5297     061E  2FC5               	goto	l3165
  5298     061F                     l3023:
  5299                           
  5300                           ;mcp2515_can.c: 501:                     cfg1 = (0x41);
  5301     061F  3041               	movlw	65
  5302     0620  00F8               	movwf	mcp2515_configRate@cfg1
  5303                           
  5304                           ;mcp2515_can.c: 502:                     cfg2 = (0xF1);
  5305     0621  30F1               	movlw	241
  5306     0622  00F9               	movwf	mcp2515_configRate@cfg2
  5307                           
  5308                           ;mcp2515_can.c: 503:                     cfg3 = (0x85);
  5309     0623  3085               	movlw	133
  5310     0624  00FA               	movwf	mcp2515_configRate@cfg3
  5311                           
  5312                           ;mcp2515_can.c: 504:                     break;
  5313     0625  2FC5               	goto	l3165
  5314     0626                     l3025:
  5315                           
  5316                           ;mcp2515_can.c: 507:                     cfg1 = (0x00);
  5317     0626  01F8               	clrf	mcp2515_configRate@cfg1
  5318     0627                     l3027:
  5319                           
  5320                           ;mcp2515_can.c: 508:                     cfg2 = (0xF0);
  5321     0627  30F0               	movlw	240
  5322     0628  00F9               	movwf	mcp2515_configRate@cfg2
  5323     0629                     l3029:
  5324                           
  5325                           ;mcp2515_can.c: 509:                     cfg3 = (0x86);
  5326     0629  3086               	movlw	134
  5327     062A  00FA               	movwf	mcp2515_configRate@cfg3
  5328                           
  5329                           ;mcp2515_can.c: 510:                     break;
  5330     062B  2FC5               	goto	l3165
  5331     062C                     l3031:
  5332                           
  5333                           ;mcp2515_can.c: 513:                     cfg1 = (0x00);
  5334     062C  01F8               	clrf	mcp2515_configRate@cfg1
  5335     062D                     l3033:
  5336                           
  5337                           ;mcp2515_can.c: 514:                     cfg2 = (0xA0);
  5338     062D  30A0               	movlw	160
  5339     062E  00F9               	movwf	mcp2515_configRate@cfg2
  5340     062F                     l3035:
  5341                           
  5342                           ;mcp2515_can.c: 515:                     cfg3 = (0x04);
  5343     062F  3004               	movlw	4
  5344     0630  00FA               	movwf	mcp2515_configRate@cfg3
  5345                           
  5346                           ;mcp2515_can.c: 516:                     break;
  5347     0631  2FC5               	goto	l3165
  5348     0632                     l3037:
  5349                           
  5350                           ;mcp2515_can.c: 519:                     cfg1 = (0x40);
  5351     0632  3040               	movlw	64
  5352     0633  00F8               	movwf	mcp2515_configRate@cfg1
  5353                           
  5354                           ;mcp2515_can.c: 520:                     cfg2 = (0x92);
  5355     0634  3092               	movlw	146
  5356     0635  00F9               	movwf	mcp2515_configRate@cfg2
  5357                           
  5358                           ;mcp2515_can.c: 521:                     cfg3 = (0x02);
  5359     0636  3002               	movlw	2
  5360     0637  00FA               	movwf	mcp2515_configRate@cfg3
  5361                           
  5362                           ;mcp2515_can.c: 522:                     break;
  5363     0638  2FC5               	goto	l3165
  5364     0639                     l3039:
  5365                           
  5366                           ;mcp2515_can.c: 525:                     cfg1 = (0x00);
  5367     0639  01F8               	clrf	mcp2515_configRate@cfg1
  5368     063A                     l3041:
  5369                           
  5370                           ;mcp2515_can.c: 526:                     cfg2 = (0xD0);
  5371     063A  30D0               	movlw	208
  5372     063B  00F9               	movwf	mcp2515_configRate@cfg2
  5373     063C                     l3043:
  5374                           
  5375                           ;mcp2515_can.c: 527:                     cfg3 = (0x82);
  5376     063C  3082               	movlw	130
  5377     063D  00FA               	movwf	mcp2515_configRate@cfg3
  5378                           
  5379                           ;mcp2515_can.c: 528:                     break;
  5380     063E  2FC5               	goto	l3165
  5381     063F                     l3045:
  5382                           
  5383                           ;mcp2515_can.c: 531:                     set = 0;
  5384     063F  01F6               	clrf	mcp2515_configRate@set
  5385                           
  5386                           ;mcp2515_can.c: 532:                     break;
  5387     0640  2FC5               	goto	l3165
  5388     0641                     l3049:
  5389     0641  0877               	movf	mcp2515_configRate@canSpeed,w
  5390     0642  00F4               	movwf	??_mcp2515_configRate
  5391     0643  01F5               	clrf	??_mcp2515_configRate+1
  5392                           
  5393                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5394                           ; Switch size 1, requested type "simple"
  5395                           ; Number of cases is 1, Range of values is 0 to 0
  5396                           ; switch strategies available:
  5397                           ; Name         Instructions Cycles
  5398                           ; simple_byte            4     3 (average)
  5399                           ; direct_byte           11     8 (fixed)
  5400                           ; jumptable            260     6 (fixed)
  5401                           ;	Chosen strategy is simple_byte
  5402     0644  0875               	movf	??_mcp2515_configRate+1,w
  5403     0645  3A00               	xorlw	0	; case 0
  5404     0646  1903               	skipnz
  5405     0647  2E49               	goto	l4249
  5406     0648  2E3F               	goto	l3045
  5407     0649                     l4249:
  5408                           
  5409                           ; Switch size 1, requested type "simple"
  5410                           ; Number of cases is 19, Range of values is 1 to 19
  5411                           ; switch strategies available:
  5412                           ; Name         Instructions Cycles
  5413                           ; simple_byte           58    30 (average)
  5414                           ; direct_byte           68    11 (fixed)
  5415                           ; jumptable            263     9 (fixed)
  5416                           ;	Chosen strategy is simple_byte
  5417     0649  0874               	movf	??_mcp2515_configRate,w
  5418     064A  3A01               	xorlw	1	; case 1
  5419     064B  1903               	skipnz
  5420     064C  2DBD               	goto	l2995
  5421     064D  3A03               	xorlw	3	; case 2
  5422     064E  1903               	skipnz
  5423     064F  2DC4               	goto	l2997
  5424     0650  3A01               	xorlw	1	; case 3
  5425     0651  1903               	skipnz
  5426     0652  2DCB               	goto	l2999
  5427     0653  3A07               	xorlw	7	; case 4
  5428     0654  1903               	skipnz
  5429     0655  2DD2               	goto	l3001
  5430     0656  3A01               	xorlw	1	; case 5
  5431     0657  1903               	skipnz
  5432     0658  2DD9               	goto	l3003
  5433     0659  3A03               	xorlw	3	; case 6
  5434     065A  1903               	skipnz
  5435     065B  2DE0               	goto	l3005
  5436     065C  3A01               	xorlw	1	; case 7
  5437     065D  1903               	skipnz
  5438     065E  2DE7               	goto	l3007
  5439     065F  3A0F               	xorlw	15	; case 8
  5440     0660  1903               	skipnz
  5441     0661  2DEE               	goto	l3009
  5442     0662  3A01               	xorlw	1	; case 9
  5443     0663  1903               	skipnz
  5444     0664  2DF5               	goto	l3011
  5445     0665  3A03               	xorlw	3	; case 10
  5446     0666  1903               	skipnz
  5447     0667  2DFC               	goto	l3013
  5448     0668  3A01               	xorlw	1	; case 11
  5449     0669  1903               	skipnz
  5450     066A  2E03               	goto	l3015
  5451     066B  3A07               	xorlw	7	; case 12
  5452     066C  1903               	skipnz
  5453     066D  2E0A               	goto	l3017
  5454     066E  3A01               	xorlw	1	; case 13
  5455     066F  1903               	skipnz
  5456     0670  2E11               	goto	l3019
  5457     0671  3A03               	xorlw	3	; case 14
  5458     0672  1903               	skipnz
  5459     0673  2E18               	goto	l240
  5460     0674  3A01               	xorlw	1	; case 15
  5461     0675  1903               	skipnz
  5462     0676  2E1F               	goto	l3023
  5463     0677  3A1F               	xorlw	31	; case 16
  5464     0678  1903               	skipnz
  5465     0679  2E26               	goto	l3025
  5466     067A  3A01               	xorlw	1	; case 17
  5467     067B  1903               	skipnz
  5468     067C  2E2C               	goto	l3031
  5469     067D  3A03               	xorlw	3	; case 18
  5470     067E  1903               	skipnz
  5471     067F  2E32               	goto	l3037
  5472     0680  3A01               	xorlw	1	; case 19
  5473     0681  1903               	skipnz
  5474     0682  2E39               	goto	l3039
  5475     0683  2E3F               	goto	l3045
  5476     0684                     l3051:
  5477                           
  5478                           ;mcp2515_can.c: 539:                     cfg1 = (0x0C);
  5479     0684  300C               	movlw	12
  5480     0685  00F8               	movwf	mcp2515_configRate@cfg1
  5481                           
  5482                           ;mcp2515_can.c: 540:                     cfg2 = (0xBF);
  5483     0686  30BF               	movlw	191
  5484     0687  00F9               	movwf	mcp2515_configRate@cfg2
  5485                           
  5486                           ;mcp2515_can.c: 541:                     cfg3 = (0x05);
  5487     0688  3005               	movlw	5
  5488     0689  00FA               	movwf	mcp2515_configRate@cfg3
  5489                           
  5490                           ;mcp2515_can.c: 542:                     break;
  5491     068A  2FC5               	goto	l3165
  5492     068B                     l3053:
  5493                           
  5494                           ;mcp2515_can.c: 545:                     cfg1 = (0X0B);
  5495     068B  300B               	movlw	11
  5496     068C  00F8               	movwf	mcp2515_configRate@cfg1
  5497                           
  5498                           ;mcp2515_can.c: 546:                     cfg2 = (0XB6);
  5499     068D  30B6               	movlw	182
  5500     068E  00F9               	movwf	mcp2515_configRate@cfg2
  5501                           
  5502                           ;mcp2515_can.c: 547:                     cfg3 = (0X04);
  5503     068F  3004               	movlw	4
  5504     0690  00FA               	movwf	mcp2515_configRate@cfg3
  5505                           
  5506                           ;mcp2515_can.c: 548:                     break;
  5507     0691  2FC5               	goto	l3165
  5508     0692                     l3055:
  5509                           
  5510                           ;mcp2515_can.c: 551:                     cfg1 = (0x0B);
  5511     0692  300B               	movlw	11
  5512     0693  00F8               	movwf	mcp2515_configRate@cfg1
  5513                           
  5514                           ;mcp2515_can.c: 552:                     cfg2 = (0xAC);
  5515     0694  30AC               	movlw	172
  5516     0695  00F9               	movwf	mcp2515_configRate@cfg2
  5517                           
  5518                           ;mcp2515_can.c: 553:                     cfg3 = (0x03);
  5519     0696  3003               	movlw	3
  5520     0697  00FA               	movwf	mcp2515_configRate@cfg3
  5521                           
  5522                           ;mcp2515_can.c: 554:                     break;
  5523     0698  2FC5               	goto	l3165
  5524     0699                     l3057:
  5525                           
  5526                           ;mcp2515_can.c: 557:                     cfg1 = (0x0C);
  5527     0699  300C               	movlw	12
  5528     069A  00F8               	movwf	mcp2515_configRate@cfg1
  5529                           
  5530                           ;mcp2515_can.c: 558:                     cfg2 = (0xA4);
  5531     069B  30A4               	movlw	164
  5532     069C  00F9               	movwf	mcp2515_configRate@cfg2
  5533                           
  5534                           ;mcp2515_can.c: 559:                     cfg3 = (0x02);
  5535     069D  3002               	movlw	2
  5536     069E  00FA               	movwf	mcp2515_configRate@cfg3
  5537                           
  5538                           ;mcp2515_can.c: 560:                     break;
  5539     069F  2FC5               	goto	l3165
  5540     06A0                     l3059:
  5541                           
  5542                           ;mcp2515_can.c: 563:                     cfg1 = (0x09);
  5543     06A0  3009               	movlw	9
  5544     06A1  00F8               	movwf	mcp2515_configRate@cfg1
  5545                           
  5546                           ;mcp2515_can.c: 564:                     cfg2 = (0xA4);
  5547     06A2  30A4               	movlw	164
  5548     06A3  00F9               	movwf	mcp2515_configRate@cfg2
  5549                           
  5550                           ;mcp2515_can.c: 565:                     cfg3 = (0x03);
  5551     06A4  3003               	movlw	3
  5552     06A5  00FA               	movwf	mcp2515_configRate@cfg3
  5553                           
  5554                           ;mcp2515_can.c: 566:                     break;
  5555     06A6  2FC5               	goto	l3165
  5556     06A7                     l3061:
  5557                           
  5558                           ;mcp2515_can.c: 569:                     cfg1 = (0x05);
  5559     06A7  3005               	movlw	5
  5560     06A8  00F8               	movwf	mcp2515_configRate@cfg1
  5561                           
  5562                           ;mcp2515_can.c: 570:                     cfg2 = (0xB6);
  5563     06A9  30B6               	movlw	182
  5564     06AA  00F9               	movwf	mcp2515_configRate@cfg2
  5565                           
  5566                           ;mcp2515_can.c: 571:                     cfg3 = (0x04);
  5567     06AB  3004               	movlw	4
  5568     06AC  00FA               	movwf	mcp2515_configRate@cfg3
  5569                           
  5570                           ;mcp2515_can.c: 572:                     break;
  5571     06AD  2FC5               	goto	l3165
  5572     06AE                     l3063:
  5573                           
  5574                           ;mcp2515_can.c: 575:                     cfg1 = (0x04);
  5575     06AE  3004               	movlw	4
  5576     06AF  00F8               	movwf	mcp2515_configRate@cfg1
  5577                           
  5578                           ;mcp2515_can.c: 576:                     cfg2 = (0xA4);
  5579     06B0  30A4               	movlw	164
  5580     06B1  00F9               	movwf	mcp2515_configRate@cfg2
  5581                           
  5582                           ;mcp2515_can.c: 577:                     cfg3 = (0x03);
  5583     06B2  3003               	movlw	3
  5584     06B3  00FA               	movwf	mcp2515_configRate@cfg3
  5585                           
  5586                           ;mcp2515_can.c: 578:                     break;
  5587     06B4  2FC5               	goto	l3165
  5588     06B5                     l3065:
  5589                           
  5590                           ;mcp2515_can.c: 581:                     cfg1 = (0x03);
  5591     06B5  3003               	movlw	3
  5592     06B6  00F8               	movwf	mcp2515_configRate@cfg1
  5593                           
  5594                           ;mcp2515_can.c: 582:                     cfg2 = (0xB5);
  5595     06B7  30B5               	movlw	181
  5596     06B8  00F9               	movwf	mcp2515_configRate@cfg2
  5597                           
  5598                           ;mcp2515_can.c: 583:                     cfg3 = (0x03);
  5599     06B9  3003               	movlw	3
  5600     06BA  00FA               	movwf	mcp2515_configRate@cfg3
  5601                           
  5602                           ;mcp2515_can.c: 584:                     break;
  5603     06BB  2FC5               	goto	l3165
  5604     06BC                     l3067:
  5605                           
  5606                           ;mcp2515_can.c: 587:                     cfg1 = (0x02);
  5607     06BC  3002               	movlw	2
  5608     06BD  00F8               	movwf	mcp2515_configRate@cfg1
  5609                           
  5610                           ;mcp2515_can.c: 588:                     cfg2 = (0xBE);
  5611     06BE  30BE               	movlw	190
  5612     06BF  00F9               	movwf	mcp2515_configRate@cfg2
  5613                           
  5614                           ;mcp2515_can.c: 589:                     cfg3 = (0x04);
  5615     06C0  3004               	movlw	4
  5616     06C1  00FA               	movwf	mcp2515_configRate@cfg3
  5617                           
  5618                           ;mcp2515_can.c: 590:                     break;
  5619     06C2  2FC5               	goto	l3165
  5620     06C3                     l3069:
  5621                           
  5622                           ;mcp2515_can.c: 593:                     cfg1 = (0x02);
  5623     06C3  3002               	movlw	2
  5624     06C4  00F8               	movwf	mcp2515_configRate@cfg1
  5625                           
  5626                           ;mcp2515_can.c: 594:                     cfg2 = (0xB6);
  5627     06C5  30B6               	movlw	182
  5628     06C6  00F9               	movwf	mcp2515_configRate@cfg2
  5629                           
  5630                           ;mcp2515_can.c: 595:                     cfg3 = (0x04);
  5631     06C7  3004               	movlw	4
  5632     06C8  00FA               	movwf	mcp2515_configRate@cfg3
  5633                           
  5634                           ;mcp2515_can.c: 596:                     break;
  5635     06C9  2FC5               	goto	l3165
  5636     06CA                     l261:	
  5637                           ;mcp2515_can.c: 598:                 case (CAN_125KBPS) :
  5638                           
  5639                           
  5640                           ;mcp2515_can.c: 599:                     cfg1 = (0x01);
  5641     06CA  01F8               	clrf	mcp2515_configRate@cfg1
  5642     06CB  0AF8               	incf	mcp2515_configRate@cfg1,f
  5643     06CC                     l3071:
  5644                           
  5645                           ;mcp2515_can.c: 600:                     cfg2 = (0xBF);
  5646     06CC  30BF               	movlw	191
  5647     06CD  00F9               	movwf	mcp2515_configRate@cfg2
  5648                           
  5649                           ;mcp2515_can.c: 601:                     cfg3 = (0x06);
  5650     06CE  3006               	movlw	6
  5651     06CF  00FA               	movwf	mcp2515_configRate@cfg3
  5652                           
  5653                           ;mcp2515_can.c: 602:                     break;
  5654     06D0  2FC5               	goto	l3165
  5655     06D1                     l262:	
  5656                           ;mcp2515_can.c: 604:                 case (CAN_200KBPS) :
  5657                           
  5658                           
  5659                           ;mcp2515_can.c: 605:                     cfg1 = (0x01);
  5660     06D1  01F8               	clrf	mcp2515_configRate@cfg1
  5661     06D2  0AF8               	incf	mcp2515_configRate@cfg1,f
  5662     06D3                     l3073:
  5663                           
  5664                           ;mcp2515_can.c: 606:                     cfg2 = (0xA4);
  5665     06D3  30A4               	movlw	164
  5666     06D4  00F9               	movwf	mcp2515_configRate@cfg2
  5667                           
  5668                           ;mcp2515_can.c: 607:                     cfg3 = (0x03);
  5669     06D5  3003               	movlw	3
  5670     06D6  00FA               	movwf	mcp2515_configRate@cfg3
  5671                           
  5672                           ;mcp2515_can.c: 608:                     break;
  5673     06D7  2FC5               	goto	l3165
  5674     06D8                     l3075:
  5675                           
  5676                           ;mcp2515_can.c: 611:                     cfg1 = (0x00);
  5677     06D8  01F8               	clrf	mcp2515_configRate@cfg1
  5678     06D9                     l3077:
  5679                           
  5680                           ;mcp2515_can.c: 612:                     cfg2 = (0xBF);
  5681     06D9  30BF               	movlw	191
  5682     06DA  00F9               	movwf	mcp2515_configRate@cfg2
  5683     06DB                     l3079:
  5684                           
  5685                           ;mcp2515_can.c: 613:                     cfg3 = (0x06);
  5686     06DB  3006               	movlw	6
  5687     06DC  00FA               	movwf	mcp2515_configRate@cfg3
  5688                           
  5689                           ;mcp2515_can.c: 614:                     break;
  5690     06DD  2FC5               	goto	l3165
  5691     06DE                     l3081:
  5692                           
  5693                           ;mcp2515_can.c: 617:                     cfg1 = (0x00);
  5694     06DE  01F8               	clrf	mcp2515_configRate@cfg1
  5695     06DF                     l3083:
  5696                           
  5697                           ;mcp2515_can.c: 618:                     cfg2 = (0x9B);
  5698     06DF  309B               	movlw	155
  5699     06E0  00F9               	movwf	mcp2515_configRate@cfg2
  5700     06E1                     l3085:
  5701                           
  5702                           ;mcp2515_can.c: 619:                     cfg3 = (0x02);
  5703     06E1  3002               	movlw	2
  5704     06E2  00FA               	movwf	mcp2515_configRate@cfg3
  5705                           
  5706                           ;mcp2515_can.c: 620:                     break;
  5707     06E3  2FC5               	goto	l3165
  5708     06E4                     l3087:
  5709                           
  5710                           ;mcp2515_can.c: 623:                     cfg1 = (0x00);
  5711     06E4  01F8               	clrf	mcp2515_configRate@cfg1
  5712     06E5                     l3089:
  5713                           
  5714                           ;mcp2515_can.c: 624:                     cfg2 = (0x92);
  5715     06E5  3092               	movlw	146
  5716     06E6  00F9               	movwf	mcp2515_configRate@cfg2
  5717     06E7                     l3091:
  5718                           
  5719                           ;mcp2515_can.c: 625:                     cfg3 = (0x01);
  5720     06E7  01FA               	clrf	mcp2515_configRate@cfg3
  5721     06E8  0AFA               	incf	mcp2515_configRate@cfg3,f
  5722                           
  5723                           ;mcp2515_can.c: 626:                     break;
  5724     06E9  2FC5               	goto	l3165
  5725     06EA                     l3093:
  5726                           
  5727                           ;mcp2515_can.c: 629:                     cfg1 = (0x00);
  5728     06EA  01F8               	clrf	mcp2515_configRate@cfg1
  5729     06EB                     l3095:
  5730                           
  5731                           ;mcp2515_can.c: 630:                     cfg2 = (0x88);
  5732     06EB  3088               	movlw	136
  5733     06EC  00F9               	movwf	mcp2515_configRate@cfg2
  5734     06ED  2EE7               	goto	l3091
  5735     06EE                     l3103:
  5736     06EE  0877               	movf	mcp2515_configRate@canSpeed,w
  5737     06EF  00F4               	movwf	??_mcp2515_configRate
  5738     06F0  01F5               	clrf	??_mcp2515_configRate+1
  5739                           
  5740                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5741                           ; Switch size 1, requested type "simple"
  5742                           ; Number of cases is 1, Range of values is 0 to 0
  5743                           ; switch strategies available:
  5744                           ; Name         Instructions Cycles
  5745                           ; simple_byte            4     3 (average)
  5746                           ; direct_byte           11     8 (fixed)
  5747                           ; jumptable            260     6 (fixed)
  5748                           ;	Chosen strategy is simple_byte
  5749     06F1  0875               	movf	??_mcp2515_configRate+1,w
  5750     06F2  3A00               	xorlw	0	; case 0
  5751     06F3  1903               	skipnz
  5752     06F4  2EF6               	goto	l4251
  5753     06F5  2E3F               	goto	l3045
  5754     06F6                     l4251:
  5755                           
  5756                           ; Switch size 1, requested type "simple"
  5757                           ; Number of cases is 16, Range of values is 3 to 19
  5758                           ; switch strategies available:
  5759                           ; Name         Instructions Cycles
  5760                           ; simple_byte           49    25 (average)
  5761                           ; direct_byte           62    11 (fixed)
  5762                           ; jumptable            263     9 (fixed)
  5763                           ;	Chosen strategy is simple_byte
  5764     06F6  0874               	movf	??_mcp2515_configRate,w
  5765     06F7  3A03               	xorlw	3	; case 3
  5766     06F8  1903               	skipnz
  5767     06F9  2E84               	goto	l3051
  5768     06FA  3A07               	xorlw	7	; case 4
  5769     06FB  1903               	skipnz
  5770     06FC  2E8B               	goto	l3053
  5771     06FD  3A01               	xorlw	1	; case 5
  5772     06FE  1903               	skipnz
  5773     06FF  2E92               	goto	l3055
  5774     0700  3A03               	xorlw	3	; case 6
  5775     0701  1903               	skipnz
  5776     0702  2E99               	goto	l3057
  5777     0703  3A01               	xorlw	1	; case 7
  5778     0704  1903               	skipnz
  5779     0705  2EA0               	goto	l3059
  5780     0706  3A0F               	xorlw	15	; case 8
  5781     0707  1903               	skipnz
  5782     0708  2EA7               	goto	l3061
  5783     0709  3A01               	xorlw	1	; case 9
  5784     070A  1903               	skipnz
  5785     070B  2EAE               	goto	l3063
  5786     070C  3A03               	xorlw	3	; case 10
  5787     070D  1903               	skipnz
  5788     070E  2EB5               	goto	l3065
  5789     070F  3A01               	xorlw	1	; case 11
  5790     0710  1903               	skipnz
  5791     0711  2EBC               	goto	l3067
  5792     0712  3A07               	xorlw	7	; case 12
  5793     0713  1903               	skipnz
  5794     0714  2EC3               	goto	l3069
  5795     0715  3A01               	xorlw	1	; case 13
  5796     0716  1903               	skipnz
  5797     0717  2ECA               	goto	l261
  5798     0718  3A03               	xorlw	3	; case 14
  5799     0719  1903               	skipnz
  5800     071A  2ED1               	goto	l262
  5801     071B  3A01               	xorlw	1	; case 15
  5802     071C  1903               	skipnz
  5803     071D  2ED8               	goto	l3075
  5804     071E  3A1F               	xorlw	31	; case 16
  5805     071F  1903               	skipnz
  5806     0720  2EDE               	goto	l3081
  5807     0721  3A01               	xorlw	1	; case 17
  5808     0722  1903               	skipnz
  5809     0723  2EE4               	goto	l3087
  5810     0724  3A02               	xorlw	2	; case 19
  5811     0725  1903               	skipnz
  5812     0726  2EEA               	goto	l3093
  5813     0727  2E3F               	goto	l3045
  5814     0728                     l3105:
  5815                           
  5816                           ;mcp2515_can.c: 642:                     cfg1 = (0x1f);
  5817     0728  301F               	movlw	31
  5818     0729  00F8               	movwf	mcp2515_configRate@cfg1
  5819                           
  5820                           ;mcp2515_can.c: 643:                     cfg2 = (0xbf);
  5821     072A  30BF               	movlw	191
  5822     072B  00F9               	movwf	mcp2515_configRate@cfg2
  5823                           
  5824                           ;mcp2515_can.c: 644:                     cfg3 = (0x07);
  5825     072C  3007               	movlw	7
  5826     072D  00FA               	movwf	mcp2515_configRate@cfg3
  5827                           
  5828                           ;mcp2515_can.c: 645:                     break;
  5829     072E  2FC5               	goto	l3165
  5830     072F                     l3107:
  5831                           
  5832                           ;mcp2515_can.c: 648:                     cfg1 = (0x0f);
  5833     072F  300F               	movlw	15
  5834     0730  00F8               	movwf	mcp2515_configRate@cfg1
  5835                           
  5836                           ;mcp2515_can.c: 649:                     cfg2 = (0xbf);
  5837     0731  30BF               	movlw	191
  5838     0732  00F9               	movwf	mcp2515_configRate@cfg2
  5839                           
  5840                           ;mcp2515_can.c: 650:                     cfg3 = (0x07);
  5841     0733  3007               	movlw	7
  5842     0734  00FA               	movwf	mcp2515_configRate@cfg3
  5843                           
  5844                           ;mcp2515_can.c: 651:                     break;
  5845     0735  2FC5               	goto	l3165
  5846     0736                     l3109:
  5847                           
  5848                           ;mcp2515_can.c: 654:                     cfg1 = (0x07);
  5849     0736  3007               	movlw	7
  5850     0737  00F8               	movwf	mcp2515_configRate@cfg1
  5851                           
  5852                           ;mcp2515_can.c: 655:                     cfg2 = (0xbf);
  5853     0738  30BF               	movlw	191
  5854     0739  00F9               	movwf	mcp2515_configRate@cfg2
  5855                           
  5856                           ;mcp2515_can.c: 656:                     cfg3 = (0x07);
  5857     073A  3007               	movlw	7
  5858     073B  00FA               	movwf	mcp2515_configRate@cfg3
  5859                           
  5860                           ;mcp2515_can.c: 657:                     break;
  5861     073C  2FC5               	goto	l3165
  5862     073D                     l3111:
  5863                           
  5864                           ;mcp2515_can.c: 660:                     cfg1 = (0x07);
  5865     073D  3007               	movlw	7
  5866     073E  00F8               	movwf	mcp2515_configRate@cfg1
  5867                           
  5868                           ;mcp2515_can.c: 661:                     cfg2 = (0xa4);
  5869     073F  30A4               	movlw	164
  5870     0740  00F9               	movwf	mcp2515_configRate@cfg2
  5871                           
  5872                           ;mcp2515_can.c: 662:                     cfg3 = (0x04);
  5873     0741  3004               	movlw	4
  5874     0742  00FA               	movwf	mcp2515_configRate@cfg3
  5875                           
  5876                           ;mcp2515_can.c: 663:                     break;
  5877     0743  2FC5               	goto	l3165
  5878     0744                     l3113:
  5879                           
  5880                           ;mcp2515_can.c: 666:                     cfg1 = (0x03);
  5881     0744  3003               	movlw	3
  5882     0745  00F8               	movwf	mcp2515_configRate@cfg1
  5883                           
  5884                           ;mcp2515_can.c: 667:                     cfg2 = (0xbf);
  5885     0746  30BF               	movlw	191
  5886     0747  00F9               	movwf	mcp2515_configRate@cfg2
  5887                           
  5888                           ;mcp2515_can.c: 668:                     cfg3 = (0x07);
  5889     0748  3007               	movlw	7
  5890     0749  00FA               	movwf	mcp2515_configRate@cfg3
  5891                           
  5892                           ;mcp2515_can.c: 669:                     break;
  5893     074A  2FC5               	goto	l3165
  5894     074B                     l3115:
  5895                           
  5896                           ;mcp2515_can.c: 672:                     cfg1 = (0x03);
  5897     074B  3003               	movlw	3
  5898     074C  00F8               	movwf	mcp2515_configRate@cfg1
  5899                           
  5900                           ;mcp2515_can.c: 673:                     cfg2 = (0xb4);
  5901     074D  30B4               	movlw	180
  5902     074E  00F9               	movwf	mcp2515_configRate@cfg2
  5903                           
  5904                           ;mcp2515_can.c: 674:                     cfg3 = (0x06);
  5905     074F  3006               	movlw	6
  5906     0750  00FA               	movwf	mcp2515_configRate@cfg3
  5907                           
  5908                           ;mcp2515_can.c: 675:                     break;
  5909     0751  2FC5               	goto	l3165
  5910     0752                     l277:	
  5911                           ;mcp2515_can.c: 677:                 case (CAN_80KBPS) :
  5912                           
  5913                           
  5914                           ;mcp2515_can.c: 678:                     cfg1 = (0x01);
  5915     0752  01F8               	clrf	mcp2515_configRate@cfg1
  5916     0753  0AF8               	incf	mcp2515_configRate@cfg1,f
  5917     0754                     l3117:
  5918                           
  5919                           ;mcp2515_can.c: 679:                     cfg2 = (0xbf);
  5920     0754  30BF               	movlw	191
  5921     0755  00F9               	movwf	mcp2515_configRate@cfg2
  5922                           
  5923                           ;mcp2515_can.c: 680:                     cfg3 = (0x07);
  5924     0756  3007               	movlw	7
  5925     0757  00FA               	movwf	mcp2515_configRate@cfg3
  5926                           
  5927                           ;mcp2515_can.c: 681:                     break;
  5928     0758  2FC5               	goto	l3165
  5929     0759                     l278:	
  5930                           ;mcp2515_can.c: 683:                 case (CAN_100KBPS) :
  5931                           
  5932                           
  5933                           ;mcp2515_can.c: 684:                     cfg1 = (0x01);
  5934     0759  01F8               	clrf	mcp2515_configRate@cfg1
  5935     075A  0AF8               	incf	mcp2515_configRate@cfg1,f
  5936     075B                     l3119:
  5937                           
  5938                           ;mcp2515_can.c: 685:                     cfg2 = (0xb4);
  5939     075B  30B4               	movlw	180
  5940     075C  00F9               	movwf	mcp2515_configRate@cfg2
  5941                           
  5942                           ;mcp2515_can.c: 686:                     cfg3 = (0x06);
  5943     075D  3006               	movlw	6
  5944     075E  00FA               	movwf	mcp2515_configRate@cfg3
  5945                           
  5946                           ;mcp2515_can.c: 687:                     break;
  5947     075F  2FC5               	goto	l3165
  5948     0760                     l279:	
  5949                           ;mcp2515_can.c: 689:                 case (CAN_125KBPS) :
  5950                           
  5951                           
  5952                           ;mcp2515_can.c: 690:                     cfg1 = (0x01);
  5953     0760  01F8               	clrf	mcp2515_configRate@cfg1
  5954     0761  0AF8               	incf	mcp2515_configRate@cfg1,f
  5955     0762                     l3121:
  5956                           
  5957                           ;mcp2515_can.c: 691:                     cfg2 = (0xb1);
  5958     0762  30B1               	movlw	177
  5959     0763  00F9               	movwf	mcp2515_configRate@cfg2
  5960                           
  5961                           ;mcp2515_can.c: 692:                     cfg3 = (0x05);
  5962     0764  3005               	movlw	5
  5963     0765  00FA               	movwf	mcp2515_configRate@cfg3
  5964                           
  5965                           ;mcp2515_can.c: 693:                     break;
  5966     0766  2FC5               	goto	l3165
  5967     0767                     l3123:
  5968                           
  5969                           ;mcp2515_can.c: 696:                     cfg1 = (0x00);
  5970     0767  01F8               	clrf	mcp2515_configRate@cfg1
  5971     0768                     l3125:
  5972                           
  5973                           ;mcp2515_can.c: 697:                     cfg2 = (0xb4);
  5974     0768  30B4               	movlw	180
  5975     0769  00F9               	movwf	mcp2515_configRate@cfg2
  5976     076A  2EDB               	goto	l3079
  5977     076B                     l3129:
  5978                           
  5979                           ;mcp2515_can.c: 702:                     cfg1 = (0x00);
  5980     076B  01F8               	clrf	mcp2515_configRate@cfg1
  5981     076C                     l3131:
  5982                           
  5983                           ;mcp2515_can.c: 703:                     cfg2 = (0xb1);
  5984     076C  30B1               	movlw	177
  5985     076D  00F9               	movwf	mcp2515_configRate@cfg2
  5986     076E                     l3133:
  5987                           
  5988                           ;mcp2515_can.c: 704:                     cfg3 = (0x05);
  5989     076E  3005               	movlw	5
  5990     076F  00FA               	movwf	mcp2515_configRate@cfg3
  5991                           
  5992                           ;mcp2515_can.c: 705:                     break;
  5993     0770  2FC5               	goto	l3165
  5994     0771                     l3135:
  5995                           
  5996                           ;mcp2515_can.c: 708:                     cfg1 = (0x00);
  5997     0771  01F8               	clrf	mcp2515_configRate@cfg1
  5998     0772                     l3137:
  5999                           
  6000                           ;mcp2515_can.c: 709:                     cfg2 = (0x90);
  6001     0772  3090               	movlw	144
  6002     0773  00F9               	movwf	mcp2515_configRate@cfg2
  6003     0774  2EE1               	goto	l3085
  6004     0775                     l3141:
  6005                           
  6006                           ;mcp2515_can.c: 714:                     cfg1 = (0x00);
  6007     0775  01F8               	clrf	mcp2515_configRate@cfg1
  6008     0776                     l3143:
  6009                           
  6010                           ;mcp2515_can.c: 715:                     cfg2 = (0x80);
  6011     0776  3080               	movlw	128
  6012     0777  00F9               	movwf	mcp2515_configRate@cfg2
  6013     0778  2EE7               	goto	l3091
  6014     0779                     l3147:
  6015                           
  6016                           ;mcp2515_can.c: 720:                     cfg1 = (0x00);
  6017     0779  01F8               	clrf	mcp2515_configRate@cfg1
  6018     077A                     l3149:
  6019                           
  6020                           ;mcp2515_can.c: 721:                     cfg2 = (0x80);
  6021     077A  3080               	movlw	128
  6022     077B  00F9               	movwf	mcp2515_configRate@cfg2
  6023     077C                     l3151:
  6024                           
  6025                           ;mcp2515_can.c: 722:                     cfg3 = (0x00);
  6026     077C  01FA               	clrf	mcp2515_configRate@cfg3
  6027                           
  6028                           ;mcp2515_can.c: 723:                     break;
  6029     077D  2FC5               	goto	l3165
  6030     077E                     l3157:
  6031     077E  0877               	movf	mcp2515_configRate@canSpeed,w
  6032     077F  00F4               	movwf	??_mcp2515_configRate
  6033     0780  01F5               	clrf	??_mcp2515_configRate+1
  6034                           
  6035                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6036                           ; Switch size 1, requested type "simple"
  6037                           ; Number of cases is 1, Range of values is 0 to 0
  6038                           ; switch strategies available:
  6039                           ; Name         Instructions Cycles
  6040                           ; simple_byte            4     3 (average)
  6041                           ; direct_byte           11     8 (fixed)
  6042                           ; jumptable            260     6 (fixed)
  6043                           ;	Chosen strategy is simple_byte
  6044     0781  0875               	movf	??_mcp2515_configRate+1,w
  6045     0782  3A00               	xorlw	0	; case 0
  6046     0783  1903               	skipnz
  6047     0784  2F86               	goto	l4253
  6048     0785  2E3F               	goto	l3045
  6049     0786                     l4253:
  6050                           
  6051                           ; Switch size 1, requested type "simple"
  6052                           ; Number of cases is 14, Range of values is 1 to 19
  6053                           ; switch strategies available:
  6054                           ; Name         Instructions Cycles
  6055                           ; simple_byte           43    22 (average)
  6056                           ; direct_byte           68    11 (fixed)
  6057                           ; jumptable            263     9 (fixed)
  6058                           ;	Chosen strategy is simple_byte
  6059     0786  0874               	movf	??_mcp2515_configRate,w
  6060     0787  3A01               	xorlw	1	; case 1
  6061     0788  1903               	skipnz
  6062     0789  2F28               	goto	l3105
  6063     078A  3A03               	xorlw	3	; case 2
  6064     078B  1903               	skipnz
  6065     078C  2F2F               	goto	l3107
  6066     078D  3A01               	xorlw	1	; case 3
  6067     078E  1903               	skipnz
  6068     078F  2F36               	goto	l3109
  6069     0790  3A06               	xorlw	6	; case 5
  6070     0791  1903               	skipnz
  6071     0792  2F3D               	goto	l3111
  6072     0793  3A02               	xorlw	2	; case 7
  6073     0794  1903               	skipnz
  6074     0795  2F44               	goto	l3113
  6075     0796  3A0F               	xorlw	15	; case 8
  6076     0797  1903               	skipnz
  6077     0798  2F4B               	goto	l3115
  6078     0799  3A01               	xorlw	1	; case 9
  6079     079A  1903               	skipnz
  6080     079B  2F52               	goto	l277
  6081     079C  3A05               	xorlw	5	; case 12
  6082     079D  1903               	skipnz
  6083     079E  2F59               	goto	l278
  6084     079F  3A01               	xorlw	1	; case 13
  6085     07A0  1903               	skipnz
  6086     07A1  2F60               	goto	l279
  6087     07A2  3A03               	xorlw	3	; case 14
  6088     07A3  1903               	skipnz
  6089     07A4  2F67               	goto	l3123
  6090     07A5  3A01               	xorlw	1	; case 15
  6091     07A6  1903               	skipnz
  6092     07A7  2F6B               	goto	l3129
  6093     07A8  3A1F               	xorlw	31	; case 16
  6094     07A9  1903               	skipnz
  6095     07AA  2F71               	goto	l3135
  6096     07AB  3A02               	xorlw	2	; case 18
  6097     07AC  1903               	skipnz
  6098     07AD  2F75               	goto	l3141
  6099     07AE  3A01               	xorlw	1	; case 19
  6100     07AF  1903               	skipnz
  6101     07B0  2F79               	goto	l3147
  6102     07B1  2E3F               	goto	l3045
  6103     07B2                     l3163:
  6104     07B2  0873               	movf	mcp2515_configRate@clock,w
  6105     07B3  00F4               	movwf	??_mcp2515_configRate
  6106     07B4  01F5               	clrf	??_mcp2515_configRate+1
  6107                           
  6108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6109                           ; Switch size 1, requested type "simple"
  6110                           ; Number of cases is 1, Range of values is 0 to 0
  6111                           ; switch strategies available:
  6112                           ; Name         Instructions Cycles
  6113                           ; simple_byte            4     3 (average)
  6114                           ; direct_byte           11     8 (fixed)
  6115                           ; jumptable            260     6 (fixed)
  6116                           ;	Chosen strategy is simple_byte
  6117     07B5  0875               	movf	??_mcp2515_configRate+1,w
  6118     07B6  3A00               	xorlw	0	; case 0
  6119     07B7  1903               	skipnz
  6120     07B8  2FBA               	goto	l4255
  6121     07B9  2E3F               	goto	l3045
  6122     07BA                     l4255:
  6123                           
  6124                           ; Switch size 1, requested type "simple"
  6125                           ; Number of cases is 3, Range of values is 1 to 3
  6126                           ; switch strategies available:
  6127                           ; Name         Instructions Cycles
  6128                           ; simple_byte           10     6 (average)
  6129                           ; direct_byte           20    11 (fixed)
  6130                           ; jumptable            263     9 (fixed)
  6131                           ;	Chosen strategy is simple_byte
  6132     07BA  0874               	movf	??_mcp2515_configRate,w
  6133     07BB  3A01               	xorlw	1	; case 1
  6134     07BC  1903               	skipnz
  6135     07BD  2E41               	goto	l3049
  6136     07BE  3A03               	xorlw	3	; case 2
  6137     07BF  1903               	skipnz
  6138     07C0  2EEE               	goto	l3103
  6139     07C1  3A01               	xorlw	1	; case 3
  6140     07C2  1903               	skipnz
  6141     07C3  2F7E               	goto	l3157
  6142     07C4  2E3F               	goto	l3045
  6143     07C5                     l3165:
  6144                           
  6145                           ;mcp2515_can.c: 736:     if (set) {
  6146     07C5  0876               	movf	mcp2515_configRate@set,w
  6147     07C6  1903               	btfsc	3,2
  6148     07C7  2FC9               	goto	u1221
  6149     07C8  2FCA               	goto	u1220
  6150     07C9                     u1221:
  6151     07C9  2FE4               	goto	l3175
  6152     07CA                     u1220:
  6153     07CA                     l3167:
  6154                           
  6155                           ;mcp2515_can.c: 737:         mcp2515_setRegister(0x2A, cfg1);
  6156     07CA  0878               	movf	mcp2515_configRate@cfg1,w
  6157     07CB  00F1               	movwf	mcp2515_setRegister@value
  6158     07CC  302A               	movlw	42
  6159     07CD  120A  158A  2657  120A  118A  	fcall	_mcp2515_setRegister
  6160                           
  6161                           ;mcp2515_can.c: 738:         mcp2515_setRegister(0x29, cfg2);
  6162     07D2  0879               	movf	mcp2515_configRate@cfg2,w
  6163     07D3  00F1               	movwf	mcp2515_setRegister@value
  6164     07D4  3029               	movlw	41
  6165     07D5  120A  158A  2657  120A  118A  	fcall	_mcp2515_setRegister
  6166                           
  6167                           ;mcp2515_can.c: 739:         mcp2515_setRegister(0x28, cfg3);
  6168     07DA  087A               	movf	mcp2515_configRate@cfg3,w
  6169     07DB  00F1               	movwf	mcp2515_setRegister@value
  6170     07DC  3028               	movlw	40
  6171     07DD  120A  158A  2657  120A  118A  	fcall	_mcp2515_setRegister
  6172     07E2                     l3169:
  6173                           
  6174                           ;mcp2515_can.c: 740:         return (0);
  6175     07E2  3000               	movlw	0
  6176     07E3  2FE5               	goto	l288
  6177     07E4                     l3175:
  6178                           
  6179                           ;mcp2515_can.c: 742:         return (1);
  6180     07E4  3001               	movlw	1
  6181     07E5                     l288:
  6182     07E5  0008               	return
  6183     07E6                     __end_of_mcp2515_configRate:
  6184                           
  6185                           	psect	text32
  6186     0E57                     __ptext32:	
  6187 ;; *************** function _mcp2515_setRegister *****************
  6188 ;; Defined at:
  6189 ;;		line 216 in file "mcp2515_can.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  address         1    wreg     const unsigned char 
  6192 ;;  value           1    1[COMMON] const unsigned char 
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;  address         1    2[COMMON] const unsigned char 
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  1    wreg      void 
  6197 ;; Registers used:
  6198 ;;		wreg, status,2, status,0, pclath, cstack
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6204 ;;      Params:         1       0       0       0       0
  6205 ;;      Locals:         1       0       0       0       0
  6206 ;;      Temps:          0       0       0       0       0
  6207 ;;      Totals:         2       0       0       0       0
  6208 ;;Total ram usage:        2 bytes
  6209 ;; Hardware stack levels used: 1
  6210 ;; Hardware stack levels required when called: 1
  6211 ;; This function calls:
  6212 ;;		_WriteSPI
  6213 ;; This function is called by:
  6214 ;;		_mcp2515_configRate
  6215 ;;		_mcp2515_initCANBuffers
  6216 ;;		_mcp2515_init
  6217 ;;		_enableTxInterrupt
  6218 ;; This function uses a non-reentrant model
  6219 ;;
  6220                           
  6221     0E57                     _mcp2515_setRegister:	
  6222                           ;psect for function _mcp2515_setRegister
  6223                           
  6224                           
  6225                           ;incstack = 0
  6226                           ; Regs used in _mcp2515_setRegister: [wreg+status,2+status,0+pclath+cstack]
  6227                           ;mcp2515_setRegister@address stored from wreg
  6228     0E57  00F2               	movwf	mcp2515_setRegister@address
  6229     0E58                     l2911:
  6230                           
  6231                           ;mcp2515_can.c: 220:     RD0 = 0;;
  6232     0E58  1283               	bcf	3,5	;RP0=0, select bank0
  6233     0E59  1303               	bcf	3,6	;RP1=0, select bank0
  6234     0E5A  1008               	bcf	8,0	;volatile
  6235     0E5B                     l2913:
  6236                           
  6237                           ;mcp2515_can.c: 221:     WriteSPI(0x02);
  6238     0E5B  3002               	movlw	2
  6239     0E5C  120A  158A  25B5  120A  158A  	fcall	_WriteSPI
  6240                           
  6241                           ;mcp2515_can.c: 222:     WriteSPI(address);
  6242     0E61  0872               	movf	mcp2515_setRegister@address,w
  6243     0E62  120A  158A  25B5  120A  158A  	fcall	_WriteSPI
  6244                           
  6245                           ;mcp2515_can.c: 223:     WriteSPI(value);
  6246     0E67  0871               	movf	mcp2515_setRegister@value,w
  6247     0E68  120A  158A  25B5  120A  158A  	fcall	_WriteSPI
  6248     0E6D                     l2915:
  6249                           
  6250                           ;mcp2515_can.c: 224:     RD0 = 1;;
  6251     0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  6252     0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  6253     0E6F  1408               	bsf	8,0	;volatile
  6254     0E70                     l168:
  6255     0E70  0008               	return
  6256     0E71                     __end_of_mcp2515_setRegister:
  6257                           
  6258                           	psect	text33
  6259     0DB5                     __ptext33:	
  6260 ;; *************** function _WriteSPI *****************
  6261 ;; Defined at:
  6262 ;;		line 192 in file "spi16.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;  data_out        1    wreg     unsigned char 
  6265 ;; Auto vars:     Size  Location     Type
  6266 ;;  data_out        1    0[COMMON] unsigned char 
  6267 ;; Return value:  Size  Location     Type
  6268 ;;                  1    wreg      unsigned char 
  6269 ;; Registers used:
  6270 ;;		wreg
  6271 ;; Tracked objects:
  6272 ;;		On entry : 0/0
  6273 ;;		On exit  : 0/0
  6274 ;;		Unchanged: 0/0
  6275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6276 ;;      Params:         0       0       0       0       0
  6277 ;;      Locals:         1       0       0       0       0
  6278 ;;      Temps:          0       0       0       0       0
  6279 ;;      Totals:         1       0       0       0       0
  6280 ;;Total ram usage:        1 bytes
  6281 ;; Hardware stack levels used: 1
  6282 ;; This function calls:
  6283 ;;		Nothing
  6284 ;; This function is called by:
  6285 ;;		_mcp2515_reset
  6286 ;;		_mcp2515_readRegister
  6287 ;;		_mcp2515_setRegister
  6288 ;;		_mcp2515_modifyRegister
  6289 ;;		_mcp2515_readStatus
  6290 ;;		_mcp2515_write_canMsg
  6291 ;;		_mcp2515_read_canMsg
  6292 ;;		_mcp2515_start_transmit
  6293 ;;		_mcp2515_readRegisterS
  6294 ;;		_mcp2515_setRegisterS
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298     0DB5                     _WriteSPI:	
  6299                           ;psect for function _WriteSPI
  6300                           
  6301                           
  6302                           ;incstack = 0
  6303                           ; Regs used in _WriteSPI: [wreg]
  6304                           ;WriteSPI@data_out stored from wreg
  6305     0DB5  00F0               	movwf	WriteSPI@data_out
  6306     0DB6                     l2721:
  6307                           
  6308                           ;spi16.c: 192: unsigned char WriteSPI( unsigned char data_out );spi16.c: 193: {;spi16.c:
      +                           194:     SSPBUF = data_out;
  6309     0DB6  0870               	movf	WriteSPI@data_out,w
  6310     0DB7  1283               	bcf	3,5	;RP0=0, select bank0
  6311     0DB8  1303               	bcf	3,6	;RP1=0, select bank0
  6312     0DB9  0093               	movwf	19	;volatile
  6313     0DBA                     l2723:
  6314                           
  6315                           ;spi16.c: 195:     if ( WCOL )
  6316     0DBA  1F94               	btfss	20,7	;volatile
  6317     0DBB  2DBD               	goto	u1061
  6318     0DBC  2DBE               	goto	u1060
  6319     0DBD                     u1061:
  6320     0DBD  2DBF               	goto	l607
  6321     0DBE                     u1060:
  6322     0DBE  2DC5               	goto	l605
  6323     0DBF                     l607:
  6324     0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  6325     0DC0  1303               	bcf	3,6	;RP1=0, select bank1
  6326     0DC1  1C14               	btfss	20,0	;volatile
  6327     0DC2  2DC4               	goto	u1071
  6328     0DC3  2DC5               	goto	u1070
  6329     0DC4                     u1071:
  6330     0DC4  2DBF               	goto	l607
  6331     0DC5                     u1070:
  6332     0DC5                     l605:
  6333     0DC5  0008               	return
  6334     0DC6                     __end_of_WriteSPI:
  6335                           
  6336                           	psect	text34
  6337     00D0                     __ptext34:	
  6338 ;; *************** function _OpenSPI *****************
  6339 ;; Defined at:
  6340 ;;		line 106 in file "spi16.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;  sync_mode       1    wreg     unsigned char 
  6343 ;;  bus_mode        1    0[COMMON] unsigned char 
  6344 ;;  smp_phase       1    1[COMMON] unsigned char 
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;  sync_mode       1    4[COMMON] unsigned char 
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      void 
  6349 ;; Registers used:
  6350 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6356 ;;      Params:         2       0       0       0       0
  6357 ;;      Locals:         1       0       0       0       0
  6358 ;;      Temps:          2       0       0       0       0
  6359 ;;      Totals:         5       0       0       0       0
  6360 ;;Total ram usage:        5 bytes
  6361 ;; Hardware stack levels used: 1
  6362 ;; This function calls:
  6363 ;;		Nothing
  6364 ;; This function is called by:
  6365 ;;		_begin
  6366 ;; This function uses a non-reentrant model
  6367 ;;
  6368                           
  6369     00D0                     _OpenSPI:	
  6370                           ;psect for function _OpenSPI
  6371                           
  6372                           
  6373                           ;incstack = 0
  6374                           ; Regs used in _OpenSPI: [wreg-fsr0h+status,2+status,0+btemp+1]
  6375                           ;OpenSPI@sync_mode stored from wreg
  6376     00D0  00F4               	movwf	OpenSPI@sync_mode
  6377     00D1                     l3437:
  6378     00D1  1683               	bsf	3,5	;RP0=1, select bank1
  6379     00D2  1303               	bcf	3,6	;RP1=0, select bank1
  6380     00D3  0194               	clrf	20	;volatile
  6381     00D4  1283               	bcf	3,5	;RP0=0, select bank0
  6382     00D5  1303               	bcf	3,6	;RP1=0, select bank0
  6383     00D6  0194               	clrf	20	;volatile
  6384     00D7                     l3439:
  6385     00D7  0874               	movf	OpenSPI@sync_mode,w	;volatile
  6386     00D8  00FF               	movwf	btemp+1
  6387     00D9  087F               	movf	btemp+1,w
  6388     00DA  0494               	iorwf	20,f	;volatile
  6389     00DB                     l3441:
  6390     00DB  1871               	btfsc	OpenSPI@smp_phase,0
  6391     00DC  28DE               	goto	u1561
  6392     00DD  28E1               	goto	u1560
  6393     00DE                     u1561:
  6394     00DE  1683               	bsf	3,5	;RP0=1, select bank1
  6395     00DF  1303               	bcf	3,6	;RP1=0, select bank1
  6396     00E0  1794               	bsf	20,7	;volatile
  6397     00E1                     u1560:
  6398     00E1  28F7               	goto	l3445
  6399     00E2                     l585:
  6400     00E2  1683               	bsf	3,5	;RP0=1, select bank1
  6401     00E3  1303               	bcf	3,6	;RP1=0, select bank1
  6402     00E4  1714               	bsf	20,6	;volatile
  6403     00E5  1283               	bcf	3,5	;RP0=0, select bank0
  6404     00E6  1303               	bcf	3,6	;RP1=0, select bank0
  6405     00E7  1214               	bcf	20,4	;volatile
  6406     00E8  2916               	goto	l3449
  6407     00E9                     l587:
  6408     00E9  1683               	bsf	3,5	;RP0=1, select bank1
  6409     00EA  1303               	bcf	3,6	;RP1=0, select bank1
  6410     00EB  1714               	bsf	20,6	;volatile
  6411     00EC  1283               	bcf	3,5	;RP0=0, select bank0
  6412     00ED  1303               	bcf	3,6	;RP1=0, select bank0
  6413     00EE  1614               	bsf	20,4	;volatile
  6414     00EF  2916               	goto	l3449
  6415     00F0                     l588:
  6416     00F0  1683               	bsf	3,5	;RP0=1, select bank1
  6417     00F1  1303               	bcf	3,6	;RP1=0, select bank1
  6418     00F2  1314               	bcf	20,6	;volatile
  6419     00F3  1283               	bcf	3,5	;RP0=0, select bank0
  6420     00F4  1303               	bcf	3,6	;RP1=0, select bank0
  6421     00F5  1614               	bsf	20,4	;volatile
  6422     00F6  2916               	goto	l3449
  6423     00F7                     l3445:
  6424     00F7  0870               	movf	OpenSPI@bus_mode,w
  6425     00F8  00F2               	movwf	??_OpenSPI
  6426     00F9  01F3               	clrf	??_OpenSPI+1
  6427                           
  6428                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6429                           ; Switch size 1, requested type "simple"
  6430                           ; Number of cases is 1, Range of values is 0 to 0
  6431                           ; switch strategies available:
  6432                           ; Name         Instructions Cycles
  6433                           ; simple_byte            4     3 (average)
  6434                           ; direct_byte           11     8 (fixed)
  6435                           ; jumptable            260     6 (fixed)
  6436                           ;	Chosen strategy is simple_byte
  6437     00FA  0873               	movf	??_OpenSPI+1,w
  6438     00FB  3A00               	xorlw	0	; case 0
  6439     00FC  1903               	skipnz
  6440     00FD  28FF               	goto	l4257
  6441     00FE  2916               	goto	l3449
  6442     00FF                     l4257:
  6443                           
  6444                           ; Switch size 1, requested type "simple"
  6445                           ; Number of cases is 3, Range of values is 0 to 3
  6446                           ; switch strategies available:
  6447                           ; Name         Instructions Cycles
  6448                           ; simple_byte           10     6 (average)
  6449                           ; direct_byte           20     8 (fixed)
  6450                           ; jumptable            260     6 (fixed)
  6451                           ;	Chosen strategy is simple_byte
  6452     00FF  0872               	movf	??_OpenSPI,w
  6453     0100  3A00               	xorlw	0	; case 0
  6454     0101  1903               	skipnz
  6455     0102  28E2               	goto	l585
  6456     0103  3A02               	xorlw	2	; case 2
  6457     0104  1903               	skipnz
  6458     0105  28E9               	goto	l587
  6459     0106  3A01               	xorlw	1	; case 3
  6460     0107  1903               	skipnz
  6461     0108  28F0               	goto	l588
  6462     0109  2916               	goto	l3449
  6463     010A                     l591:
  6464     010A  1683               	bsf	3,5	;RP0=1, select bank1
  6465     010B  1303               	bcf	3,6	;RP1=0, select bank1
  6466     010C  1685               	bsf	5,5	;volatile
  6467     010D                     l592:
  6468     010D  1683               	bsf	3,5	;RP0=1, select bank1
  6469     010E  1303               	bcf	3,6	;RP1=0, select bank1
  6470     010F  1587               	bsf	7,3	;volatile
  6471     0110  1394               	bcf	20,7	;volatile
  6472     0111  2926               	goto	l593
  6473     0112                     l594:
  6474     0112  1683               	bsf	3,5	;RP0=1, select bank1
  6475     0113  1303               	bcf	3,6	;RP1=0, select bank1
  6476     0114  1187               	bcf	7,3	;volatile
  6477     0115  2926               	goto	l593
  6478     0116                     l3449:
  6479     0116  0874               	movf	OpenSPI@sync_mode,w
  6480     0117  00F2               	movwf	??_OpenSPI
  6481     0118  01F3               	clrf	??_OpenSPI+1
  6482                           
  6483                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6484                           ; Switch size 1, requested type "simple"
  6485                           ; Number of cases is 1, Range of values is 0 to 0
  6486                           ; switch strategies available:
  6487                           ; Name         Instructions Cycles
  6488                           ; simple_byte            4     3 (average)
  6489                           ; direct_byte           11     8 (fixed)
  6490                           ; jumptable            260     6 (fixed)
  6491                           ;	Chosen strategy is simple_byte
  6492     0119  0873               	movf	??_OpenSPI+1,w
  6493     011A  3A00               	xorlw	0	; case 0
  6494     011B  1903               	skipnz
  6495     011C  291E               	goto	l4259
  6496     011D  2912               	goto	l594
  6497     011E                     l4259:
  6498                           
  6499                           ; Switch size 1, requested type "simple"
  6500                           ; Number of cases is 2, Range of values is 4 to 5
  6501                           ; switch strategies available:
  6502                           ; Name         Instructions Cycles
  6503                           ; simple_byte            7     4 (average)
  6504                           ; direct_byte           17    11 (fixed)
  6505                           ; jumptable            263     9 (fixed)
  6506                           ;	Chosen strategy is simple_byte
  6507     011E  0872               	movf	??_OpenSPI,w
  6508     011F  3A04               	xorlw	4	; case 4
  6509     0120  1903               	skipnz
  6510     0121  290A               	goto	l591
  6511     0122  3A01               	xorlw	1	; case 5
  6512     0123  1903               	skipnz
  6513     0124  290D               	goto	l592
  6514     0125  2912               	goto	l594
  6515     0126                     l593:
  6516     0126  1287               	bcf	7,5	;volatile
  6517     0127  1607               	bsf	7,4	;volatile
  6518     0128  1283               	bcf	3,5	;RP0=0, select bank0
  6519     0129  1303               	bcf	3,6	;RP1=0, select bank0
  6520     012A  1694               	bsf	20,5	;volatile
  6521     012B                     l595:
  6522     012B  0008               	return
  6523     012C                     __end_of_OpenSPI:
  6524     007E                     btemp	set	126	;btemp
  6525     007E                     wtemp0	set	126
  6526                           
  6527                           	psect	config
  6528                           
  6529                           ;Config register CONFIG @ 0x2007
  6530                           ;	Oscillator Selection bits
  6531                           ;	FOSC = HS, HS oscillator
  6532                           ;	Watchdog Timer Enable bit
  6533                           ;	WDTE = OFF, WDT disabled
  6534                           ;	Power-up Timer Enable bit
  6535                           ;	PWRTE = 0x1, unprogrammed default
  6536                           ;	Brown-out Reset Enable bit
  6537                           ;	BOREN = 0x1, unprogrammed default
  6538                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  6539                           ;	LVP = 0x1, unprogrammed default
  6540                           ;	Data EEPROM Memory Code Protection bit
  6541                           ;	CPD = OFF, Data EEPROM code protection off
  6542                           ;	Flash Program Memory Write Enable bits
  6543                           ;	WRT = 0x3, unprogrammed default
  6544                           ;	In-Circuit Debugger Mode bit
  6545                           ;	DEBUG = 0x1, unprogrammed default
  6546                           ;	Flash Program Memory Code Protection bit
  6547                           ;	CP = OFF, Code protection off
  6548     2007                     	org	8199
  6549     2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     61      77
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    mcp2515_getNextFreeTXBuf@txbuf_n	PTR unsigned char  size(1) Largest target is 1
		 -> sendMsg@txbuf_n(BANK0[1]), trySendMsgBuf@txbuf_n(COMMON[1]), 

    mcp2515_id_to_buf@tbufdata	PTR unsigned char  size(1) Largest target is 4
		 -> mcp2515_write_canMsg@tbufdata(BANK0[4]), mcp2515_write_id@tbufdata(COMMON[4]), 

    mcp2515_read_canMsg@buf	PTR volatile unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    mcp2515_read_canMsg@ext	PTR volatile unsigned char  size(1) Largest target is 1
		 -> ext_flg(BANK0[1]), 

    mcp2515_read_canMsg@id	PTR volatile unsigned long  size(1) Largest target is 4
		 -> can_id(BANK0[4]), 

    mcp2515_read_canMsg@len	PTR volatile unsigned char  size(1) Largest target is 1
		 -> main@len(BANK0[1]), 

    mcp2515_read_canMsg@rtrBit	PTR volatile unsigned char  size(1) Largest target is 1
		 -> rtr(BANK0[1]), 

    mcp2515_write_canMsg@buf	PTR  unsigned char  size(1) Largest target is 8
		 -> stmp(BANK0[8]), 

    readMsgBuf@buf	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    readMsgBuf@len	PTR unsigned char  size(1) Largest target is 1
		 -> main@len(BANK0[1]), 

    readMsgBufID@buf	PTR volatile unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    readMsgBufID@ext	PTR volatile unsigned char  size(1) Largest target is 1
		 -> ext_flg(BANK0[1]), 

    readMsgBufID@id	PTR volatile unsigned long  size(1) Largest target is 4
		 -> can_id(BANK0[4]), 

    readMsgBufID@len	PTR volatile unsigned char  size(1) Largest target is 1
		 -> main@len(BANK0[1]), 

    readMsgBufID@rtrBit	PTR volatile unsigned char  size(1) Largest target is 1
		 -> rtr(BANK0[1]), 

    sendMsg@buf	PTR const unsigned char  size(1) Largest target is 8
		 -> stmp(BANK0[8]), 

    sendMsgBuf@buf	PTR const unsigned char  size(1) Largest target is 8
		 -> stmp(BANK0[8]), 


Critical Paths under _main in COMMON

    _main->_readMsgBuf
    _sendMsg->_mcp2515_write_canMsg
    _mcp2515_write_canMsg->_mcp2515_id_to_buf
    _mcp2515_start_transmit->_txSidhToRTS
    _mcp2515_getNextFreeTXBuf->_mcp2515_modifyRegister
    _readRxTxStatus->_mcp2515_readStatus
    _readMsgBufID->_mcp2515_read_canMsg
    _mcp2515_read_canMsg->_WriteSPI
    _checkReceive->_mcp2515_readStatus
    _mcp2515_readStatus->_WriteSPI
    _mcp2515_init->_setMode
    _setMode->_mcp2515_setCANCTRL_Mode
    _mcp2515_setCANCTRL_Mode->_mcp2515_requestNewMode
    _mcp2515_requestNewMode->_mcp2515_modifyRegister
    _mcp2515_modifyRegister->_txIfFlag
    _getMode->_mcp2515_readRegister
    _mcp2515_readRegister->_WriteSPI
    _mcp2515_reset->_WriteSPI
    _mcp2515_initCANBuffers->_mcp2515_setRegister
    _mcp2515_configRate->_mcp2515_setRegister
    _mcp2515_setRegister->_WriteSPI

Critical Paths under _main in BANK0

    _main->_sendMsgBuf
    _sendMsgBuf->_sendMsg
    _sendMsg->_mcp2515_write_canMsg
    _readMsgBuf->_readMsgBufID
    _readMsgBufID->_mcp2515_read_canMsg
    _begin->_mcp2515_init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   37883
                                             43 BANK0     18    18      0
                              _begin
                       _checkReceive
                           _getCanId
                            _init_CS
                         _readMsgBuf
                         _sendMsgBuf
 ---------------------------------------------------------------------------------
 (1) _sendMsgBuf                                           9     0      9    8727
                                             34 BANK0      9     0      9
                            _sendMsg
 ---------------------------------------------------------------------------------
 (2) _sendMsg                                             16     7      9    8139
                                             18 BANK0     16     7      9
           _mcp2515_getNextFreeTXBuf
               _mcp2515_readRegister
               _mcp2515_write_canMsg
 ---------------------------------------------------------------------------------
 (3) _mcp2515_write_canMsg                                19    11      8    2443
                                             12 COMMON     1     1      0
                                              0 BANK0     18    10      8
                           _WriteSPI
                  _mcp2515_id_to_buf
             _mcp2515_start_transmit
                     _txSidhToTxLoad
 ---------------------------------------------------------------------------------
 (4) _txSidhToTxLoad                                       3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _mcp2515_start_transmit                               1     1      0      66
                                              3 COMMON     1     1      0
                           _WriteSPI
                        _txSidhToRTS
 ---------------------------------------------------------------------------------
 (5) _txSidhToRTS                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _mcp2515_id_to_buf                                   12     7      5     746
                                              0 COMMON    12     7      5
 ---------------------------------------------------------------------------------
 (3) _mcp2515_getNextFreeTXBuf                             3     3      0    4700
                                              6 COMMON     3     3      0
             _mcp2515_modifyRegister
                 _mcp2515_readStatus
                          _txCtrlReg
                           _txIfFlag
                _txStatusPendingFlag
 ---------------------------------------------------------------------------------
 (4) _txStatusPendingFlag                                  3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _txIfFlag                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _txCtrlReg                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _readMsgBuf                                           2     1      1    2593
                                             13 COMMON     1     0      1
                                             16 BANK0      1     1      0
                       _readMsgBufID
                     _readRxTxStatus
 ---------------------------------------------------------------------------------
 (2) _readRxTxStatus                                       7     7      0     229
                                              2 COMMON     7     7      0
                 _mcp2515_readStatus
 ---------------------------------------------------------------------------------
 (2) _readMsgBufID                                         7     2      5    2211
                                              9 BANK0      7     2      5
                _mcp2515_read_canMsg
                     _readRxTxStatus (ARG)
 ---------------------------------------------------------------------------------
 (3) _mcp2515_read_canMsg                                 21    16      5    1432
                                              1 COMMON    12     7      5
                                              0 BANK0      9     9      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (1) _init_CS                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getCanId                                             4     0      4       0
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _checkReceive                                         3     3      0      92
                                              2 COMMON     3     3      0
                 _mcp2515_readStatus
 ---------------------------------------------------------------------------------
 (4) _mcp2515_readStatus                                   1     1      0      45
                                              1 COMMON     1     1      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (1) _begin                                                6     1      5   26305
                                              5 BANK0      6     1      5
                            _OpenSPI
                       _mcp2515_init
 ---------------------------------------------------------------------------------
 (2) _mcp2515_init                                         5     4      1   25846
                                              0 BANK0      5     4      1
                 _mcp2515_configRate
             _mcp2515_initCANBuffers
             _mcp2515_modifyRegister
                      _mcp2515_reset
            _mcp2515_setCANCTRL_Mode
                _mcp2515_setRegister
                            _setMode
 ---------------------------------------------------------------------------------
 (3) _setMode                                              1     1      0    9135
                                             13 COMMON     1     1      0
            _mcp2515_setCANCTRL_Mode
 ---------------------------------------------------------------------------------
 (4) _mcp2515_setCANCTRL_Mode                              2     2      0    9069
                                             11 COMMON     2     2      0
                            _getMode
             _mcp2515_modifyRegister
               _mcp2515_readRegister
             _mcp2515_requestNewMode
 ---------------------------------------------------------------------------------
 (5) _mcp2515_requestNewMode                               5     5      0    4502
                                              6 COMMON     5     5      0
             _mcp2515_modifyRegister
               _mcp2515_readRegister
 ---------------------------------------------------------------------------------
 (4) _mcp2515_modifyRegister                               3     1      2    4344
                                              3 COMMON     3     1      2
                           _WriteSPI
                           _txIfFlag (ARG)
 ---------------------------------------------------------------------------------
 (5) _getMode                                              0     0      0      67
               _mcp2515_readRegister
 ---------------------------------------------------------------------------------
 (3) _mcp2515_readRegister                                 2     2      0      67
                                              1 COMMON     2     2      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _mcp2515_reset                                        2     2      0      22
                                              1 COMMON     2     2      0
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _mcp2515_initCANBuffers                               4     4      0     944
                                              3 COMMON     4     4      0
                _mcp2515_setRegister
 ---------------------------------------------------------------------------------
 (3) _mcp2515_configRate                                   8     7      1    1230
                                              3 COMMON     8     7      1
                _mcp2515_setRegister
 ---------------------------------------------------------------------------------
 (3) _mcp2515_setRegister                                  2     1      1     826
                                              1 COMMON     2     1      1
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (5) _WriteSPI                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenSPI                                              5     3      2     240
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _begin
     _OpenSPI
     _mcp2515_init
       _mcp2515_configRate
         _mcp2515_setRegister
           _WriteSPI
       _mcp2515_initCANBuffers
         _mcp2515_setRegister
       _mcp2515_modifyRegister
         _WriteSPI
         _txIfFlag (ARG)
       _mcp2515_reset
         _WriteSPI
       _mcp2515_setCANCTRL_Mode
         _getMode
           _mcp2515_readRegister
             _ReadSPI
             _WriteSPI
         _mcp2515_modifyRegister
         _mcp2515_readRegister
         _mcp2515_requestNewMode
           _mcp2515_modifyRegister
           _mcp2515_readRegister
       _mcp2515_setRegister
       _setMode
         _mcp2515_setCANCTRL_Mode
   _checkReceive
     _mcp2515_readStatus
       _ReadSPI
       _WriteSPI
   _getCanId
   _init_CS
   _readMsgBuf
     _readMsgBufID
       _mcp2515_read_canMsg
         _ReadSPI
         _WriteSPI
       _readRxTxStatus (ARG)
         _mcp2515_readStatus
     _readRxTxStatus
   _sendMsgBuf
     _sendMsg
       _mcp2515_getNextFreeTXBuf
         _mcp2515_modifyRegister
         _mcp2515_readStatus
         _txCtrlReg
         _txIfFlag
         _txStatusPendingFlag
       _mcp2515_readRegister
       _mcp2515_write_canMsg
         _WriteSPI
         _mcp2515_id_to_buf
         _mcp2515_start_transmit
           _WriteSPI
           _txSidhToRTS
         _txSidhToTxLoad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3D      4D       5       96.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5B      12        0.0%
ABS                  0      0      5B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Jan 01 01:10:27 2024

                 __end_of_checkReceive 0E3F                                      pc 0002  
                                   _BF 04A0                                     l15 0D99  
                                   l51 0DB4                                     l61 0460  
                                   l63 0458                                     l48 0E56  
                        begin@clockset 0029                                     fsr 0004  
                 ??_mcp2515_configRate 0074                     _mcp2515_readStatus 0DFE  
                                  l100 0EC1                                    l200 0DD7  
                                  l203 0DA1                                    l300 0309  
                                  l140 0EDE                                    l124 0F18  
                                  l132 0F35                                    l206 0179  
                                  l215 0FBE                                    l207 0154  
                                  l240 0618                                    l209 0188  
                                  l154 0E27                                    l306 0203  
                                  l148 0EFB                                    l261 06CA  
                                  l157 0EA5                                    l341 0DEA  
                                  l262 06D1                                    l326 0279  
                                  l406 03B0                                    l351 007B  
                                  l327 0280                                    l168 0E70  
                                  l176 0031                                    l424 00CF  
                                  l416 0E8A                                    l601 0011  
                                  l337 05B5                                    l409 0383  
                                  l338 05B8                                    l179 0E11  
                                  l419 0099                                    l605 0DC5  
                                  l277 0752                                    l278 0759  
                                  l294 0FFF                                    l358 0F53  
                                  l462 0E3D                                    l607 0DBF  
                                  l279 0760                                    l463 0E3E  
                                  l439 0F83                                    l288 07E5  
                                  l298 030C                                    l591 010A  
                                  l592 010D                                    l593 0126  
                                  l585 00E2                                    l594 0112  
                                  l595 012B                                    l587 00E9  
                                  l588 00F0                                    l598 0008  
                                  _CKE 04A6                                    _CKP 00A4  
                                  _RD0 0040                                    _RD3 0043  
                                  _SMP 04A7                                    fsr0 0004  
                                  _rtr 0063                                    indf 0000  
                  ?_mcp2515_readStatus 0070                    _mcp2515_read_canMsg 0471  
                                 l3001 05D2                                   l3011 05F5  
                                 l3003 05D9                                   l3021 061A  
                                 l3013 05FC                                   l3005 05E0  
                                 l3111 073D                                   l3103 06EE  
                                 l3031 062C                                   l3023 061F  
                                 l3015 0603                                   l3007 05E7  
                                 l3121 0762                                   l3113 0744  
                                 l3105 0728                                   l3041 063A  
                                 l3033 062D                                   l3025 0626  
                                 l3017 060A                                   l3009 05EE  
                                 l3131 076C                                   l3123 0767  
                                 l3115 074B                                   l3107 072F  
                                 l3051 0684                                   l3043 063C  
                                 l3035 062F                                   l3027 0627  
                                 l3019 0611                                   l3211 0FE7  
                                 l3203 0FC6                                   l3141 0775  
                                 l3133 076E                                   l3125 0768  
                                 l3117 0754                                   l3109 0736  
                                 l3061 06A7                                   l3053 068B  
                                 l3045 063F                                   l3037 0632  
                                 l3029 0629                                   l3213 0FEB  
                                 l3205 0FDB                                   l3301 0033  
                                 l3221 0215                                   l3151 077C  
                                 l3143 0776                                   l3135 0771  
                                 l3119 075B                                   l3071 06CC  
                                 l3063 06AE                                   l3055 0692  
                                 l3039 0639                                   l3215 0FF1  
                                 l3207 0FDF                                   l3311 0046  
                                 l3303 003A                                   l3231 0232  
                                 l3223 0218                                   l3137 0772  
                                 l3129 076B                                   l3081 06DE  
                                 l3073 06D3                                   l3065 06B5  
                                 l3057 0699                                   l3049 0641  
                                 l3209 0FE3                                   l3401 0297  
                                 l3313 0048                                   l3305 003E  
                                 l3241 0245                                   l3233 0238  
                                 l3225 021C                                   l3217 0207  
                                 l3147 0779                                   l3091 06E7  
                                 l3083 06DF                                   l3075 06D8  
                                 l3067 06BC                                   l3059 06A0  
                                 l3163 07B2                                   l3331 0F54  
                                 l3315 0053                                   l3323 0070  
                                 l3307 0044                                   l3251 0267  
                                 l3243 024B                                   l3227 021F  
                                 l3219 0210                                   l3157 077E  
                                 l3149 077A                                   l3093 06EA  
                                 l3085 06E1                                   l3077 06D9  
                                 l3069 06C3                                   l3165 07C5  
                                 l3421 02DD                                   l3413 02BF  
                                 l3405 02A5                                   l3261 0475  
                                 l3341 0F6A                                   l3333 0F5B  
                                 l3317 0060                                   l3325 0074  
                                 l3253 026D                                   l3245 0251  
                                 l3229 022F                                   l3501 039D  
                                 l3167 07CA                                   l3175 07E4  
                                 l3095 06EB                                   l3087 06E4  
                                 l3079 06DB                                   l3423 02E7  
                                 l3415 02C9                                   l3407 02AF  
                                 l3271 0485                                   l3263 047B  
                                 l3351 0F7C                                   l3343 0F6D  
                                 l3335 0F5F                                   l3319 006E  
                                 l3255 0273                                   l3247 0257  
                                 l3239 023B                                   l3503 03A6  
                                 l3441 00DB                                   l2721 0DB6  
                                 l3169 07E2                                   l3089 06E5  
                                 l3433 02FF                                   l3425 02F0  
                                 l3417 02D0                                   l3513 0D93  
                                 l3281 04CB                                   l3273 0489  
                                 l3361 0085                                   l3353 0F82  
                                 l3345 0F71                                   l3337 0F62  
                                 l4241 0F0C                                   l3257 027A  
                                 l3249 025B                                   l3505 03AD  
                                 l3601 0434                                   l2723 0DBA  
                                 l4251 06F6                                   l3195 0FBF  
                                 l2731 000E                                   l3427 02F9  
                                 l3419 02D5                                   l3523 0F36  
                                 l3291 0593                                   l3283 057A  
                                 l3275 048F                                   l3259 0472  
                                 l3371 00B3                                   l3363 0095  
                                 l3347 0F75                                   l3339 0F66  
                                 l3515 0E42                                   l4243 0EEF  
                                 l3603 0440                                   l3445 00F7  
                                 l3437 00D1                                   l4253 0786  
                                 l3197 0FC5                                   l2741 0EA1  
                                 l2805 0FB0                                   l3525 0F4C  
                                 l3533 0E28                                   l3293 0595  
                                 l3285 057E                                   l3277 04C4  
                                 l3269 047C                                   l3373 00CA  
                                 l3365 009D                                   l3357 007F  
                                 l3349 0F78                                   l2813 0EAA  
                                 l4245 0ED2                                   l2901 0EE7  
                                 l3509 03AF                                   l3461 0311  
                                 l3605 0441                                   l3439 00D7  
                                 l2911 0E58                                   l4255 07BA  
                                 l2743 0EA4                                   l2735 0E8C  
                                 l2751 002E                                   l3535 0E2E  
                                 l3519 0DAA                                   l3295 05A3  
                                 l3287 0584                                   l3279 04C7  
                                 l3375 00CE                                   l3359 0081  
                                 l4247 0EB6                                   l2823 0EAE  
                                 l2807 0EA7                                   l2903 0EFA  
                                 l4239 0F29                                   l3471 032D  
                                 l3463 0319                                   l3607 044B  
                                 l4257 00FF                                   l3449 0116  
                                 l2913 0E5B                                   l4249 0649  
                                 l2729 0005                                   l2737 0E8F  
                                 l2921 0E07                                   l3537 0E34  
                                 l3297 05A7                                   l3289 058A  
                                 l3369 00AE                                   l2817 0EAC  
                                 l2809 0EA8                                   l2753 0EFD  
                                 l2833 0F1A                                   l3481 0352  
                                 l3473 0336                                   l3465 031B  
                                 l3529 0E71                                   l4259 011E  
                                 l2915 0E6D                                   l2739 0E9B  
                                 l2747 0013                                   l2931 0137  
                                 l3395 0284                                   l2923 0E0D  
                                 l3539 0E39                                   l3299 05AF  
                                 l2771 0F17                                   l2763 0F02  
                                 l2755 0EFE                                   l2851 0F34  
                                 l2843 0F1F                                   l2835 0F1B  
                                 l3491 0373                                   l3475 033C  
                                 l3467 031D                                   l3459 030D  
                                 l2749 0016                                   l2941 0169  
                                 l2933 013D                                   l3397 0289  
                                 l2925 0E10                                   l2917 0DFE  
                                 l2861 0EC4                                   l3493 0379  
                                 l3485 0354                                   l3477 0342  
                                 l3469 0323                                   l3581 03BD  
                                 l2791 0F9F                                   l2783 0F85  
                                 l2935 0145                                   l3399 0292  
                                 l2919 0E01                                   l2759 0F00  
                                 l2839 0F1D                                   l3495 038B  
                                 l3487 036A                                   l3479 034B  
                                 l3591 0405                                   l3583 03C7  
                                 l2785 0F87                                   l2945 016B  
                                 l2937 014A                                   l2929 012D  
                                 l2865 0EC6                                   l2961 01B3  
                                 l2953 018A                                   l2769 0F04  
                                 l2849 0F21                                   l3497 0395  
                                 l3489 0371                                   l3593 040F  
                                 l3585 03DD                                   l3577 03B1  
                                 l2779 0D9A                                   l2787 0F91  
                                 l2947 0170                                   l2939 015E  
                                 l2875 0ECA                                   l2859 0EC3  
                                 l2891 0EE3                                   l2963 01B8  
                                 l2955 018E                                   l2971 0DD9  
                                 l3499 0398                                   l3595 0417  
                                 l3587 03F4                                   l3579 03B7  
                                 l2981 0E1B                                   l2797 0FA1  
                                 l2789 0F98                                   l2949 0182  
                                 l2877 0EDD                                   l2869 0EC8  
                                 l2885 0EE0                                   l2965 01C8  
                                 l2957 0193                                   l2973 0DDC  
                                 l3597 0426                                   l3589 0402  
                                 l2983 0E1E                                   l2799 0FAE  
                                 l2895 0EE5                                   l2887 0EE1  
                                 l2967 01CB                                   l2959 019E  
                                 l2975 0DE7                                   l3599 0429  
             ??_mcp2515_requestNewMode 0076                                   l2993 05BA  
                                 l2977 0E12                                   l2985 0DC7  
                                 l2969 01DB                                   l2995 05BD  
                                 l2979 0E15                                   l2987 0DCD  
                                 l2997 05C4                                   l2989 0DD1  
                                 l2999 05CB                                   u1100 0FAE  
                                 u1101 0FAD                                   u1110 0137  
                                 u1111 0136                                   u1120 013D  
                                 u1105 0FAA                                   u1121 013C  
                                 u1130 014A                                   u1210 0DCD  
                                 u1131 0149                                   u1211 0DCC  
                                 u1060 0DBE                                   u1220 07CA  
                                 u1140 0169                                   u1300 04CB  
                                 u1061 0DBD                                   u1221 07C9  
                                 u1141 0168                                   u1301 04CA  
                                 u1205 01F3                                   u1070 0DC5  
                                 u1230 0FF1                                   u1150 0170  
                                 u1310 04E4                                   u1071 0DC4  
                                 u1231 0FF0                                   u1151 016F  
                                 u1080 000E                                   u1400 05B5  
                                 u1320 04EE                                   u1160 0193  
                                 u1240 0215                                   u1081 000D  
                                 u1401 05B4                                   u1321 04EF  
                                 u1161 0192                                   u1241 0214  
                                 u1090 0F9F                                   u1330 051E  
                                 u1322 04F4                                   u1410 0044  
                                 u1170 01AC                                   u1250 0251  
                                 u1091 0F9E                                   u1323 04F5  
                                 u1315 04DF                                   u1411 0043  
                                 u1251 0250                                   u2107 03C3  
                                 u1340 0528                                   u1420 0053  
                                 u1260 0273                                   u1341 0529  
                                 u1421 0052                                   u1261 0272  
                                 u2117 03FC                                   u1350 0558  
                                 u1342 052E                                   u1430 007A  
                                 u1270 0279                                   u2207 0FB2  
                                 u1343 052F                                   u1335 0519  
                                 u1431 0079                                   u1175 01A7  
                                 u1271 0278                                   u2127 0447  
                                 u1520 0297                                   u1360 0562  
                                 u1280 048F                                   u1440 0F5F  
                                 u1600 0352                                   u2217 0E22  
                                 u1521 0296                                   u1361 0563  
                                 u1281 048E                                   u1441 0F5E  
                                 u1185 01BC                                   u1601 0351  
                                 u2137 0454                                   u1530 02BE  
                                 u1370 0591                                   u1362 0568  
                                 u1450 0F6A                                   u1610 0371  
                                 u1531 02BD                                   u1371 058F  
                                 u1363 0569                                   u1355 0553  
                                 u1451 0F69                                   u1195 01D2  
                                 u1611 0370                                   u2147 0329  
                                 u1540 02D0                                   u1380 0592  
                                 u1460 0F75                                   u1620 0379  
                                 u1541 02CF                                   u1461 0F74  
                                 u2157 037F                                   u1621 0378  
                                 u1550 02FE                                   u1390 05AF  
                                 u1470 0085                                   u1630 039D  
                                 u1551 02FD                                   u2167 029D  
                                 u1391 05AE                                   u1295 0494  
                                 u1471 0084                                   u1631 039C  
                                 u1560 00E1                                   u1480 009D  
                                 u1640 03A6                                   u1561 00DE  
                                 u2177 02AB                                   u1481 009C  
                                 u1641 03A5                                   u1490 00B3  
                                 u1650 03AD                                   u1570 0323  
                                 u1730 03DD                                   u2187 02C5  
                                 u1491 00B2                                   u1651 03AC  
                                 u1571 0322                                   u1731 03DC  
                                 u1660 0F52                                   u1580 0342  
                                 u1740 040F                                   u2197 0305  
                                 u1661 0F50                                   u1581 0341  
                                 u1741 040E                                   u1670 0F53  
                                 u1590 034B                                   u1750 0434  
                                 u1591 034A                                   u1751 0433  
                                 u1680 0E34                                   u1760 0440  
                                 u1681 0E33                                   u1761 043F  
                                 u1770 046D                                   u1771 046C  
                                 u1775 0469                          begin@speedset 0025  
                                 _WCOL 00A7                ?_mcp2515_initCANBuffers 0070  
                                 _main 03B1                                   btemp 007E  
                                 _stmp 0065                                   start 0000  
                 _mcp2515_readRegister 0E8B                   ??_mcp2515_readStatus 0071  
                 ?_mcp2515_read_canMsg 0071                        __end_of_ReadSPI 0012  
                      __end_of_OpenSPI 012C                                  ?_main 0070  
                                _SSPEN 00A5                        __end_of_getMode 0DA2  
                                _begin 0F36                        __end_of_init_CS 0D9A  
                                main@i 005A         __end_of_mcp2515_initCANBuffers 1000  
                      __end_of_sendMsg 03B1                        __end_of_setMode 0DD8  
                  _mcp2515_setRegister 0E57                                  pclath 000A  
          __end_of_txStatusPendingFlag 0EFC                                  status 0003  
        mcp2515_modifyRegister@address 0075                                  wtemp0 007E  
                ?_mcp2515_readRegister 0070                    mcp2515_id_to_buf@id 0070  
                      __initialization 07E6                  ??_mcp2515_read_canMsg 0020  
                         __end_of_main 0471                   ?_mcp2515_setRegister 0071  
                      readMsgBufID@buf 002D                        readMsgBufID@len 002C  
                               ??_main 004B                        readMsgBufID@ext 002A  
                        ?_readMsgBufID 0029                 mcp2515_write_canMsg@id 0020  
                               ?_begin 0025                ?_mcp2515_start_transmit 0070  
              _mcp2515_setCANCTRL_Mode 012C                       __end_of_WriteSPI 0DC6  
        mcp2515_write_canMsg@load_addr 002A                                 _TRISA5 042D  
                               _TRISD0 0440                                 _TRISC3 043B  
                               _TRISC4 043C                                 _TRISC5 043D  
                               _SSPCON 0014                                 _SSPBUF 0013  
                            ??_ReadSPI 0070             mcp2515_modifyRegister@data 0074  
                     __end_of_getCanId 0DB5             mcp2515_modifyRegister@mask 0073  
                            ??_OpenSPI 0072                           _mcp2515_init 0281  
                               _can_id 005F                  ??_mcp2515_setRegister 0072  
                     ??_txSidhToTxLoad 0070                              ??_getMode 0073  
           ??_mcp2515_getNextFreeTXBuf 0076                       __end_of_txIfFlag 0EDF  
                       ??_readMsgBufID 007D                              ??_init_CS 0070  
                   readMsgBufID@rtrBit 002B                     readMsgBufID@status 002E  
                            ??_sendMsg 003B                              ??_setMode 007D  
       __end_of_mcp2515_start_transmit 0DEB            mcp2515_requestNewMode@Count 0077  
      mcp2515_getNextFreeTXBuf@txbuf_n 0077                           _checkReceive 0E28  
           mcp2515_configRate@canSpeed 0077                           ?_txSidhToRTS 0070  
                 mcp2515_id_to_buf@ext 0079                __end_of__initialization 07FC  
               ??_mcp2515_readRegister 0071               mcp2515_setRegister@value 0071  
                       __pcstackCOMMON 0070                           __pidataBANK0 0DA2  
                        __end_of_begin 0F54                 _mcp2515_requestNewMode 0F84  
               mcp2515_configRate@cfg1 0078                 mcp2515_configRate@cfg2 0079  
               mcp2515_configRate@cfg3 007A                     txSidhToTxLoad@sidh 0072  
            ??_mcp2515_setCANCTRL_Mode 007B                                ??_begin 007E  
                           __pbssBANK0 005D                      mcp2515_init@clock 0020  
                      mcp2515_init@res 0024                             __pmaintext 03B1  
              mcp2515_write_canMsg@dlc 002B            mcp2515_read_canMsg@pMsgSize 007B  
              mcp2515_write_canMsg@buf 0027                mcp2515_write_canMsg@len 0026  
              mcp2515_write_canMsg@ext 0024                            sendMsg@res1 003E  
                            ?_WriteSPI 0070                    mcp2515_readStatus@i 0071  
                      txSidhToRTS@sidh 0072                              ?_getCanId 0070  
                        sendMsgBuf@buf 0049                          sendMsgBuf@len 0048  
                        sendMsgBuf@ext 0046            mcp2515_read_canMsg@tbufdata 0077  
                        sendMsg@rtrBit 0037                                _SSPSTAT 0094  
                 txStatusPendingFlag@i 0072               ??_mcp2515_modifyRegister 0075  
                              _ReadSPI 0005                   __end_of_readMsgBufID 00D0  
                              _OpenSPI 00D0                              ?_txIfFlag 0070  
      __end_of_mcp2515_setCANCTRL_Mode 0189                          setMode@opMode 007D  
                           _readMsgBuf 0E3F                          _mcp2515_reset 0E12  
                           ??_WriteSPI 0070                                _getMode 0D9A  
     __end_of_mcp2515_getNextFreeTXBuf 007C                                __ptext1 0E71  
                              __ptext2 030D                                __ptext3 0204  
                              __ptext4 0F19                                __ptext5 0DD8  
                              __ptext6 0EFC                                __ptext7 0189  
                              __ptext8 0032                                __ptext9 0EDF  
                              _mcpMode 005E                                _init_CS 0D93  
                              _ext_flg 0064                                _sendMsg 030D  
                              _setMode 0DC6                             ??_getCanId 0074  
         __end_of_mcp2515_write_canMsg 0281                                main@buf 004E  
                              main@len 005C                   end_of_initialization 07FC  
                           _sendMsgBuf 0E71                  mcp2515_read_canMsg@id 0071  
          __end_of_mcp2515_read_canMsg 05B9             mcp2515_write_canMsg@rtrBit 0025  
                    __end_of_txCtrlReg 0EC2                             ??_txIfFlag 0070  
                   _readRxTxStatus$423 0072                     _readRxTxStatus$424 0074  
                   _readRxTxStatus$425 0076                         ?_mcp2515_reset 0070  
                     WriteSPI@data_out 0070               mcp2515_initCANBuffers@a1 0073  
             mcp2515_initCANBuffers@a2 0074               mcp2515_initCANBuffers@a3 0075  
                    _mcp2515_id_to_buf 0189                     ?_mcp2515_id_to_buf 0070  
                  sendMsgBuf@wait_sent 004A                              _TRISDbits 0088  
                  ??_mcp2515_id_to_buf 0075                mcp2515_readRegister@ret 0072  
          __end_of_mcp2515_setRegister 0E71                ?_mcp2515_requestNewMode 0070  
            __end_of_mcp2515_id_to_buf 0204                            ?_readMsgBuf 007D  
                     OpenSPI@smp_phase 0071  mcp2515_setCANCTRL_Mode@wakeIntEnabled 007C  
              mcp2515_configRate@clock 0073               ??_mcp2515_initCANBuffers 0073  
                 mcp2515_init@canSpeed 0023                    start_initialization 07E6  
            mcp2515_id_to_buf@tbufdata 0074          mcp2515_requestNewMode@newmode 007A  
                       readMsgBufID@id 0029                       OpenSPI@sync_mode 0074  
                       readMsgBufID@rc 002F                            ?_sendMsgBuf 0042  
        mcp2515_requestNewMode@statReg 0079                  mcp2515_write_canMsg@i 0031  
            ?_mcp2515_getNextFreeTXBuf 0070         __end_of_mcp2515_requestNewMode 0FBF  
                       _readRxTxStatus 0F54                        ??_mcp2515_reset 0071  
                           init_fetch0 0DEB                            __pdataBANK0 0065  
                 _mcp2515_write_canMsg 0204                 _mcp2515_modifyRegister 0012  
                         _readMsgBufID 007C                              ___latbits 0002  
                        __pcstackBANK0 0020                  mcp2515_configRate@set 0076  
               __end_of_readRxTxStatus 0F84                               ?_ReadSPI 0070  
                             ?_OpenSPI 0070                            _nReservedTx 005D  
                           sendMsg@buf 0039                             sendMsg@len 0038  
                           sendMsg@ext 0036                             sendMsg@res 003D  
                ?_mcp2515_write_canMsg 0020             __end_of_mcp2515_configRate 07E6  
                         sendMsgBuf@id 0042               ??_mcp2515_start_transmit 0073  
                             ?_getMode 0070               ?_mcp2515_setCANCTRL_Mode 0070  
                             ?_init_CS 0070   mcp2515_write_canMsg@buffer_sidh_addr 0030  
                             ?_sendMsg 0032                               ?_setMode 0070  
                  _txStatusPendingFlag 0EDF                        ?_readRxTxStatus 0070  
          mcp2515_readRegister@address 0071                   mcp2515_read_canMsg@i 007C  
       mcp2515_start_transmit@mcp_addr 0073             __end_of_mcp2515_readStatus 0E12  
                           txCtrlReg@i 0072                   ?_txStatusPendingFlag 0070  
                        ?_mcp2515_init 0020                              _txCtrlReg 0EA6  
              mcp2515_initCANBuffers@i 0076              mcp2515_getNextFreeTXBuf@i 0078  
  mcp2515_read_canMsg@buffer_load_addr 0076                         sendMsg@txbuf_n 003F  
                      OpenSPI@bus_mode 0070                              main@canId 0056  
             _mcp2515_write_canMsg$328 0028                          ?_checkReceive 0070  
                        ??_txSidhToRTS 0070                          readMsgBuf@buf 007D  
                        readMsgBuf@len 0030                 _mcp2515_initCANBuffers 0FBF  
           mcp2515_setRegister@address 0072                      readRxTxStatus@ret 0078  
                       ??_mcp2515_init 0021              mcp2515_read_canMsg@rtrBit 0073  
                ??_txStatusPendingFlag 0070                 ??_mcp2515_write_canMsg 007C  
                           ?_txCtrlReg 0070                       _checkReceive$438 0072  
                         ??_readMsgBuf 007E           mcp2515_write_canMsg@tbufdata 002C  
                             _WriteSPI 0DB5         mcp2515_getNextFreeTXBuf@status 0076  
                             _getCanId 0DAA                         _txSidhToTxLoad 0F19  
                       ??_checkReceive 0072                              sendMsg@id 0032  
                             __ptext10 0EC2                               __ptext11 0EA6  
                             __ptext20 0F36                               __ptext12 0E3F  
                             __ptext21 0281                               __ptext13 0F54  
                             __ptext30 0FBF                               __ptext22 0DC6  
                             __ptext14 007C                               __ptext31 05B9  
                             __ptext23 012C                               __ptext15 0471  
                             __ptext32 0E57                               __ptext24 0F84  
                             __ptext16 0D93                               __ptext33 0DB5  
                             __ptext25 0012                               __ptext17 0DAA  
                             __ptext34 00D0                               __ptext26 0D9A  
                             __ptext18 0E28                               __ptext27 0E8B  
                             __ptext19 0DFE                               __ptext28 0005  
                             __ptext29 0E12                           ??_sendMsgBuf 007D  
                            txIfFlag@i 0072                               begin@res 002A  
                   __end_of_readMsgBuf 0E57                    __end_of_txSidhToRTS 0F19  
                             _txIfFlag 0EC2                ?_mcp2515_modifyRegister 0073  
       mcp2515_setCANCTRL_Mode@newmode 007B                     __end_of_sendMsgBuf 0E8B  
         __end_of_mcp2515_readRegister 0EA6                 __end_of_txSidhToTxLoad 0F36  
                      checkReceive@res 0074                 mcp2515_read_canMsg@buf 0075  
               mcp2515_read_canMsg@len 0074                 mcp2515_read_canMsg@ext 0072  
                             init_ram0 0DEF                 _mcp2515_start_transmit 0DD8  
                     sendMsgBuf@rtrBit 0047                            ??_txCtrlReg 0070  
                __end_of_mcp2515_reset 0E28         __end_of_mcp2515_modifyRegister 0032  
                     sendMsg@uiTimeOut 0040                        ?_txSidhToTxLoad 0070  
                     sendMsg@wait_sent 003A                   __end_of_mcp2515_init 030D  
                   _mcp2515_configRate 05B9                       ??_readRxTxStatus 0072  
             _mcp2515_getNextFreeTXBuf 0032                            _txSidhToRTS 0EFC  
                  ?_mcp2515_configRate 0073                 mcp2515_id_to_buf@canid 007A  
